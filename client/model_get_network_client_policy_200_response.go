/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkClientPolicy200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkClientPolicy200Response{}

// GetNetworkClientPolicy200Response struct for GetNetworkClientPolicy200Response
type GetNetworkClientPolicy200Response struct {
	// The MAC address of the client
	Mac *string `json:"mac,omitempty"`
	// The name of the client's policy
	DevicePolicy *string `json:"devicePolicy,omitempty"`
	// The group policy identifier of the client
	GroupPolicyId *string `json:"groupPolicyId,omitempty"`
}

// NewGetNetworkClientPolicy200Response instantiates a new GetNetworkClientPolicy200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkClientPolicy200Response() *GetNetworkClientPolicy200Response {
	this := GetNetworkClientPolicy200Response{}
	return &this
}

// NewGetNetworkClientPolicy200ResponseWithDefaults instantiates a new GetNetworkClientPolicy200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkClientPolicy200ResponseWithDefaults() *GetNetworkClientPolicy200Response {
	this := GetNetworkClientPolicy200Response{}
	return &this
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *GetNetworkClientPolicy200Response) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkClientPolicy200Response) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *GetNetworkClientPolicy200Response) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *GetNetworkClientPolicy200Response) SetMac(v string) {
	o.Mac = &v
}

// GetDevicePolicy returns the DevicePolicy field value if set, zero value otherwise.
func (o *GetNetworkClientPolicy200Response) GetDevicePolicy() string {
	if o == nil || IsNil(o.DevicePolicy) {
		var ret string
		return ret
	}
	return *o.DevicePolicy
}

// GetDevicePolicyOk returns a tuple with the DevicePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkClientPolicy200Response) GetDevicePolicyOk() (*string, bool) {
	if o == nil || IsNil(o.DevicePolicy) {
		return nil, false
	}
	return o.DevicePolicy, true
}

// HasDevicePolicy returns a boolean if a field has been set.
func (o *GetNetworkClientPolicy200Response) HasDevicePolicy() bool {
	if o != nil && !IsNil(o.DevicePolicy) {
		return true
	}

	return false
}

// SetDevicePolicy gets a reference to the given string and assigns it to the DevicePolicy field.
func (o *GetNetworkClientPolicy200Response) SetDevicePolicy(v string) {
	o.DevicePolicy = &v
}

// GetGroupPolicyId returns the GroupPolicyId field value if set, zero value otherwise.
func (o *GetNetworkClientPolicy200Response) GetGroupPolicyId() string {
	if o == nil || IsNil(o.GroupPolicyId) {
		var ret string
		return ret
	}
	return *o.GroupPolicyId
}

// GetGroupPolicyIdOk returns a tuple with the GroupPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkClientPolicy200Response) GetGroupPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupPolicyId) {
		return nil, false
	}
	return o.GroupPolicyId, true
}

// HasGroupPolicyId returns a boolean if a field has been set.
func (o *GetNetworkClientPolicy200Response) HasGroupPolicyId() bool {
	if o != nil && !IsNil(o.GroupPolicyId) {
		return true
	}

	return false
}

// SetGroupPolicyId gets a reference to the given string and assigns it to the GroupPolicyId field.
func (o *GetNetworkClientPolicy200Response) SetGroupPolicyId(v string) {
	o.GroupPolicyId = &v
}

func (o GetNetworkClientPolicy200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkClientPolicy200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.DevicePolicy) {
		toSerialize["devicePolicy"] = o.DevicePolicy
	}
	if !IsNil(o.GroupPolicyId) {
		toSerialize["groupPolicyId"] = o.GroupPolicyId
	}
	return toSerialize, nil
}

type NullableGetNetworkClientPolicy200Response struct {
	value *GetNetworkClientPolicy200Response
	isSet bool
}

func (v NullableGetNetworkClientPolicy200Response) Get() *GetNetworkClientPolicy200Response {
	return v.value
}

func (v *NullableGetNetworkClientPolicy200Response) Set(val *GetNetworkClientPolicy200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkClientPolicy200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkClientPolicy200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkClientPolicy200Response(val *GetNetworkClientPolicy200Response) *NullableGetNetworkClientPolicy200Response {
	return &NullableGetNetworkClientPolicy200Response{value: val, isSet: true}
}

func (v NullableGetNetworkClientPolicy200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkClientPolicy200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


