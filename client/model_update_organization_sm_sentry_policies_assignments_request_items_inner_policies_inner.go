/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner{}

// UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner struct for UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner
type UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner struct {
	// The Sentry Policy Id, if updating an existing Sentry Policy
	PolicyId *string `json:"policyId,omitempty"`
	// The Id of the Systems Manager Network
	SmNetworkId string `json:"smNetworkId"`
	// The scope of the Sentry Policy
	Scope string `json:"scope"`
	// The tags for the Sentry Policy
	Tags []string `json:"tags"`
	// The Group Policy Id
	GroupPolicyId string `json:"groupPolicyId"`
}

type _UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner

// NewUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner instantiates a new UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner(smNetworkId string, scope string, tags []string, groupPolicyId string) *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner {
	this := UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner{}
	this.SmNetworkId = smNetworkId
	this.Scope = scope
	this.Tags = tags
	this.GroupPolicyId = groupPolicyId
	return &this
}

// NewUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInnerWithDefaults instantiates a new UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInnerWithDefaults() *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner {
	this := UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner{}
	return &this
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) GetPolicyId() string {
	if o == nil || IsNil(o.PolicyId) {
		var ret string
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) GetPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given string and assigns it to the PolicyId field.
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) SetPolicyId(v string) {
	o.PolicyId = &v
}

// GetSmNetworkId returns the SmNetworkId field value
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) GetSmNetworkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SmNetworkId
}

// GetSmNetworkIdOk returns a tuple with the SmNetworkId field value
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) GetSmNetworkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SmNetworkId, true
}

// SetSmNetworkId sets field value
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) SetSmNetworkId(v string) {
	o.SmNetworkId = v
}

// GetScope returns the Scope field value
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) GetScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) GetScopeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) SetScope(v string) {
	o.Scope = v
}

// GetTags returns the Tags field value
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) SetTags(v []string) {
	o.Tags = v
}

// GetGroupPolicyId returns the GroupPolicyId field value
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) GetGroupPolicyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupPolicyId
}

// GetGroupPolicyIdOk returns a tuple with the GroupPolicyId field value
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) GetGroupPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupPolicyId, true
}

// SetGroupPolicyId sets field value
func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) SetGroupPolicyId(v string) {
	o.GroupPolicyId = v
}

func (o UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PolicyId) {
		toSerialize["policyId"] = o.PolicyId
	}
	toSerialize["smNetworkId"] = o.SmNetworkId
	toSerialize["scope"] = o.Scope
	toSerialize["tags"] = o.Tags
	toSerialize["groupPolicyId"] = o.GroupPolicyId
	return toSerialize, nil
}

func (o *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"smNetworkId",
		"scope",
		"tags",
		"groupPolicyId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner := _UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner)

	if err != nil {
		return err
	}

	*o = UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner(varUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner)

	return err
}

type NullableUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner struct {
	value *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner
	isSet bool
}

func (v NullableUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) Get() *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner {
	return v.value
}

func (v *NullableUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) Set(val *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner(val *UpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) *NullableUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner {
	return &NullableUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner{value: val, isSet: true}
}

func (v NullableUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrganizationSmSentryPoliciesAssignmentsRequestItemsInnerPoliciesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


