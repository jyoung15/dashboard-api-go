/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetOrganizationLicensesOverview200ResponseLicenseTypesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganizationLicensesOverview200ResponseLicenseTypesInner{}

// GetOrganizationLicensesOverview200ResponseLicenseTypesInner struct for GetOrganizationLicensesOverview200ResponseLicenseTypesInner
type GetOrganizationLicensesOverview200ResponseLicenseTypesInner struct {
	// License type
	LicenseType *string `json:"licenseType,omitempty"`
	Counts *GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts `json:"counts,omitempty"`
}

// NewGetOrganizationLicensesOverview200ResponseLicenseTypesInner instantiates a new GetOrganizationLicensesOverview200ResponseLicenseTypesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganizationLicensesOverview200ResponseLicenseTypesInner() *GetOrganizationLicensesOverview200ResponseLicenseTypesInner {
	this := GetOrganizationLicensesOverview200ResponseLicenseTypesInner{}
	return &this
}

// NewGetOrganizationLicensesOverview200ResponseLicenseTypesInnerWithDefaults instantiates a new GetOrganizationLicensesOverview200ResponseLicenseTypesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganizationLicensesOverview200ResponseLicenseTypesInnerWithDefaults() *GetOrganizationLicensesOverview200ResponseLicenseTypesInner {
	this := GetOrganizationLicensesOverview200ResponseLicenseTypesInner{}
	return &this
}

// GetLicenseType returns the LicenseType field value if set, zero value otherwise.
func (o *GetOrganizationLicensesOverview200ResponseLicenseTypesInner) GetLicenseType() string {
	if o == nil || IsNil(o.LicenseType) {
		var ret string
		return ret
	}
	return *o.LicenseType
}

// GetLicenseTypeOk returns a tuple with the LicenseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLicensesOverview200ResponseLicenseTypesInner) GetLicenseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseType) {
		return nil, false
	}
	return o.LicenseType, true
}

// HasLicenseType returns a boolean if a field has been set.
func (o *GetOrganizationLicensesOverview200ResponseLicenseTypesInner) HasLicenseType() bool {
	if o != nil && !IsNil(o.LicenseType) {
		return true
	}

	return false
}

// SetLicenseType gets a reference to the given string and assigns it to the LicenseType field.
func (o *GetOrganizationLicensesOverview200ResponseLicenseTypesInner) SetLicenseType(v string) {
	o.LicenseType = &v
}

// GetCounts returns the Counts field value if set, zero value otherwise.
func (o *GetOrganizationLicensesOverview200ResponseLicenseTypesInner) GetCounts() GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts {
	if o == nil || IsNil(o.Counts) {
		var ret GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts
		return ret
	}
	return *o.Counts
}

// GetCountsOk returns a tuple with the Counts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLicensesOverview200ResponseLicenseTypesInner) GetCountsOk() (*GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts, bool) {
	if o == nil || IsNil(o.Counts) {
		return nil, false
	}
	return o.Counts, true
}

// HasCounts returns a boolean if a field has been set.
func (o *GetOrganizationLicensesOverview200ResponseLicenseTypesInner) HasCounts() bool {
	if o != nil && !IsNil(o.Counts) {
		return true
	}

	return false
}

// SetCounts gets a reference to the given GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts and assigns it to the Counts field.
func (o *GetOrganizationLicensesOverview200ResponseLicenseTypesInner) SetCounts(v GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) {
	o.Counts = &v
}

func (o GetOrganizationLicensesOverview200ResponseLicenseTypesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganizationLicensesOverview200ResponseLicenseTypesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LicenseType) {
		toSerialize["licenseType"] = o.LicenseType
	}
	if !IsNil(o.Counts) {
		toSerialize["counts"] = o.Counts
	}
	return toSerialize, nil
}

type NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInner struct {
	value *GetOrganizationLicensesOverview200ResponseLicenseTypesInner
	isSet bool
}

func (v NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInner) Get() *GetOrganizationLicensesOverview200ResponseLicenseTypesInner {
	return v.value
}

func (v *NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInner) Set(val *GetOrganizationLicensesOverview200ResponseLicenseTypesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationLicensesOverview200ResponseLicenseTypesInner(val *GetOrganizationLicensesOverview200ResponseLicenseTypesInner) *NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInner {
	return &NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInner{value: val, isSet: true}
}

func (v NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


