/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModifyNetworkSmDevicesTagsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModifyNetworkSmDevicesTagsRequest{}

// ModifyNetworkSmDevicesTagsRequest struct for ModifyNetworkSmDevicesTagsRequest
type ModifyNetworkSmDevicesTagsRequest struct {
	// The wifiMacs of the devices to be modified.
	WifiMacs []string `json:"wifiMacs,omitempty"`
	// The ids of the devices to be modified.
	Ids []string `json:"ids,omitempty"`
	// The serials of the devices to be modified.
	Serials []string `json:"serials,omitempty"`
	// The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified.
	Scope []string `json:"scope,omitempty"`
	// The tags to be added, deleted, or updated.
	Tags []string `json:"tags"`
	// One of add, delete, or update. Only devices that have been modified will be returned.
	UpdateAction string `json:"updateAction"`
}

type _ModifyNetworkSmDevicesTagsRequest ModifyNetworkSmDevicesTagsRequest

// NewModifyNetworkSmDevicesTagsRequest instantiates a new ModifyNetworkSmDevicesTagsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyNetworkSmDevicesTagsRequest(tags []string, updateAction string) *ModifyNetworkSmDevicesTagsRequest {
	this := ModifyNetworkSmDevicesTagsRequest{}
	this.Tags = tags
	this.UpdateAction = updateAction
	return &this
}

// NewModifyNetworkSmDevicesTagsRequestWithDefaults instantiates a new ModifyNetworkSmDevicesTagsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyNetworkSmDevicesTagsRequestWithDefaults() *ModifyNetworkSmDevicesTagsRequest {
	this := ModifyNetworkSmDevicesTagsRequest{}
	return &this
}

// GetWifiMacs returns the WifiMacs field value if set, zero value otherwise.
func (o *ModifyNetworkSmDevicesTagsRequest) GetWifiMacs() []string {
	if o == nil || IsNil(o.WifiMacs) {
		var ret []string
		return ret
	}
	return o.WifiMacs
}

// GetWifiMacsOk returns a tuple with the WifiMacs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyNetworkSmDevicesTagsRequest) GetWifiMacsOk() ([]string, bool) {
	if o == nil || IsNil(o.WifiMacs) {
		return nil, false
	}
	return o.WifiMacs, true
}

// HasWifiMacs returns a boolean if a field has been set.
func (o *ModifyNetworkSmDevicesTagsRequest) HasWifiMacs() bool {
	if o != nil && !IsNil(o.WifiMacs) {
		return true
	}

	return false
}

// SetWifiMacs gets a reference to the given []string and assigns it to the WifiMacs field.
func (o *ModifyNetworkSmDevicesTagsRequest) SetWifiMacs(v []string) {
	o.WifiMacs = v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *ModifyNetworkSmDevicesTagsRequest) GetIds() []string {
	if o == nil || IsNil(o.Ids) {
		var ret []string
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyNetworkSmDevicesTagsRequest) GetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *ModifyNetworkSmDevicesTagsRequest) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []string and assigns it to the Ids field.
func (o *ModifyNetworkSmDevicesTagsRequest) SetIds(v []string) {
	o.Ids = v
}

// GetSerials returns the Serials field value if set, zero value otherwise.
func (o *ModifyNetworkSmDevicesTagsRequest) GetSerials() []string {
	if o == nil || IsNil(o.Serials) {
		var ret []string
		return ret
	}
	return o.Serials
}

// GetSerialsOk returns a tuple with the Serials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyNetworkSmDevicesTagsRequest) GetSerialsOk() ([]string, bool) {
	if o == nil || IsNil(o.Serials) {
		return nil, false
	}
	return o.Serials, true
}

// HasSerials returns a boolean if a field has been set.
func (o *ModifyNetworkSmDevicesTagsRequest) HasSerials() bool {
	if o != nil && !IsNil(o.Serials) {
		return true
	}

	return false
}

// SetSerials gets a reference to the given []string and assigns it to the Serials field.
func (o *ModifyNetworkSmDevicesTagsRequest) SetSerials(v []string) {
	o.Serials = v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *ModifyNetworkSmDevicesTagsRequest) GetScope() []string {
	if o == nil || IsNil(o.Scope) {
		var ret []string
		return ret
	}
	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyNetworkSmDevicesTagsRequest) GetScopeOk() ([]string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *ModifyNetworkSmDevicesTagsRequest) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given []string and assigns it to the Scope field.
func (o *ModifyNetworkSmDevicesTagsRequest) SetScope(v []string) {
	o.Scope = v
}

// GetTags returns the Tags field value
func (o *ModifyNetworkSmDevicesTagsRequest) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *ModifyNetworkSmDevicesTagsRequest) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *ModifyNetworkSmDevicesTagsRequest) SetTags(v []string) {
	o.Tags = v
}

// GetUpdateAction returns the UpdateAction field value
func (o *ModifyNetworkSmDevicesTagsRequest) GetUpdateAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdateAction
}

// GetUpdateActionOk returns a tuple with the UpdateAction field value
// and a boolean to check if the value has been set.
func (o *ModifyNetworkSmDevicesTagsRequest) GetUpdateActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdateAction, true
}

// SetUpdateAction sets field value
func (o *ModifyNetworkSmDevicesTagsRequest) SetUpdateAction(v string) {
	o.UpdateAction = v
}

func (o ModifyNetworkSmDevicesTagsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyNetworkSmDevicesTagsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WifiMacs) {
		toSerialize["wifiMacs"] = o.WifiMacs
	}
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	if !IsNil(o.Serials) {
		toSerialize["serials"] = o.Serials
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	toSerialize["tags"] = o.Tags
	toSerialize["updateAction"] = o.UpdateAction
	return toSerialize, nil
}

func (o *ModifyNetworkSmDevicesTagsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tags",
		"updateAction",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModifyNetworkSmDevicesTagsRequest := _ModifyNetworkSmDevicesTagsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModifyNetworkSmDevicesTagsRequest)

	if err != nil {
		return err
	}

	*o = ModifyNetworkSmDevicesTagsRequest(varModifyNetworkSmDevicesTagsRequest)

	return err
}

type NullableModifyNetworkSmDevicesTagsRequest struct {
	value *ModifyNetworkSmDevicesTagsRequest
	isSet bool
}

func (v NullableModifyNetworkSmDevicesTagsRequest) Get() *ModifyNetworkSmDevicesTagsRequest {
	return v.value
}

func (v *NullableModifyNetworkSmDevicesTagsRequest) Set(val *ModifyNetworkSmDevicesTagsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyNetworkSmDevicesTagsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyNetworkSmDevicesTagsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyNetworkSmDevicesTagsRequest(val *ModifyNetworkSmDevicesTagsRequest) *NullableModifyNetworkSmDevicesTagsRequest {
	return &NullableModifyNetworkSmDevicesTagsRequest{value: val, isSet: true}
}

func (v NullableModifyNetworkSmDevicesTagsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyNetworkSmDevicesTagsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


