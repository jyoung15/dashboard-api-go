/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CreateNetworkFirmwareUpgradesStagedEventRequestProducts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkFirmwareUpgradesStagedEventRequestProducts{}

// CreateNetworkFirmwareUpgradesStagedEventRequestProducts Contains firmware upgrade version information
type CreateNetworkFirmwareUpgradesStagedEventRequestProducts struct {
	Switch *CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitch `json:"switch,omitempty"`
	SwitchCatalyst *CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalyst `json:"switchCatalyst,omitempty"`
}

// NewCreateNetworkFirmwareUpgradesStagedEventRequestProducts instantiates a new CreateNetworkFirmwareUpgradesStagedEventRequestProducts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkFirmwareUpgradesStagedEventRequestProducts() *CreateNetworkFirmwareUpgradesStagedEventRequestProducts {
	this := CreateNetworkFirmwareUpgradesStagedEventRequestProducts{}
	return &this
}

// NewCreateNetworkFirmwareUpgradesStagedEventRequestProductsWithDefaults instantiates a new CreateNetworkFirmwareUpgradesStagedEventRequestProducts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkFirmwareUpgradesStagedEventRequestProductsWithDefaults() *CreateNetworkFirmwareUpgradesStagedEventRequestProducts {
	this := CreateNetworkFirmwareUpgradesStagedEventRequestProducts{}
	return &this
}

// GetSwitch returns the Switch field value if set, zero value otherwise.
func (o *CreateNetworkFirmwareUpgradesStagedEventRequestProducts) GetSwitch() CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitch {
	if o == nil || IsNil(o.Switch) {
		var ret CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitch
		return ret
	}
	return *o.Switch
}

// GetSwitchOk returns a tuple with the Switch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkFirmwareUpgradesStagedEventRequestProducts) GetSwitchOk() (*CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitch, bool) {
	if o == nil || IsNil(o.Switch) {
		return nil, false
	}
	return o.Switch, true
}

// HasSwitch returns a boolean if a field has been set.
func (o *CreateNetworkFirmwareUpgradesStagedEventRequestProducts) HasSwitch() bool {
	if o != nil && !IsNil(o.Switch) {
		return true
	}

	return false
}

// SetSwitch gets a reference to the given CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitch and assigns it to the Switch field.
func (o *CreateNetworkFirmwareUpgradesStagedEventRequestProducts) SetSwitch(v CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitch) {
	o.Switch = &v
}

// GetSwitchCatalyst returns the SwitchCatalyst field value if set, zero value otherwise.
func (o *CreateNetworkFirmwareUpgradesStagedEventRequestProducts) GetSwitchCatalyst() CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalyst {
	if o == nil || IsNil(o.SwitchCatalyst) {
		var ret CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalyst
		return ret
	}
	return *o.SwitchCatalyst
}

// GetSwitchCatalystOk returns a tuple with the SwitchCatalyst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkFirmwareUpgradesStagedEventRequestProducts) GetSwitchCatalystOk() (*CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalyst, bool) {
	if o == nil || IsNil(o.SwitchCatalyst) {
		return nil, false
	}
	return o.SwitchCatalyst, true
}

// HasSwitchCatalyst returns a boolean if a field has been set.
func (o *CreateNetworkFirmwareUpgradesStagedEventRequestProducts) HasSwitchCatalyst() bool {
	if o != nil && !IsNil(o.SwitchCatalyst) {
		return true
	}

	return false
}

// SetSwitchCatalyst gets a reference to the given CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalyst and assigns it to the SwitchCatalyst field.
func (o *CreateNetworkFirmwareUpgradesStagedEventRequestProducts) SetSwitchCatalyst(v CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalyst) {
	o.SwitchCatalyst = &v
}

func (o CreateNetworkFirmwareUpgradesStagedEventRequestProducts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworkFirmwareUpgradesStagedEventRequestProducts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Switch) {
		toSerialize["switch"] = o.Switch
	}
	if !IsNil(o.SwitchCatalyst) {
		toSerialize["switchCatalyst"] = o.SwitchCatalyst
	}
	return toSerialize, nil
}

type NullableCreateNetworkFirmwareUpgradesStagedEventRequestProducts struct {
	value *CreateNetworkFirmwareUpgradesStagedEventRequestProducts
	isSet bool
}

func (v NullableCreateNetworkFirmwareUpgradesStagedEventRequestProducts) Get() *CreateNetworkFirmwareUpgradesStagedEventRequestProducts {
	return v.value
}

func (v *NullableCreateNetworkFirmwareUpgradesStagedEventRequestProducts) Set(val *CreateNetworkFirmwareUpgradesStagedEventRequestProducts) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkFirmwareUpgradesStagedEventRequestProducts) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkFirmwareUpgradesStagedEventRequestProducts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkFirmwareUpgradesStagedEventRequestProducts(val *CreateNetworkFirmwareUpgradesStagedEventRequestProducts) *NullableCreateNetworkFirmwareUpgradesStagedEventRequestProducts {
	return &NullableCreateNetworkFirmwareUpgradesStagedEventRequestProducts{value: val, isSet: true}
}

func (v NullableCreateNetworkFirmwareUpgradesStagedEventRequestProducts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkFirmwareUpgradesStagedEventRequestProducts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


