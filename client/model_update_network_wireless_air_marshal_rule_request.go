/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateNetworkWirelessAirMarshalRuleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkWirelessAirMarshalRuleRequest{}

// UpdateNetworkWirelessAirMarshalRuleRequest struct for UpdateNetworkWirelessAirMarshalRuleRequest
type UpdateNetworkWirelessAirMarshalRuleRequest struct {
	// Indicates if this rule will allow, block, or alert.
	Type *string `json:"type,omitempty"`
	Match *CreateNetworkWirelessAirMarshalRuleRequestMatch `json:"match,omitempty"`
}

// NewUpdateNetworkWirelessAirMarshalRuleRequest instantiates a new UpdateNetworkWirelessAirMarshalRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkWirelessAirMarshalRuleRequest() *UpdateNetworkWirelessAirMarshalRuleRequest {
	this := UpdateNetworkWirelessAirMarshalRuleRequest{}
	return &this
}

// NewUpdateNetworkWirelessAirMarshalRuleRequestWithDefaults instantiates a new UpdateNetworkWirelessAirMarshalRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkWirelessAirMarshalRuleRequestWithDefaults() *UpdateNetworkWirelessAirMarshalRuleRequest {
	this := UpdateNetworkWirelessAirMarshalRuleRequest{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateNetworkWirelessAirMarshalRuleRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkWirelessAirMarshalRuleRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UpdateNetworkWirelessAirMarshalRuleRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateNetworkWirelessAirMarshalRuleRequest) SetType(v string) {
	o.Type = &v
}

// GetMatch returns the Match field value if set, zero value otherwise.
func (o *UpdateNetworkWirelessAirMarshalRuleRequest) GetMatch() CreateNetworkWirelessAirMarshalRuleRequestMatch {
	if o == nil || IsNil(o.Match) {
		var ret CreateNetworkWirelessAirMarshalRuleRequestMatch
		return ret
	}
	return *o.Match
}

// GetMatchOk returns a tuple with the Match field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkWirelessAirMarshalRuleRequest) GetMatchOk() (*CreateNetworkWirelessAirMarshalRuleRequestMatch, bool) {
	if o == nil || IsNil(o.Match) {
		return nil, false
	}
	return o.Match, true
}

// HasMatch returns a boolean if a field has been set.
func (o *UpdateNetworkWirelessAirMarshalRuleRequest) HasMatch() bool {
	if o != nil && !IsNil(o.Match) {
		return true
	}

	return false
}

// SetMatch gets a reference to the given CreateNetworkWirelessAirMarshalRuleRequestMatch and assigns it to the Match field.
func (o *UpdateNetworkWirelessAirMarshalRuleRequest) SetMatch(v CreateNetworkWirelessAirMarshalRuleRequestMatch) {
	o.Match = &v
}

func (o UpdateNetworkWirelessAirMarshalRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkWirelessAirMarshalRuleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Match) {
		toSerialize["match"] = o.Match
	}
	return toSerialize, nil
}

type NullableUpdateNetworkWirelessAirMarshalRuleRequest struct {
	value *UpdateNetworkWirelessAirMarshalRuleRequest
	isSet bool
}

func (v NullableUpdateNetworkWirelessAirMarshalRuleRequest) Get() *UpdateNetworkWirelessAirMarshalRuleRequest {
	return v.value
}

func (v *NullableUpdateNetworkWirelessAirMarshalRuleRequest) Set(val *UpdateNetworkWirelessAirMarshalRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkWirelessAirMarshalRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkWirelessAirMarshalRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkWirelessAirMarshalRuleRequest(val *UpdateNetworkWirelessAirMarshalRuleRequest) *NullableUpdateNetworkWirelessAirMarshalRuleRequest {
	return &NullableUpdateNetworkWirelessAirMarshalRuleRequest{value: val, isSet: true}
}

func (v NullableUpdateNetworkWirelessAirMarshalRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkWirelessAirMarshalRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


