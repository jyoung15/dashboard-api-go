/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner{}

// GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner struct for GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner
type GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner struct {
	// Description of the rule (optional)
	Comment *string `json:"comment,omitempty"`
	// 'allow' or 'deny' traffic specified by this rule
	Policy string `json:"policy"`
	// The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
	Protocol string `json:"protocol"`
	// Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
	DestPort *string `json:"destPort,omitempty"`
	// Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
	DestCidr string `json:"destCidr"`
}

type _GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner

// NewGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner instantiates a new GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner(policy string, protocol string, destCidr string) *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner {
	this := GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner{}
	this.Policy = policy
	this.Protocol = protocol
	this.DestCidr = destCidr
	return &this
}

// NewGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInnerWithDefaults instantiates a new GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInnerWithDefaults() *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner {
	this := GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) SetComment(v string) {
	o.Comment = &v
}

// GetPolicy returns the Policy field value
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) GetPolicy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) GetPolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) SetPolicy(v string) {
	o.Policy = v
}

// GetProtocol returns the Protocol field value
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) GetProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) SetProtocol(v string) {
	o.Protocol = v
}

// GetDestPort returns the DestPort field value if set, zero value otherwise.
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) GetDestPort() string {
	if o == nil || IsNil(o.DestPort) {
		var ret string
		return ret
	}
	return *o.DestPort
}

// GetDestPortOk returns a tuple with the DestPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) GetDestPortOk() (*string, bool) {
	if o == nil || IsNil(o.DestPort) {
		return nil, false
	}
	return o.DestPort, true
}

// HasDestPort returns a boolean if a field has been set.
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) HasDestPort() bool {
	if o != nil && !IsNil(o.DestPort) {
		return true
	}

	return false
}

// SetDestPort gets a reference to the given string and assigns it to the DestPort field.
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) SetDestPort(v string) {
	o.DestPort = &v
}

// GetDestCidr returns the DestCidr field value
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) GetDestCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestCidr
}

// GetDestCidrOk returns a tuple with the DestCidr field value
// and a boolean to check if the value has been set.
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) GetDestCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestCidr, true
}

// SetDestCidr sets field value
func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) SetDestCidr(v string) {
	o.DestCidr = v
}

func (o GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	toSerialize["policy"] = o.Policy
	toSerialize["protocol"] = o.Protocol
	if !IsNil(o.DestPort) {
		toSerialize["destPort"] = o.DestPort
	}
	toSerialize["destCidr"] = o.DestCidr
	return toSerialize, nil
}

func (o *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"policy",
		"protocol",
		"destCidr",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner := _GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner)

	if err != nil {
		return err
	}

	*o = GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner(varGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner)

	return err
}

type NullableGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner struct {
	value *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner
	isSet bool
}

func (v NullableGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) Get() *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner {
	return v.value
}

func (v *NullableGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) Set(val *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner(val *GetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) *NullableGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner {
	return &NullableGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner{value: val, isSet: true}
}

func (v NullableGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkWirelessSsidFirewallL3FirewallRules200ResponseRulesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


