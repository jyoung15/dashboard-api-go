/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateDeviceCameraQualityAndRetentionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDeviceCameraQualityAndRetentionRequest{}

// UpdateDeviceCameraQualityAndRetentionRequest struct for UpdateDeviceCameraQualityAndRetentionRequest
type UpdateDeviceCameraQualityAndRetentionRequest struct {
	// The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
	ProfileId *string `json:"profileId,omitempty"`
	// Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera.
	MotionBasedRetentionEnabled *bool `json:"motionBasedRetentionEnabled,omitempty"`
	// Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
	AudioRecordingEnabled *bool `json:"audioRecordingEnabled,omitempty"`
	// Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
	RestrictedBandwidthModeEnabled *bool `json:"restrictedBandwidthModeEnabled,omitempty"`
	// Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.
	Quality *string `json:"quality,omitempty"`
	// Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080', '2112x2112', '2880x2880', '2688x1512' or '3840x2160'.Not all resolutions are supported by every camera model.
	Resolution *string `json:"resolution,omitempty"`
	// The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
	MotionDetectorVersion *int32 `json:"motionDetectorVersion,omitempty"`
}

// NewUpdateDeviceCameraQualityAndRetentionRequest instantiates a new UpdateDeviceCameraQualityAndRetentionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDeviceCameraQualityAndRetentionRequest() *UpdateDeviceCameraQualityAndRetentionRequest {
	this := UpdateDeviceCameraQualityAndRetentionRequest{}
	return &this
}

// NewUpdateDeviceCameraQualityAndRetentionRequestWithDefaults instantiates a new UpdateDeviceCameraQualityAndRetentionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDeviceCameraQualityAndRetentionRequestWithDefaults() *UpdateDeviceCameraQualityAndRetentionRequest {
	this := UpdateDeviceCameraQualityAndRetentionRequest{}
	return &this
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetProfileId() string {
	if o == nil || IsNil(o.ProfileId) {
		var ret string
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given string and assigns it to the ProfileId field.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) SetProfileId(v string) {
	o.ProfileId = &v
}

// GetMotionBasedRetentionEnabled returns the MotionBasedRetentionEnabled field value if set, zero value otherwise.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetMotionBasedRetentionEnabled() bool {
	if o == nil || IsNil(o.MotionBasedRetentionEnabled) {
		var ret bool
		return ret
	}
	return *o.MotionBasedRetentionEnabled
}

// GetMotionBasedRetentionEnabledOk returns a tuple with the MotionBasedRetentionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetMotionBasedRetentionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MotionBasedRetentionEnabled) {
		return nil, false
	}
	return o.MotionBasedRetentionEnabled, true
}

// HasMotionBasedRetentionEnabled returns a boolean if a field has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) HasMotionBasedRetentionEnabled() bool {
	if o != nil && !IsNil(o.MotionBasedRetentionEnabled) {
		return true
	}

	return false
}

// SetMotionBasedRetentionEnabled gets a reference to the given bool and assigns it to the MotionBasedRetentionEnabled field.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) SetMotionBasedRetentionEnabled(v bool) {
	o.MotionBasedRetentionEnabled = &v
}

// GetAudioRecordingEnabled returns the AudioRecordingEnabled field value if set, zero value otherwise.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetAudioRecordingEnabled() bool {
	if o == nil || IsNil(o.AudioRecordingEnabled) {
		var ret bool
		return ret
	}
	return *o.AudioRecordingEnabled
}

// GetAudioRecordingEnabledOk returns a tuple with the AudioRecordingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetAudioRecordingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AudioRecordingEnabled) {
		return nil, false
	}
	return o.AudioRecordingEnabled, true
}

// HasAudioRecordingEnabled returns a boolean if a field has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) HasAudioRecordingEnabled() bool {
	if o != nil && !IsNil(o.AudioRecordingEnabled) {
		return true
	}

	return false
}

// SetAudioRecordingEnabled gets a reference to the given bool and assigns it to the AudioRecordingEnabled field.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) SetAudioRecordingEnabled(v bool) {
	o.AudioRecordingEnabled = &v
}

// GetRestrictedBandwidthModeEnabled returns the RestrictedBandwidthModeEnabled field value if set, zero value otherwise.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetRestrictedBandwidthModeEnabled() bool {
	if o == nil || IsNil(o.RestrictedBandwidthModeEnabled) {
		var ret bool
		return ret
	}
	return *o.RestrictedBandwidthModeEnabled
}

// GetRestrictedBandwidthModeEnabledOk returns a tuple with the RestrictedBandwidthModeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetRestrictedBandwidthModeEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.RestrictedBandwidthModeEnabled) {
		return nil, false
	}
	return o.RestrictedBandwidthModeEnabled, true
}

// HasRestrictedBandwidthModeEnabled returns a boolean if a field has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) HasRestrictedBandwidthModeEnabled() bool {
	if o != nil && !IsNil(o.RestrictedBandwidthModeEnabled) {
		return true
	}

	return false
}

// SetRestrictedBandwidthModeEnabled gets a reference to the given bool and assigns it to the RestrictedBandwidthModeEnabled field.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) SetRestrictedBandwidthModeEnabled(v bool) {
	o.RestrictedBandwidthModeEnabled = &v
}

// GetQuality returns the Quality field value if set, zero value otherwise.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetQuality() string {
	if o == nil || IsNil(o.Quality) {
		var ret string
		return ret
	}
	return *o.Quality
}

// GetQualityOk returns a tuple with the Quality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetQualityOk() (*string, bool) {
	if o == nil || IsNil(o.Quality) {
		return nil, false
	}
	return o.Quality, true
}

// HasQuality returns a boolean if a field has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) HasQuality() bool {
	if o != nil && !IsNil(o.Quality) {
		return true
	}

	return false
}

// SetQuality gets a reference to the given string and assigns it to the Quality field.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) SetQuality(v string) {
	o.Quality = &v
}

// GetResolution returns the Resolution field value if set, zero value otherwise.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetResolution() string {
	if o == nil || IsNil(o.Resolution) {
		var ret string
		return ret
	}
	return *o.Resolution
}

// GetResolutionOk returns a tuple with the Resolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetResolutionOk() (*string, bool) {
	if o == nil || IsNil(o.Resolution) {
		return nil, false
	}
	return o.Resolution, true
}

// HasResolution returns a boolean if a field has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) HasResolution() bool {
	if o != nil && !IsNil(o.Resolution) {
		return true
	}

	return false
}

// SetResolution gets a reference to the given string and assigns it to the Resolution field.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) SetResolution(v string) {
	o.Resolution = &v
}

// GetMotionDetectorVersion returns the MotionDetectorVersion field value if set, zero value otherwise.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetMotionDetectorVersion() int32 {
	if o == nil || IsNil(o.MotionDetectorVersion) {
		var ret int32
		return ret
	}
	return *o.MotionDetectorVersion
}

// GetMotionDetectorVersionOk returns a tuple with the MotionDetectorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) GetMotionDetectorVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.MotionDetectorVersion) {
		return nil, false
	}
	return o.MotionDetectorVersion, true
}

// HasMotionDetectorVersion returns a boolean if a field has been set.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) HasMotionDetectorVersion() bool {
	if o != nil && !IsNil(o.MotionDetectorVersion) {
		return true
	}

	return false
}

// SetMotionDetectorVersion gets a reference to the given int32 and assigns it to the MotionDetectorVersion field.
func (o *UpdateDeviceCameraQualityAndRetentionRequest) SetMotionDetectorVersion(v int32) {
	o.MotionDetectorVersion = &v
}

func (o UpdateDeviceCameraQualityAndRetentionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDeviceCameraQualityAndRetentionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	if !IsNil(o.MotionBasedRetentionEnabled) {
		toSerialize["motionBasedRetentionEnabled"] = o.MotionBasedRetentionEnabled
	}
	if !IsNil(o.AudioRecordingEnabled) {
		toSerialize["audioRecordingEnabled"] = o.AudioRecordingEnabled
	}
	if !IsNil(o.RestrictedBandwidthModeEnabled) {
		toSerialize["restrictedBandwidthModeEnabled"] = o.RestrictedBandwidthModeEnabled
	}
	if !IsNil(o.Quality) {
		toSerialize["quality"] = o.Quality
	}
	if !IsNil(o.Resolution) {
		toSerialize["resolution"] = o.Resolution
	}
	if !IsNil(o.MotionDetectorVersion) {
		toSerialize["motionDetectorVersion"] = o.MotionDetectorVersion
	}
	return toSerialize, nil
}

type NullableUpdateDeviceCameraQualityAndRetentionRequest struct {
	value *UpdateDeviceCameraQualityAndRetentionRequest
	isSet bool
}

func (v NullableUpdateDeviceCameraQualityAndRetentionRequest) Get() *UpdateDeviceCameraQualityAndRetentionRequest {
	return v.value
}

func (v *NullableUpdateDeviceCameraQualityAndRetentionRequest) Set(val *UpdateDeviceCameraQualityAndRetentionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDeviceCameraQualityAndRetentionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDeviceCameraQualityAndRetentionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDeviceCameraQualityAndRetentionRequest(val *UpdateDeviceCameraQualityAndRetentionRequest) *NullableUpdateDeviceCameraQualityAndRetentionRequest {
	return &NullableUpdateDeviceCameraQualityAndRetentionRequest{value: val, isSet: true}
}

func (v NullableUpdateDeviceCameraQualityAndRetentionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDeviceCameraQualityAndRetentionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


