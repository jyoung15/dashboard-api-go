/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkApplianceWarmSpare200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkApplianceWarmSpare200Response{}

// GetNetworkApplianceWarmSpare200Response struct for GetNetworkApplianceWarmSpare200Response
type GetNetworkApplianceWarmSpare200Response struct {
	// Is the warm spare enabled
	Enabled *bool `json:"enabled,omitempty"`
	// Serial number of the primary appliance
	PrimarySerial *string `json:"primarySerial,omitempty"`
	// Serial number of the warm spare appliance
	SpareSerial *string `json:"spareSerial,omitempty"`
	// Uplink mode, either virtual or public
	UplinkMode *string `json:"uplinkMode,omitempty"`
	Wan1 *GetNetworkApplianceWarmSpare200ResponseWan1 `json:"wan1,omitempty"`
	Wan2 *GetNetworkApplianceWarmSpare200ResponseWan2 `json:"wan2,omitempty"`
}

// NewGetNetworkApplianceWarmSpare200Response instantiates a new GetNetworkApplianceWarmSpare200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkApplianceWarmSpare200Response() *GetNetworkApplianceWarmSpare200Response {
	this := GetNetworkApplianceWarmSpare200Response{}
	return &this
}

// NewGetNetworkApplianceWarmSpare200ResponseWithDefaults instantiates a new GetNetworkApplianceWarmSpare200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkApplianceWarmSpare200ResponseWithDefaults() *GetNetworkApplianceWarmSpare200Response {
	this := GetNetworkApplianceWarmSpare200Response{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetNetworkApplianceWarmSpare200Response) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceWarmSpare200Response) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetNetworkApplianceWarmSpare200Response) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetNetworkApplianceWarmSpare200Response) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetPrimarySerial returns the PrimarySerial field value if set, zero value otherwise.
func (o *GetNetworkApplianceWarmSpare200Response) GetPrimarySerial() string {
	if o == nil || IsNil(o.PrimarySerial) {
		var ret string
		return ret
	}
	return *o.PrimarySerial
}

// GetPrimarySerialOk returns a tuple with the PrimarySerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceWarmSpare200Response) GetPrimarySerialOk() (*string, bool) {
	if o == nil || IsNil(o.PrimarySerial) {
		return nil, false
	}
	return o.PrimarySerial, true
}

// HasPrimarySerial returns a boolean if a field has been set.
func (o *GetNetworkApplianceWarmSpare200Response) HasPrimarySerial() bool {
	if o != nil && !IsNil(o.PrimarySerial) {
		return true
	}

	return false
}

// SetPrimarySerial gets a reference to the given string and assigns it to the PrimarySerial field.
func (o *GetNetworkApplianceWarmSpare200Response) SetPrimarySerial(v string) {
	o.PrimarySerial = &v
}

// GetSpareSerial returns the SpareSerial field value if set, zero value otherwise.
func (o *GetNetworkApplianceWarmSpare200Response) GetSpareSerial() string {
	if o == nil || IsNil(o.SpareSerial) {
		var ret string
		return ret
	}
	return *o.SpareSerial
}

// GetSpareSerialOk returns a tuple with the SpareSerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceWarmSpare200Response) GetSpareSerialOk() (*string, bool) {
	if o == nil || IsNil(o.SpareSerial) {
		return nil, false
	}
	return o.SpareSerial, true
}

// HasSpareSerial returns a boolean if a field has been set.
func (o *GetNetworkApplianceWarmSpare200Response) HasSpareSerial() bool {
	if o != nil && !IsNil(o.SpareSerial) {
		return true
	}

	return false
}

// SetSpareSerial gets a reference to the given string and assigns it to the SpareSerial field.
func (o *GetNetworkApplianceWarmSpare200Response) SetSpareSerial(v string) {
	o.SpareSerial = &v
}

// GetUplinkMode returns the UplinkMode field value if set, zero value otherwise.
func (o *GetNetworkApplianceWarmSpare200Response) GetUplinkMode() string {
	if o == nil || IsNil(o.UplinkMode) {
		var ret string
		return ret
	}
	return *o.UplinkMode
}

// GetUplinkModeOk returns a tuple with the UplinkMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceWarmSpare200Response) GetUplinkModeOk() (*string, bool) {
	if o == nil || IsNil(o.UplinkMode) {
		return nil, false
	}
	return o.UplinkMode, true
}

// HasUplinkMode returns a boolean if a field has been set.
func (o *GetNetworkApplianceWarmSpare200Response) HasUplinkMode() bool {
	if o != nil && !IsNil(o.UplinkMode) {
		return true
	}

	return false
}

// SetUplinkMode gets a reference to the given string and assigns it to the UplinkMode field.
func (o *GetNetworkApplianceWarmSpare200Response) SetUplinkMode(v string) {
	o.UplinkMode = &v
}

// GetWan1 returns the Wan1 field value if set, zero value otherwise.
func (o *GetNetworkApplianceWarmSpare200Response) GetWan1() GetNetworkApplianceWarmSpare200ResponseWan1 {
	if o == nil || IsNil(o.Wan1) {
		var ret GetNetworkApplianceWarmSpare200ResponseWan1
		return ret
	}
	return *o.Wan1
}

// GetWan1Ok returns a tuple with the Wan1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceWarmSpare200Response) GetWan1Ok() (*GetNetworkApplianceWarmSpare200ResponseWan1, bool) {
	if o == nil || IsNil(o.Wan1) {
		return nil, false
	}
	return o.Wan1, true
}

// HasWan1 returns a boolean if a field has been set.
func (o *GetNetworkApplianceWarmSpare200Response) HasWan1() bool {
	if o != nil && !IsNil(o.Wan1) {
		return true
	}

	return false
}

// SetWan1 gets a reference to the given GetNetworkApplianceWarmSpare200ResponseWan1 and assigns it to the Wan1 field.
func (o *GetNetworkApplianceWarmSpare200Response) SetWan1(v GetNetworkApplianceWarmSpare200ResponseWan1) {
	o.Wan1 = &v
}

// GetWan2 returns the Wan2 field value if set, zero value otherwise.
func (o *GetNetworkApplianceWarmSpare200Response) GetWan2() GetNetworkApplianceWarmSpare200ResponseWan2 {
	if o == nil || IsNil(o.Wan2) {
		var ret GetNetworkApplianceWarmSpare200ResponseWan2
		return ret
	}
	return *o.Wan2
}

// GetWan2Ok returns a tuple with the Wan2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceWarmSpare200Response) GetWan2Ok() (*GetNetworkApplianceWarmSpare200ResponseWan2, bool) {
	if o == nil || IsNil(o.Wan2) {
		return nil, false
	}
	return o.Wan2, true
}

// HasWan2 returns a boolean if a field has been set.
func (o *GetNetworkApplianceWarmSpare200Response) HasWan2() bool {
	if o != nil && !IsNil(o.Wan2) {
		return true
	}

	return false
}

// SetWan2 gets a reference to the given GetNetworkApplianceWarmSpare200ResponseWan2 and assigns it to the Wan2 field.
func (o *GetNetworkApplianceWarmSpare200Response) SetWan2(v GetNetworkApplianceWarmSpare200ResponseWan2) {
	o.Wan2 = &v
}

func (o GetNetworkApplianceWarmSpare200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkApplianceWarmSpare200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.PrimarySerial) {
		toSerialize["primarySerial"] = o.PrimarySerial
	}
	if !IsNil(o.SpareSerial) {
		toSerialize["spareSerial"] = o.SpareSerial
	}
	if !IsNil(o.UplinkMode) {
		toSerialize["uplinkMode"] = o.UplinkMode
	}
	if !IsNil(o.Wan1) {
		toSerialize["wan1"] = o.Wan1
	}
	if !IsNil(o.Wan2) {
		toSerialize["wan2"] = o.Wan2
	}
	return toSerialize, nil
}

type NullableGetNetworkApplianceWarmSpare200Response struct {
	value *GetNetworkApplianceWarmSpare200Response
	isSet bool
}

func (v NullableGetNetworkApplianceWarmSpare200Response) Get() *GetNetworkApplianceWarmSpare200Response {
	return v.value
}

func (v *NullableGetNetworkApplianceWarmSpare200Response) Set(val *GetNetworkApplianceWarmSpare200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkApplianceWarmSpare200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkApplianceWarmSpare200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkApplianceWarmSpare200Response(val *GetNetworkApplianceWarmSpare200Response) *NullableGetNetworkApplianceWarmSpare200Response {
	return &NullableGetNetworkApplianceWarmSpare200Response{value: val, isSet: true}
}

func (v NullableGetNetworkApplianceWarmSpare200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkApplianceWarmSpare200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


