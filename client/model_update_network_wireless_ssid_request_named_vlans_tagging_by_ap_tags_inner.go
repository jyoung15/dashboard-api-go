/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner{}

// UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner struct for UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner
type UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner struct {
	// List of AP tags.
	Tags []string `json:"tags,omitempty"`
	// VLAN name that will be used to tag traffic.
	VlanName *string `json:"vlanName,omitempty"`
}

// NewUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner instantiates a new UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner() *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner {
	this := UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner{}
	return &this
}

// NewUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInnerWithDefaults instantiates a new UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInnerWithDefaults() *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner {
	this := UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) SetTags(v []string) {
	o.Tags = v
}

// GetVlanName returns the VlanName field value if set, zero value otherwise.
func (o *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) GetVlanName() string {
	if o == nil || IsNil(o.VlanName) {
		var ret string
		return ret
	}
	return *o.VlanName
}

// GetVlanNameOk returns a tuple with the VlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) GetVlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.VlanName) {
		return nil, false
	}
	return o.VlanName, true
}

// HasVlanName returns a boolean if a field has been set.
func (o *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) HasVlanName() bool {
	if o != nil && !IsNil(o.VlanName) {
		return true
	}

	return false
}

// SetVlanName gets a reference to the given string and assigns it to the VlanName field.
func (o *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) SetVlanName(v string) {
	o.VlanName = &v
}

func (o UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.VlanName) {
		toSerialize["vlanName"] = o.VlanName
	}
	return toSerialize, nil
}

type NullableUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner struct {
	value *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner
	isSet bool
}

func (v NullableUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) Get() *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner {
	return v.value
}

func (v *NullableUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) Set(val *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner(val *UpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) *NullableUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner {
	return &NullableUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner{value: val, isSet: true}
}

func (v NullableUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkWirelessSsidRequestNamedVlansTaggingByApTagsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


