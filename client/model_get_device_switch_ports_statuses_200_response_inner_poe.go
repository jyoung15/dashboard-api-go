/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetDeviceSwitchPortsStatuses200ResponseInnerPoe type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDeviceSwitchPortsStatuses200ResponseInnerPoe{}

// GetDeviceSwitchPortsStatuses200ResponseInnerPoe PoE status of the port.
type GetDeviceSwitchPortsStatuses200ResponseInnerPoe struct {
	// Whether the port is drawing power
	IsAllocated *bool `json:"isAllocated,omitempty"`
}

// NewGetDeviceSwitchPortsStatuses200ResponseInnerPoe instantiates a new GetDeviceSwitchPortsStatuses200ResponseInnerPoe object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeviceSwitchPortsStatuses200ResponseInnerPoe() *GetDeviceSwitchPortsStatuses200ResponseInnerPoe {
	this := GetDeviceSwitchPortsStatuses200ResponseInnerPoe{}
	return &this
}

// NewGetDeviceSwitchPortsStatuses200ResponseInnerPoeWithDefaults instantiates a new GetDeviceSwitchPortsStatuses200ResponseInnerPoe object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeviceSwitchPortsStatuses200ResponseInnerPoeWithDefaults() *GetDeviceSwitchPortsStatuses200ResponseInnerPoe {
	this := GetDeviceSwitchPortsStatuses200ResponseInnerPoe{}
	return &this
}

// GetIsAllocated returns the IsAllocated field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerPoe) GetIsAllocated() bool {
	if o == nil || IsNil(o.IsAllocated) {
		var ret bool
		return ret
	}
	return *o.IsAllocated
}

// GetIsAllocatedOk returns a tuple with the IsAllocated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerPoe) GetIsAllocatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAllocated) {
		return nil, false
	}
	return o.IsAllocated, true
}

// HasIsAllocated returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerPoe) HasIsAllocated() bool {
	if o != nil && !IsNil(o.IsAllocated) {
		return true
	}

	return false
}

// SetIsAllocated gets a reference to the given bool and assigns it to the IsAllocated field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerPoe) SetIsAllocated(v bool) {
	o.IsAllocated = &v
}

func (o GetDeviceSwitchPortsStatuses200ResponseInnerPoe) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeviceSwitchPortsStatuses200ResponseInnerPoe) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsAllocated) {
		toSerialize["isAllocated"] = o.IsAllocated
	}
	return toSerialize, nil
}

type NullableGetDeviceSwitchPortsStatuses200ResponseInnerPoe struct {
	value *GetDeviceSwitchPortsStatuses200ResponseInnerPoe
	isSet bool
}

func (v NullableGetDeviceSwitchPortsStatuses200ResponseInnerPoe) Get() *GetDeviceSwitchPortsStatuses200ResponseInnerPoe {
	return v.value
}

func (v *NullableGetDeviceSwitchPortsStatuses200ResponseInnerPoe) Set(val *GetDeviceSwitchPortsStatuses200ResponseInnerPoe) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeviceSwitchPortsStatuses200ResponseInnerPoe) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeviceSwitchPortsStatuses200ResponseInnerPoe) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeviceSwitchPortsStatuses200ResponseInnerPoe(val *GetDeviceSwitchPortsStatuses200ResponseInnerPoe) *NullableGetDeviceSwitchPortsStatuses200ResponseInnerPoe {
	return &NullableGetDeviceSwitchPortsStatuses200ResponseInnerPoe{value: val, isSet: true}
}

func (v NullableGetDeviceSwitchPortsStatuses200ResponseInnerPoe) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeviceSwitchPortsStatuses200ResponseInnerPoe) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


