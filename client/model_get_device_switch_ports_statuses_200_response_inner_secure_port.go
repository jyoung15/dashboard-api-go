/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort{}

// GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort The Secure Port status of the port.
type GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort struct {
	// Whether Secure Port is turned on for this port.
	Enabled *bool `json:"enabled,omitempty"`
	// Whether Secure Port is currently active for this port.
	Active *bool `json:"active,omitempty"`
	// The current Secure Port status.
	AuthenticationStatus *string `json:"authenticationStatus,omitempty"`
	ConfigOverrides *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePortConfigOverrides `json:"configOverrides,omitempty"`
}

// NewGetDeviceSwitchPortsStatuses200ResponseInnerSecurePort instantiates a new GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeviceSwitchPortsStatuses200ResponseInnerSecurePort() *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort {
	this := GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort{}
	return &this
}

// NewGetDeviceSwitchPortsStatuses200ResponseInnerSecurePortWithDefaults instantiates a new GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeviceSwitchPortsStatuses200ResponseInnerSecurePortWithDefaults() *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort {
	this := GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) SetActive(v bool) {
	o.Active = &v
}

// GetAuthenticationStatus returns the AuthenticationStatus field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) GetAuthenticationStatus() string {
	if o == nil || IsNil(o.AuthenticationStatus) {
		var ret string
		return ret
	}
	return *o.AuthenticationStatus
}

// GetAuthenticationStatusOk returns a tuple with the AuthenticationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) GetAuthenticationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationStatus) {
		return nil, false
	}
	return o.AuthenticationStatus, true
}

// HasAuthenticationStatus returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) HasAuthenticationStatus() bool {
	if o != nil && !IsNil(o.AuthenticationStatus) {
		return true
	}

	return false
}

// SetAuthenticationStatus gets a reference to the given string and assigns it to the AuthenticationStatus field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) SetAuthenticationStatus(v string) {
	o.AuthenticationStatus = &v
}

// GetConfigOverrides returns the ConfigOverrides field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) GetConfigOverrides() GetDeviceSwitchPortsStatuses200ResponseInnerSecurePortConfigOverrides {
	if o == nil || IsNil(o.ConfigOverrides) {
		var ret GetDeviceSwitchPortsStatuses200ResponseInnerSecurePortConfigOverrides
		return ret
	}
	return *o.ConfigOverrides
}

// GetConfigOverridesOk returns a tuple with the ConfigOverrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) GetConfigOverridesOk() (*GetDeviceSwitchPortsStatuses200ResponseInnerSecurePortConfigOverrides, bool) {
	if o == nil || IsNil(o.ConfigOverrides) {
		return nil, false
	}
	return o.ConfigOverrides, true
}

// HasConfigOverrides returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) HasConfigOverrides() bool {
	if o != nil && !IsNil(o.ConfigOverrides) {
		return true
	}

	return false
}

// SetConfigOverrides gets a reference to the given GetDeviceSwitchPortsStatuses200ResponseInnerSecurePortConfigOverrides and assigns it to the ConfigOverrides field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) SetConfigOverrides(v GetDeviceSwitchPortsStatuses200ResponseInnerSecurePortConfigOverrides) {
	o.ConfigOverrides = &v
}

func (o GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.AuthenticationStatus) {
		toSerialize["authenticationStatus"] = o.AuthenticationStatus
	}
	if !IsNil(o.ConfigOverrides) {
		toSerialize["configOverrides"] = o.ConfigOverrides
	}
	return toSerialize, nil
}

type NullableGetDeviceSwitchPortsStatuses200ResponseInnerSecurePort struct {
	value *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort
	isSet bool
}

func (v NullableGetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) Get() *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort {
	return v.value
}

func (v *NullableGetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) Set(val *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeviceSwitchPortsStatuses200ResponseInnerSecurePort(val *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) *NullableGetDeviceSwitchPortsStatuses200ResponseInnerSecurePort {
	return &NullableGetDeviceSwitchPortsStatuses200ResponseInnerSecurePort{value: val, isSet: true}
}

func (v NullableGetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


