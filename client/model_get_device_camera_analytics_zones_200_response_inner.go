/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetDeviceCameraAnalyticsZones200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDeviceCameraAnalyticsZones200ResponseInner{}

// GetDeviceCameraAnalyticsZones200ResponseInner struct for GetDeviceCameraAnalyticsZones200ResponseInner
type GetDeviceCameraAnalyticsZones200ResponseInner struct {
	// The zone ID
	Id *string `json:"id,omitempty"`
	// The zone type
	Type *string `json:"type,omitempty"`
	// The zone label
	Label *string `json:"label,omitempty"`
	RegionOfInterest *GetDeviceCameraAnalyticsZones200ResponseInnerRegionOfInterest `json:"regionOfInterest,omitempty"`
}

// NewGetDeviceCameraAnalyticsZones200ResponseInner instantiates a new GetDeviceCameraAnalyticsZones200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeviceCameraAnalyticsZones200ResponseInner() *GetDeviceCameraAnalyticsZones200ResponseInner {
	this := GetDeviceCameraAnalyticsZones200ResponseInner{}
	return &this
}

// NewGetDeviceCameraAnalyticsZones200ResponseInnerWithDefaults instantiates a new GetDeviceCameraAnalyticsZones200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeviceCameraAnalyticsZones200ResponseInnerWithDefaults() *GetDeviceCameraAnalyticsZones200ResponseInner {
	this := GetDeviceCameraAnalyticsZones200ResponseInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) SetType(v string) {
	o.Type = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) SetLabel(v string) {
	o.Label = &v
}

// GetRegionOfInterest returns the RegionOfInterest field value if set, zero value otherwise.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) GetRegionOfInterest() GetDeviceCameraAnalyticsZones200ResponseInnerRegionOfInterest {
	if o == nil || IsNil(o.RegionOfInterest) {
		var ret GetDeviceCameraAnalyticsZones200ResponseInnerRegionOfInterest
		return ret
	}
	return *o.RegionOfInterest
}

// GetRegionOfInterestOk returns a tuple with the RegionOfInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) GetRegionOfInterestOk() (*GetDeviceCameraAnalyticsZones200ResponseInnerRegionOfInterest, bool) {
	if o == nil || IsNil(o.RegionOfInterest) {
		return nil, false
	}
	return o.RegionOfInterest, true
}

// HasRegionOfInterest returns a boolean if a field has been set.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) HasRegionOfInterest() bool {
	if o != nil && !IsNil(o.RegionOfInterest) {
		return true
	}

	return false
}

// SetRegionOfInterest gets a reference to the given GetDeviceCameraAnalyticsZones200ResponseInnerRegionOfInterest and assigns it to the RegionOfInterest field.
func (o *GetDeviceCameraAnalyticsZones200ResponseInner) SetRegionOfInterest(v GetDeviceCameraAnalyticsZones200ResponseInnerRegionOfInterest) {
	o.RegionOfInterest = &v
}

func (o GetDeviceCameraAnalyticsZones200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeviceCameraAnalyticsZones200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.RegionOfInterest) {
		toSerialize["regionOfInterest"] = o.RegionOfInterest
	}
	return toSerialize, nil
}

type NullableGetDeviceCameraAnalyticsZones200ResponseInner struct {
	value *GetDeviceCameraAnalyticsZones200ResponseInner
	isSet bool
}

func (v NullableGetDeviceCameraAnalyticsZones200ResponseInner) Get() *GetDeviceCameraAnalyticsZones200ResponseInner {
	return v.value
}

func (v *NullableGetDeviceCameraAnalyticsZones200ResponseInner) Set(val *GetDeviceCameraAnalyticsZones200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeviceCameraAnalyticsZones200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeviceCameraAnalyticsZones200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeviceCameraAnalyticsZones200ResponseInner(val *GetDeviceCameraAnalyticsZones200ResponseInner) *NullableGetDeviceCameraAnalyticsZones200ResponseInner {
	return &NullableGetDeviceCameraAnalyticsZones200ResponseInner{value: val, isSet: true}
}

func (v NullableGetDeviceCameraAnalyticsZones200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeviceCameraAnalyticsZones200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


