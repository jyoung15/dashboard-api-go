/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateNetworkWirelessSsidRequestNamedVlans type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkWirelessSsidRequestNamedVlans{}

// UpdateNetworkWirelessSsidRequestNamedVlans Named VLAN settings.
type UpdateNetworkWirelessSsidRequestNamedVlans struct {
	Tagging *UpdateNetworkWirelessSsidRequestNamedVlansTagging `json:"tagging,omitempty"`
	Radius *UpdateNetworkWirelessSsidRequestNamedVlansRadius `json:"radius,omitempty"`
}

// NewUpdateNetworkWirelessSsidRequestNamedVlans instantiates a new UpdateNetworkWirelessSsidRequestNamedVlans object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkWirelessSsidRequestNamedVlans() *UpdateNetworkWirelessSsidRequestNamedVlans {
	this := UpdateNetworkWirelessSsidRequestNamedVlans{}
	return &this
}

// NewUpdateNetworkWirelessSsidRequestNamedVlansWithDefaults instantiates a new UpdateNetworkWirelessSsidRequestNamedVlans object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkWirelessSsidRequestNamedVlansWithDefaults() *UpdateNetworkWirelessSsidRequestNamedVlans {
	this := UpdateNetworkWirelessSsidRequestNamedVlans{}
	return &this
}

// GetTagging returns the Tagging field value if set, zero value otherwise.
func (o *UpdateNetworkWirelessSsidRequestNamedVlans) GetTagging() UpdateNetworkWirelessSsidRequestNamedVlansTagging {
	if o == nil || IsNil(o.Tagging) {
		var ret UpdateNetworkWirelessSsidRequestNamedVlansTagging
		return ret
	}
	return *o.Tagging
}

// GetTaggingOk returns a tuple with the Tagging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkWirelessSsidRequestNamedVlans) GetTaggingOk() (*UpdateNetworkWirelessSsidRequestNamedVlansTagging, bool) {
	if o == nil || IsNil(o.Tagging) {
		return nil, false
	}
	return o.Tagging, true
}

// HasTagging returns a boolean if a field has been set.
func (o *UpdateNetworkWirelessSsidRequestNamedVlans) HasTagging() bool {
	if o != nil && !IsNil(o.Tagging) {
		return true
	}

	return false
}

// SetTagging gets a reference to the given UpdateNetworkWirelessSsidRequestNamedVlansTagging and assigns it to the Tagging field.
func (o *UpdateNetworkWirelessSsidRequestNamedVlans) SetTagging(v UpdateNetworkWirelessSsidRequestNamedVlansTagging) {
	o.Tagging = &v
}

// GetRadius returns the Radius field value if set, zero value otherwise.
func (o *UpdateNetworkWirelessSsidRequestNamedVlans) GetRadius() UpdateNetworkWirelessSsidRequestNamedVlansRadius {
	if o == nil || IsNil(o.Radius) {
		var ret UpdateNetworkWirelessSsidRequestNamedVlansRadius
		return ret
	}
	return *o.Radius
}

// GetRadiusOk returns a tuple with the Radius field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkWirelessSsidRequestNamedVlans) GetRadiusOk() (*UpdateNetworkWirelessSsidRequestNamedVlansRadius, bool) {
	if o == nil || IsNil(o.Radius) {
		return nil, false
	}
	return o.Radius, true
}

// HasRadius returns a boolean if a field has been set.
func (o *UpdateNetworkWirelessSsidRequestNamedVlans) HasRadius() bool {
	if o != nil && !IsNil(o.Radius) {
		return true
	}

	return false
}

// SetRadius gets a reference to the given UpdateNetworkWirelessSsidRequestNamedVlansRadius and assigns it to the Radius field.
func (o *UpdateNetworkWirelessSsidRequestNamedVlans) SetRadius(v UpdateNetworkWirelessSsidRequestNamedVlansRadius) {
	o.Radius = &v
}

func (o UpdateNetworkWirelessSsidRequestNamedVlans) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkWirelessSsidRequestNamedVlans) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tagging) {
		toSerialize["tagging"] = o.Tagging
	}
	if !IsNil(o.Radius) {
		toSerialize["radius"] = o.Radius
	}
	return toSerialize, nil
}

type NullableUpdateNetworkWirelessSsidRequestNamedVlans struct {
	value *UpdateNetworkWirelessSsidRequestNamedVlans
	isSet bool
}

func (v NullableUpdateNetworkWirelessSsidRequestNamedVlans) Get() *UpdateNetworkWirelessSsidRequestNamedVlans {
	return v.value
}

func (v *NullableUpdateNetworkWirelessSsidRequestNamedVlans) Set(val *UpdateNetworkWirelessSsidRequestNamedVlans) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkWirelessSsidRequestNamedVlans) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkWirelessSsidRequestNamedVlans) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkWirelessSsidRequestNamedVlans(val *UpdateNetworkWirelessSsidRequestNamedVlans) *NullableUpdateNetworkWirelessSsidRequestNamedVlans {
	return &NullableUpdateNetworkWirelessSsidRequestNamedVlans{value: val, isSet: true}
}

func (v NullableUpdateNetworkWirelessSsidRequestNamedVlans) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkWirelessSsidRequestNamedVlans) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


