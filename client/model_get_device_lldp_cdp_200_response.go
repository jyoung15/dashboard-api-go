/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetDeviceLldpCdp200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDeviceLldpCdp200Response{}

// GetDeviceLldpCdp200Response struct for GetDeviceLldpCdp200Response
type GetDeviceLldpCdp200Response struct {
	// Source MAC address
	SourceMac *string `json:"sourceMac,omitempty"`
	// Mapping of ports to lldp and/or cdp information
	Ports *map[string]GetDeviceLldpCdp200ResponsePortsValue `json:"ports,omitempty"`
}

// NewGetDeviceLldpCdp200Response instantiates a new GetDeviceLldpCdp200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeviceLldpCdp200Response() *GetDeviceLldpCdp200Response {
	this := GetDeviceLldpCdp200Response{}
	return &this
}

// NewGetDeviceLldpCdp200ResponseWithDefaults instantiates a new GetDeviceLldpCdp200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeviceLldpCdp200ResponseWithDefaults() *GetDeviceLldpCdp200Response {
	this := GetDeviceLldpCdp200Response{}
	return &this
}

// GetSourceMac returns the SourceMac field value if set, zero value otherwise.
func (o *GetDeviceLldpCdp200Response) GetSourceMac() string {
	if o == nil || IsNil(o.SourceMac) {
		var ret string
		return ret
	}
	return *o.SourceMac
}

// GetSourceMacOk returns a tuple with the SourceMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceLldpCdp200Response) GetSourceMacOk() (*string, bool) {
	if o == nil || IsNil(o.SourceMac) {
		return nil, false
	}
	return o.SourceMac, true
}

// HasSourceMac returns a boolean if a field has been set.
func (o *GetDeviceLldpCdp200Response) HasSourceMac() bool {
	if o != nil && !IsNil(o.SourceMac) {
		return true
	}

	return false
}

// SetSourceMac gets a reference to the given string and assigns it to the SourceMac field.
func (o *GetDeviceLldpCdp200Response) SetSourceMac(v string) {
	o.SourceMac = &v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *GetDeviceLldpCdp200Response) GetPorts() map[string]GetDeviceLldpCdp200ResponsePortsValue {
	if o == nil || IsNil(o.Ports) {
		var ret map[string]GetDeviceLldpCdp200ResponsePortsValue
		return ret
	}
	return *o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceLldpCdp200Response) GetPortsOk() (*map[string]GetDeviceLldpCdp200ResponsePortsValue, bool) {
	if o == nil || IsNil(o.Ports) {
		return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *GetDeviceLldpCdp200Response) HasPorts() bool {
	if o != nil && !IsNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given map[string]GetDeviceLldpCdp200ResponsePortsValue and assigns it to the Ports field.
func (o *GetDeviceLldpCdp200Response) SetPorts(v map[string]GetDeviceLldpCdp200ResponsePortsValue) {
	o.Ports = &v
}

func (o GetDeviceLldpCdp200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeviceLldpCdp200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SourceMac) {
		toSerialize["sourceMac"] = o.SourceMac
	}
	if !IsNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}
	return toSerialize, nil
}

type NullableGetDeviceLldpCdp200Response struct {
	value *GetDeviceLldpCdp200Response
	isSet bool
}

func (v NullableGetDeviceLldpCdp200Response) Get() *GetDeviceLldpCdp200Response {
	return v.value
}

func (v *NullableGetDeviceLldpCdp200Response) Set(val *GetDeviceLldpCdp200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeviceLldpCdp200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeviceLldpCdp200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeviceLldpCdp200Response(val *GetDeviceLldpCdp200Response) *NullableGetDeviceLldpCdp200Response {
	return &NullableGetDeviceLldpCdp200Response{value: val, isSet: true}
}

func (v NullableGetDeviceLldpCdp200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeviceLldpCdp200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


