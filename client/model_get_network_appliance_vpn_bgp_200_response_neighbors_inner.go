/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkApplianceVpnBgp200ResponseNeighborsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkApplianceVpnBgp200ResponseNeighborsInner{}

// GetNetworkApplianceVpnBgp200ResponseNeighborsInner struct for GetNetworkApplianceVpnBgp200ResponseNeighborsInner
type GetNetworkApplianceVpnBgp200ResponseNeighborsInner struct {
	// The IPv4 address of the neighbor
	Ip *string `json:"ip,omitempty"`
	Ipv6 *GetNetworkApplianceVpnBgp200ResponseNeighborsInnerIpv6 `json:"ipv6,omitempty"`
	// Remote AS number of the neighbor
	RemoteAsNumber *int32 `json:"remoteAsNumber,omitempty"`
	// The maximum number of routes that the appliance can receive from the neighbor
	ReceiveLimit *int32 `json:"receiveLimit,omitempty"`
	// Whether the appliance will advertise routes learned from other Autonomous Systems
	AllowTransit *bool `json:"allowTransit,omitempty"`
	// The eBGP hold time in seconds for the neighbor
	EbgpHoldTimer *int32 `json:"ebgpHoldTimer,omitempty"`
	// The number of hops the appliance must traverse to establish a peering relationship with the neighbor
	EbgpMultihop *int32 `json:"ebgpMultihop,omitempty"`
	// The output interface the appliance uses to establish a peering relationship with the neighbor
	SourceInterface *string `json:"sourceInterface,omitempty"`
	// The IPv4 address of the neighbor that will establish a TCP session with the appliance
	NextHopIp *string `json:"nextHopIp,omitempty"`
	TtlSecurity *GetNetworkApplianceVpnBgp200ResponseNeighborsInnerTtlSecurity `json:"ttlSecurity,omitempty"`
	Authentication *GetNetworkApplianceVpnBgp200ResponseNeighborsInnerAuthentication `json:"authentication,omitempty"`
}

// NewGetNetworkApplianceVpnBgp200ResponseNeighborsInner instantiates a new GetNetworkApplianceVpnBgp200ResponseNeighborsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkApplianceVpnBgp200ResponseNeighborsInner() *GetNetworkApplianceVpnBgp200ResponseNeighborsInner {
	this := GetNetworkApplianceVpnBgp200ResponseNeighborsInner{}
	return &this
}

// NewGetNetworkApplianceVpnBgp200ResponseNeighborsInnerWithDefaults instantiates a new GetNetworkApplianceVpnBgp200ResponseNeighborsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkApplianceVpnBgp200ResponseNeighborsInnerWithDefaults() *GetNetworkApplianceVpnBgp200ResponseNeighborsInner {
	this := GetNetworkApplianceVpnBgp200ResponseNeighborsInner{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) SetIp(v string) {
	o.Ip = &v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetIpv6() GetNetworkApplianceVpnBgp200ResponseNeighborsInnerIpv6 {
	if o == nil || IsNil(o.Ipv6) {
		var ret GetNetworkApplianceVpnBgp200ResponseNeighborsInnerIpv6
		return ret
	}
	return *o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetIpv6Ok() (*GetNetworkApplianceVpnBgp200ResponseNeighborsInnerIpv6, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given GetNetworkApplianceVpnBgp200ResponseNeighborsInnerIpv6 and assigns it to the Ipv6 field.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) SetIpv6(v GetNetworkApplianceVpnBgp200ResponseNeighborsInnerIpv6) {
	o.Ipv6 = &v
}

// GetRemoteAsNumber returns the RemoteAsNumber field value if set, zero value otherwise.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetRemoteAsNumber() int32 {
	if o == nil || IsNil(o.RemoteAsNumber) {
		var ret int32
		return ret
	}
	return *o.RemoteAsNumber
}

// GetRemoteAsNumberOk returns a tuple with the RemoteAsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetRemoteAsNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.RemoteAsNumber) {
		return nil, false
	}
	return o.RemoteAsNumber, true
}

// HasRemoteAsNumber returns a boolean if a field has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) HasRemoteAsNumber() bool {
	if o != nil && !IsNil(o.RemoteAsNumber) {
		return true
	}

	return false
}

// SetRemoteAsNumber gets a reference to the given int32 and assigns it to the RemoteAsNumber field.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) SetRemoteAsNumber(v int32) {
	o.RemoteAsNumber = &v
}

// GetReceiveLimit returns the ReceiveLimit field value if set, zero value otherwise.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetReceiveLimit() int32 {
	if o == nil || IsNil(o.ReceiveLimit) {
		var ret int32
		return ret
	}
	return *o.ReceiveLimit
}

// GetReceiveLimitOk returns a tuple with the ReceiveLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetReceiveLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.ReceiveLimit) {
		return nil, false
	}
	return o.ReceiveLimit, true
}

// HasReceiveLimit returns a boolean if a field has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) HasReceiveLimit() bool {
	if o != nil && !IsNil(o.ReceiveLimit) {
		return true
	}

	return false
}

// SetReceiveLimit gets a reference to the given int32 and assigns it to the ReceiveLimit field.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) SetReceiveLimit(v int32) {
	o.ReceiveLimit = &v
}

// GetAllowTransit returns the AllowTransit field value if set, zero value otherwise.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetAllowTransit() bool {
	if o == nil || IsNil(o.AllowTransit) {
		var ret bool
		return ret
	}
	return *o.AllowTransit
}

// GetAllowTransitOk returns a tuple with the AllowTransit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetAllowTransitOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowTransit) {
		return nil, false
	}
	return o.AllowTransit, true
}

// HasAllowTransit returns a boolean if a field has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) HasAllowTransit() bool {
	if o != nil && !IsNil(o.AllowTransit) {
		return true
	}

	return false
}

// SetAllowTransit gets a reference to the given bool and assigns it to the AllowTransit field.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) SetAllowTransit(v bool) {
	o.AllowTransit = &v
}

// GetEbgpHoldTimer returns the EbgpHoldTimer field value if set, zero value otherwise.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetEbgpHoldTimer() int32 {
	if o == nil || IsNil(o.EbgpHoldTimer) {
		var ret int32
		return ret
	}
	return *o.EbgpHoldTimer
}

// GetEbgpHoldTimerOk returns a tuple with the EbgpHoldTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetEbgpHoldTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.EbgpHoldTimer) {
		return nil, false
	}
	return o.EbgpHoldTimer, true
}

// HasEbgpHoldTimer returns a boolean if a field has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) HasEbgpHoldTimer() bool {
	if o != nil && !IsNil(o.EbgpHoldTimer) {
		return true
	}

	return false
}

// SetEbgpHoldTimer gets a reference to the given int32 and assigns it to the EbgpHoldTimer field.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) SetEbgpHoldTimer(v int32) {
	o.EbgpHoldTimer = &v
}

// GetEbgpMultihop returns the EbgpMultihop field value if set, zero value otherwise.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetEbgpMultihop() int32 {
	if o == nil || IsNil(o.EbgpMultihop) {
		var ret int32
		return ret
	}
	return *o.EbgpMultihop
}

// GetEbgpMultihopOk returns a tuple with the EbgpMultihop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetEbgpMultihopOk() (*int32, bool) {
	if o == nil || IsNil(o.EbgpMultihop) {
		return nil, false
	}
	return o.EbgpMultihop, true
}

// HasEbgpMultihop returns a boolean if a field has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) HasEbgpMultihop() bool {
	if o != nil && !IsNil(o.EbgpMultihop) {
		return true
	}

	return false
}

// SetEbgpMultihop gets a reference to the given int32 and assigns it to the EbgpMultihop field.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) SetEbgpMultihop(v int32) {
	o.EbgpMultihop = &v
}

// GetSourceInterface returns the SourceInterface field value if set, zero value otherwise.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetSourceInterface() string {
	if o == nil || IsNil(o.SourceInterface) {
		var ret string
		return ret
	}
	return *o.SourceInterface
}

// GetSourceInterfaceOk returns a tuple with the SourceInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetSourceInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.SourceInterface) {
		return nil, false
	}
	return o.SourceInterface, true
}

// HasSourceInterface returns a boolean if a field has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) HasSourceInterface() bool {
	if o != nil && !IsNil(o.SourceInterface) {
		return true
	}

	return false
}

// SetSourceInterface gets a reference to the given string and assigns it to the SourceInterface field.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) SetSourceInterface(v string) {
	o.SourceInterface = &v
}

// GetNextHopIp returns the NextHopIp field value if set, zero value otherwise.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetNextHopIp() string {
	if o == nil || IsNil(o.NextHopIp) {
		var ret string
		return ret
	}
	return *o.NextHopIp
}

// GetNextHopIpOk returns a tuple with the NextHopIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetNextHopIpOk() (*string, bool) {
	if o == nil || IsNil(o.NextHopIp) {
		return nil, false
	}
	return o.NextHopIp, true
}

// HasNextHopIp returns a boolean if a field has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) HasNextHopIp() bool {
	if o != nil && !IsNil(o.NextHopIp) {
		return true
	}

	return false
}

// SetNextHopIp gets a reference to the given string and assigns it to the NextHopIp field.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) SetNextHopIp(v string) {
	o.NextHopIp = &v
}

// GetTtlSecurity returns the TtlSecurity field value if set, zero value otherwise.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetTtlSecurity() GetNetworkApplianceVpnBgp200ResponseNeighborsInnerTtlSecurity {
	if o == nil || IsNil(o.TtlSecurity) {
		var ret GetNetworkApplianceVpnBgp200ResponseNeighborsInnerTtlSecurity
		return ret
	}
	return *o.TtlSecurity
}

// GetTtlSecurityOk returns a tuple with the TtlSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetTtlSecurityOk() (*GetNetworkApplianceVpnBgp200ResponseNeighborsInnerTtlSecurity, bool) {
	if o == nil || IsNil(o.TtlSecurity) {
		return nil, false
	}
	return o.TtlSecurity, true
}

// HasTtlSecurity returns a boolean if a field has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) HasTtlSecurity() bool {
	if o != nil && !IsNil(o.TtlSecurity) {
		return true
	}

	return false
}

// SetTtlSecurity gets a reference to the given GetNetworkApplianceVpnBgp200ResponseNeighborsInnerTtlSecurity and assigns it to the TtlSecurity field.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) SetTtlSecurity(v GetNetworkApplianceVpnBgp200ResponseNeighborsInnerTtlSecurity) {
	o.TtlSecurity = &v
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetAuthentication() GetNetworkApplianceVpnBgp200ResponseNeighborsInnerAuthentication {
	if o == nil || IsNil(o.Authentication) {
		var ret GetNetworkApplianceVpnBgp200ResponseNeighborsInnerAuthentication
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) GetAuthenticationOk() (*GetNetworkApplianceVpnBgp200ResponseNeighborsInnerAuthentication, bool) {
	if o == nil || IsNil(o.Authentication) {
		return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) HasAuthentication() bool {
	if o != nil && !IsNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given GetNetworkApplianceVpnBgp200ResponseNeighborsInnerAuthentication and assigns it to the Authentication field.
func (o *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) SetAuthentication(v GetNetworkApplianceVpnBgp200ResponseNeighborsInnerAuthentication) {
	o.Authentication = &v
}

func (o GetNetworkApplianceVpnBgp200ResponseNeighborsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkApplianceVpnBgp200ResponseNeighborsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}
	if !IsNil(o.RemoteAsNumber) {
		toSerialize["remoteAsNumber"] = o.RemoteAsNumber
	}
	if !IsNil(o.ReceiveLimit) {
		toSerialize["receiveLimit"] = o.ReceiveLimit
	}
	if !IsNil(o.AllowTransit) {
		toSerialize["allowTransit"] = o.AllowTransit
	}
	if !IsNil(o.EbgpHoldTimer) {
		toSerialize["ebgpHoldTimer"] = o.EbgpHoldTimer
	}
	if !IsNil(o.EbgpMultihop) {
		toSerialize["ebgpMultihop"] = o.EbgpMultihop
	}
	if !IsNil(o.SourceInterface) {
		toSerialize["sourceInterface"] = o.SourceInterface
	}
	if !IsNil(o.NextHopIp) {
		toSerialize["nextHopIp"] = o.NextHopIp
	}
	if !IsNil(o.TtlSecurity) {
		toSerialize["ttlSecurity"] = o.TtlSecurity
	}
	if !IsNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	return toSerialize, nil
}

type NullableGetNetworkApplianceVpnBgp200ResponseNeighborsInner struct {
	value *GetNetworkApplianceVpnBgp200ResponseNeighborsInner
	isSet bool
}

func (v NullableGetNetworkApplianceVpnBgp200ResponseNeighborsInner) Get() *GetNetworkApplianceVpnBgp200ResponseNeighborsInner {
	return v.value
}

func (v *NullableGetNetworkApplianceVpnBgp200ResponseNeighborsInner) Set(val *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkApplianceVpnBgp200ResponseNeighborsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkApplianceVpnBgp200ResponseNeighborsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkApplianceVpnBgp200ResponseNeighborsInner(val *GetNetworkApplianceVpnBgp200ResponseNeighborsInner) *NullableGetNetworkApplianceVpnBgp200ResponseNeighborsInner {
	return &NullableGetNetworkApplianceVpnBgp200ResponseNeighborsInner{value: val, isSet: true}
}

func (v NullableGetNetworkApplianceVpnBgp200ResponseNeighborsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkApplianceVpnBgp200ResponseNeighborsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


