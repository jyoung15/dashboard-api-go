/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner{}

// UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner struct for UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner
type UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner struct {
	// Preferred uplink for uplink preference rule. Must be one of: 'wan1', 'wan2', 'bestForVoIP', 'loadBalancing' or 'defaultUplink'
	PreferredUplink string `json:"preferredUplink"`
	// WAN failover and failback behavior
	FailOverCriterion *string `json:"failOverCriterion,omitempty"`
	PerformanceClass *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerPerformanceClass `json:"performanceClass,omitempty"`
	// Traffic filters
	TrafficFilters []UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerTrafficFiltersInner `json:"trafficFilters"`
}

type _UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner

// NewUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner instantiates a new UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner(preferredUplink string, trafficFilters []UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerTrafficFiltersInner) *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner {
	this := UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner{}
	this.PreferredUplink = preferredUplink
	this.TrafficFilters = trafficFilters
	return &this
}

// NewUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerWithDefaults instantiates a new UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerWithDefaults() *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner {
	this := UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner{}
	return &this
}

// GetPreferredUplink returns the PreferredUplink field value
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) GetPreferredUplink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreferredUplink
}

// GetPreferredUplinkOk returns a tuple with the PreferredUplink field value
// and a boolean to check if the value has been set.
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) GetPreferredUplinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreferredUplink, true
}

// SetPreferredUplink sets field value
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) SetPreferredUplink(v string) {
	o.PreferredUplink = v
}

// GetFailOverCriterion returns the FailOverCriterion field value if set, zero value otherwise.
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) GetFailOverCriterion() string {
	if o == nil || IsNil(o.FailOverCriterion) {
		var ret string
		return ret
	}
	return *o.FailOverCriterion
}

// GetFailOverCriterionOk returns a tuple with the FailOverCriterion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) GetFailOverCriterionOk() (*string, bool) {
	if o == nil || IsNil(o.FailOverCriterion) {
		return nil, false
	}
	return o.FailOverCriterion, true
}

// HasFailOverCriterion returns a boolean if a field has been set.
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) HasFailOverCriterion() bool {
	if o != nil && !IsNil(o.FailOverCriterion) {
		return true
	}

	return false
}

// SetFailOverCriterion gets a reference to the given string and assigns it to the FailOverCriterion field.
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) SetFailOverCriterion(v string) {
	o.FailOverCriterion = &v
}

// GetPerformanceClass returns the PerformanceClass field value if set, zero value otherwise.
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) GetPerformanceClass() UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerPerformanceClass {
	if o == nil || IsNil(o.PerformanceClass) {
		var ret UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerPerformanceClass
		return ret
	}
	return *o.PerformanceClass
}

// GetPerformanceClassOk returns a tuple with the PerformanceClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) GetPerformanceClassOk() (*UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerPerformanceClass, bool) {
	if o == nil || IsNil(o.PerformanceClass) {
		return nil, false
	}
	return o.PerformanceClass, true
}

// HasPerformanceClass returns a boolean if a field has been set.
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) HasPerformanceClass() bool {
	if o != nil && !IsNil(o.PerformanceClass) {
		return true
	}

	return false
}

// SetPerformanceClass gets a reference to the given UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerPerformanceClass and assigns it to the PerformanceClass field.
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) SetPerformanceClass(v UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerPerformanceClass) {
	o.PerformanceClass = &v
}

// GetTrafficFilters returns the TrafficFilters field value
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) GetTrafficFilters() []UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerTrafficFiltersInner {
	if o == nil {
		var ret []UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerTrafficFiltersInner
		return ret
	}

	return o.TrafficFilters
}

// GetTrafficFiltersOk returns a tuple with the TrafficFilters field value
// and a boolean to check if the value has been set.
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) GetTrafficFiltersOk() ([]UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerTrafficFiltersInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrafficFilters, true
}

// SetTrafficFilters sets field value
func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) SetTrafficFilters(v []UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInnerTrafficFiltersInner) {
	o.TrafficFilters = v
}

func (o UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["preferredUplink"] = o.PreferredUplink
	if !IsNil(o.FailOverCriterion) {
		toSerialize["failOverCriterion"] = o.FailOverCriterion
	}
	if !IsNil(o.PerformanceClass) {
		toSerialize["performanceClass"] = o.PerformanceClass
	}
	toSerialize["trafficFilters"] = o.TrafficFilters
	return toSerialize, nil
}

func (o *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"preferredUplink",
		"trafficFilters",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner := _UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner)

	if err != nil {
		return err
	}

	*o = UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner(varUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner)

	return err
}

type NullableUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner struct {
	value *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner
	isSet bool
}

func (v NullableUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) Get() *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner {
	return v.value
}

func (v *NullableUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) Set(val *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner(val *UpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) *NullableUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner {
	return &NullableUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner{value: val, isSet: true}
}

func (v NullableUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkApplianceSdwanInternetPoliciesRequestWanTrafficUplinkPreferencesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


