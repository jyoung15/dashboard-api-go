/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner{}

// GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner struct for GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner
type GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner struct {
	// The license model type
	Model *string `json:"model,omitempty"`
	// The number of counts the license contains of this model
	Count *int32 `json:"count,omitempty"`
}

// NewGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner instantiates a new GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner() *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner {
	this := GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner{}
	return &this
}

// NewGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInnerWithDefaults instantiates a new GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInnerWithDefaults() *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner {
	this := GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner{}
	return &this
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) SetModel(v string) {
	o.Model = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) SetCount(v int32) {
	o.Count = &v
}

func (o GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner struct {
	value *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner
	isSet bool
}

func (v NullableGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) Get() *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner {
	return v.value
}

func (v *NullableGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) Set(val *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner(val *GetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) *NullableGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner {
	return &NullableGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner{value: val, isSet: true}
}

func (v NullableGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationLicensingCotermLicenses200ResponseInnerCountsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


