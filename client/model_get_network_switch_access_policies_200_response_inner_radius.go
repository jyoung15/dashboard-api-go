/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkSwitchAccessPolicies200ResponseInnerRadius type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkSwitchAccessPolicies200ResponseInnerRadius{}

// GetNetworkSwitchAccessPolicies200ResponseInnerRadius Object for RADIUS Settings
type GetNetworkSwitchAccessPolicies200ResponseInnerRadius struct {
	CriticalAuth *GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCriticalAuth `json:"criticalAuth,omitempty"`
	// VLAN that clients will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
	FailedAuthVlanId *int32 `json:"failedAuthVlanId,omitempty"`
	// Re-authentication period in seconds. Will be null if hostMode is Multi-Auth
	ReAuthenticationInterval *int32 `json:"reAuthenticationInterval,omitempty"`
	Cache *GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCache `json:"cache,omitempty"`
}

// NewGetNetworkSwitchAccessPolicies200ResponseInnerRadius instantiates a new GetNetworkSwitchAccessPolicies200ResponseInnerRadius object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkSwitchAccessPolicies200ResponseInnerRadius() *GetNetworkSwitchAccessPolicies200ResponseInnerRadius {
	this := GetNetworkSwitchAccessPolicies200ResponseInnerRadius{}
	return &this
}

// NewGetNetworkSwitchAccessPolicies200ResponseInnerRadiusWithDefaults instantiates a new GetNetworkSwitchAccessPolicies200ResponseInnerRadius object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkSwitchAccessPolicies200ResponseInnerRadiusWithDefaults() *GetNetworkSwitchAccessPolicies200ResponseInnerRadius {
	this := GetNetworkSwitchAccessPolicies200ResponseInnerRadius{}
	return &this
}

// GetCriticalAuth returns the CriticalAuth field value if set, zero value otherwise.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) GetCriticalAuth() GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCriticalAuth {
	if o == nil || IsNil(o.CriticalAuth) {
		var ret GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCriticalAuth
		return ret
	}
	return *o.CriticalAuth
}

// GetCriticalAuthOk returns a tuple with the CriticalAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) GetCriticalAuthOk() (*GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCriticalAuth, bool) {
	if o == nil || IsNil(o.CriticalAuth) {
		return nil, false
	}
	return o.CriticalAuth, true
}

// HasCriticalAuth returns a boolean if a field has been set.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) HasCriticalAuth() bool {
	if o != nil && !IsNil(o.CriticalAuth) {
		return true
	}

	return false
}

// SetCriticalAuth gets a reference to the given GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCriticalAuth and assigns it to the CriticalAuth field.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) SetCriticalAuth(v GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCriticalAuth) {
	o.CriticalAuth = &v
}

// GetFailedAuthVlanId returns the FailedAuthVlanId field value if set, zero value otherwise.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) GetFailedAuthVlanId() int32 {
	if o == nil || IsNil(o.FailedAuthVlanId) {
		var ret int32
		return ret
	}
	return *o.FailedAuthVlanId
}

// GetFailedAuthVlanIdOk returns a tuple with the FailedAuthVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) GetFailedAuthVlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FailedAuthVlanId) {
		return nil, false
	}
	return o.FailedAuthVlanId, true
}

// HasFailedAuthVlanId returns a boolean if a field has been set.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) HasFailedAuthVlanId() bool {
	if o != nil && !IsNil(o.FailedAuthVlanId) {
		return true
	}

	return false
}

// SetFailedAuthVlanId gets a reference to the given int32 and assigns it to the FailedAuthVlanId field.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) SetFailedAuthVlanId(v int32) {
	o.FailedAuthVlanId = &v
}

// GetReAuthenticationInterval returns the ReAuthenticationInterval field value if set, zero value otherwise.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) GetReAuthenticationInterval() int32 {
	if o == nil || IsNil(o.ReAuthenticationInterval) {
		var ret int32
		return ret
	}
	return *o.ReAuthenticationInterval
}

// GetReAuthenticationIntervalOk returns a tuple with the ReAuthenticationInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) GetReAuthenticationIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.ReAuthenticationInterval) {
		return nil, false
	}
	return o.ReAuthenticationInterval, true
}

// HasReAuthenticationInterval returns a boolean if a field has been set.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) HasReAuthenticationInterval() bool {
	if o != nil && !IsNil(o.ReAuthenticationInterval) {
		return true
	}

	return false
}

// SetReAuthenticationInterval gets a reference to the given int32 and assigns it to the ReAuthenticationInterval field.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) SetReAuthenticationInterval(v int32) {
	o.ReAuthenticationInterval = &v
}

// GetCache returns the Cache field value if set, zero value otherwise.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) GetCache() GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCache {
	if o == nil || IsNil(o.Cache) {
		var ret GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCache
		return ret
	}
	return *o.Cache
}

// GetCacheOk returns a tuple with the Cache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) GetCacheOk() (*GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCache, bool) {
	if o == nil || IsNil(o.Cache) {
		return nil, false
	}
	return o.Cache, true
}

// HasCache returns a boolean if a field has been set.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) HasCache() bool {
	if o != nil && !IsNil(o.Cache) {
		return true
	}

	return false
}

// SetCache gets a reference to the given GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCache and assigns it to the Cache field.
func (o *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) SetCache(v GetNetworkSwitchAccessPolicies200ResponseInnerRadiusCache) {
	o.Cache = &v
}

func (o GetNetworkSwitchAccessPolicies200ResponseInnerRadius) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkSwitchAccessPolicies200ResponseInnerRadius) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CriticalAuth) {
		toSerialize["criticalAuth"] = o.CriticalAuth
	}
	if !IsNil(o.FailedAuthVlanId) {
		toSerialize["failedAuthVlanId"] = o.FailedAuthVlanId
	}
	if !IsNil(o.ReAuthenticationInterval) {
		toSerialize["reAuthenticationInterval"] = o.ReAuthenticationInterval
	}
	if !IsNil(o.Cache) {
		toSerialize["cache"] = o.Cache
	}
	return toSerialize, nil
}

type NullableGetNetworkSwitchAccessPolicies200ResponseInnerRadius struct {
	value *GetNetworkSwitchAccessPolicies200ResponseInnerRadius
	isSet bool
}

func (v NullableGetNetworkSwitchAccessPolicies200ResponseInnerRadius) Get() *GetNetworkSwitchAccessPolicies200ResponseInnerRadius {
	return v.value
}

func (v *NullableGetNetworkSwitchAccessPolicies200ResponseInnerRadius) Set(val *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkSwitchAccessPolicies200ResponseInnerRadius) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkSwitchAccessPolicies200ResponseInnerRadius) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkSwitchAccessPolicies200ResponseInnerRadius(val *GetNetworkSwitchAccessPolicies200ResponseInnerRadius) *NullableGetNetworkSwitchAccessPolicies200ResponseInnerRadius {
	return &NullableGetNetworkSwitchAccessPolicies200ResponseInnerRadius{value: val, isSet: true}
}

func (v NullableGetNetworkSwitchAccessPolicies200ResponseInnerRadius) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkSwitchAccessPolicies200ResponseInnerRadius) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


