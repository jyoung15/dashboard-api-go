/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateNetworkVlanProfileRequestVlanNamesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkVlanProfileRequestVlanNamesInner{}

// CreateNetworkVlanProfileRequestVlanNamesInner struct for CreateNetworkVlanProfileRequestVlanNamesInner
type CreateNetworkVlanProfileRequestVlanNamesInner struct {
	// Name of the VLAN, string length must be from 1 to 32 characters
	Name string `json:"name"`
	// VLAN ID
	VlanId string `json:"vlanId"`
	AdaptivePolicyGroup *CreateNetworkVlanProfileRequestVlanNamesInnerAdaptivePolicyGroup `json:"adaptivePolicyGroup,omitempty"`
}

type _CreateNetworkVlanProfileRequestVlanNamesInner CreateNetworkVlanProfileRequestVlanNamesInner

// NewCreateNetworkVlanProfileRequestVlanNamesInner instantiates a new CreateNetworkVlanProfileRequestVlanNamesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkVlanProfileRequestVlanNamesInner(name string, vlanId string) *CreateNetworkVlanProfileRequestVlanNamesInner {
	this := CreateNetworkVlanProfileRequestVlanNamesInner{}
	this.Name = name
	this.VlanId = vlanId
	return &this
}

// NewCreateNetworkVlanProfileRequestVlanNamesInnerWithDefaults instantiates a new CreateNetworkVlanProfileRequestVlanNamesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkVlanProfileRequestVlanNamesInnerWithDefaults() *CreateNetworkVlanProfileRequestVlanNamesInner {
	this := CreateNetworkVlanProfileRequestVlanNamesInner{}
	return &this
}

// GetName returns the Name field value
func (o *CreateNetworkVlanProfileRequestVlanNamesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkVlanProfileRequestVlanNamesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateNetworkVlanProfileRequestVlanNamesInner) SetName(v string) {
	o.Name = v
}

// GetVlanId returns the VlanId field value
func (o *CreateNetworkVlanProfileRequestVlanNamesInner) GetVlanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkVlanProfileRequestVlanNamesInner) GetVlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VlanId, true
}

// SetVlanId sets field value
func (o *CreateNetworkVlanProfileRequestVlanNamesInner) SetVlanId(v string) {
	o.VlanId = v
}

// GetAdaptivePolicyGroup returns the AdaptivePolicyGroup field value if set, zero value otherwise.
func (o *CreateNetworkVlanProfileRequestVlanNamesInner) GetAdaptivePolicyGroup() CreateNetworkVlanProfileRequestVlanNamesInnerAdaptivePolicyGroup {
	if o == nil || IsNil(o.AdaptivePolicyGroup) {
		var ret CreateNetworkVlanProfileRequestVlanNamesInnerAdaptivePolicyGroup
		return ret
	}
	return *o.AdaptivePolicyGroup
}

// GetAdaptivePolicyGroupOk returns a tuple with the AdaptivePolicyGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkVlanProfileRequestVlanNamesInner) GetAdaptivePolicyGroupOk() (*CreateNetworkVlanProfileRequestVlanNamesInnerAdaptivePolicyGroup, bool) {
	if o == nil || IsNil(o.AdaptivePolicyGroup) {
		return nil, false
	}
	return o.AdaptivePolicyGroup, true
}

// HasAdaptivePolicyGroup returns a boolean if a field has been set.
func (o *CreateNetworkVlanProfileRequestVlanNamesInner) HasAdaptivePolicyGroup() bool {
	if o != nil && !IsNil(o.AdaptivePolicyGroup) {
		return true
	}

	return false
}

// SetAdaptivePolicyGroup gets a reference to the given CreateNetworkVlanProfileRequestVlanNamesInnerAdaptivePolicyGroup and assigns it to the AdaptivePolicyGroup field.
func (o *CreateNetworkVlanProfileRequestVlanNamesInner) SetAdaptivePolicyGroup(v CreateNetworkVlanProfileRequestVlanNamesInnerAdaptivePolicyGroup) {
	o.AdaptivePolicyGroup = &v
}

func (o CreateNetworkVlanProfileRequestVlanNamesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworkVlanProfileRequestVlanNamesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["vlanId"] = o.VlanId
	if !IsNil(o.AdaptivePolicyGroup) {
		toSerialize["adaptivePolicyGroup"] = o.AdaptivePolicyGroup
	}
	return toSerialize, nil
}

func (o *CreateNetworkVlanProfileRequestVlanNamesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"vlanId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateNetworkVlanProfileRequestVlanNamesInner := _CreateNetworkVlanProfileRequestVlanNamesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateNetworkVlanProfileRequestVlanNamesInner)

	if err != nil {
		return err
	}

	*o = CreateNetworkVlanProfileRequestVlanNamesInner(varCreateNetworkVlanProfileRequestVlanNamesInner)

	return err
}

type NullableCreateNetworkVlanProfileRequestVlanNamesInner struct {
	value *CreateNetworkVlanProfileRequestVlanNamesInner
	isSet bool
}

func (v NullableCreateNetworkVlanProfileRequestVlanNamesInner) Get() *CreateNetworkVlanProfileRequestVlanNamesInner {
	return v.value
}

func (v *NullableCreateNetworkVlanProfileRequestVlanNamesInner) Set(val *CreateNetworkVlanProfileRequestVlanNamesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkVlanProfileRequestVlanNamesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkVlanProfileRequestVlanNamesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkVlanProfileRequestVlanNamesInner(val *CreateNetworkVlanProfileRequestVlanNamesInner) *NullableCreateNetworkVlanProfileRequestVlanNamesInner {
	return &NullableCreateNetworkVlanProfileRequestVlanNamesInner{value: val, isSet: true}
}

func (v NullableCreateNetworkVlanProfileRequestVlanNamesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkVlanProfileRequestVlanNamesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


