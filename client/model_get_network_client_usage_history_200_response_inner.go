/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the GetNetworkClientUsageHistory200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkClientUsageHistory200ResponseInner{}

// GetNetworkClientUsageHistory200ResponseInner struct for GetNetworkClientUsageHistory200ResponseInner
type GetNetworkClientUsageHistory200ResponseInner struct {
	// Usage received by the client on a given day
	Received *float32 `json:"received,omitempty"`
	// Usage sent by the client on a given day
	Sent *float32 `json:"sent,omitempty"`
	// The day's timestamp
	Ts *time.Time `json:"ts,omitempty"`
}

// NewGetNetworkClientUsageHistory200ResponseInner instantiates a new GetNetworkClientUsageHistory200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkClientUsageHistory200ResponseInner() *GetNetworkClientUsageHistory200ResponseInner {
	this := GetNetworkClientUsageHistory200ResponseInner{}
	return &this
}

// NewGetNetworkClientUsageHistory200ResponseInnerWithDefaults instantiates a new GetNetworkClientUsageHistory200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkClientUsageHistory200ResponseInnerWithDefaults() *GetNetworkClientUsageHistory200ResponseInner {
	this := GetNetworkClientUsageHistory200ResponseInner{}
	return &this
}

// GetReceived returns the Received field value if set, zero value otherwise.
func (o *GetNetworkClientUsageHistory200ResponseInner) GetReceived() float32 {
	if o == nil || IsNil(o.Received) {
		var ret float32
		return ret
	}
	return *o.Received
}

// GetReceivedOk returns a tuple with the Received field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkClientUsageHistory200ResponseInner) GetReceivedOk() (*float32, bool) {
	if o == nil || IsNil(o.Received) {
		return nil, false
	}
	return o.Received, true
}

// HasReceived returns a boolean if a field has been set.
func (o *GetNetworkClientUsageHistory200ResponseInner) HasReceived() bool {
	if o != nil && !IsNil(o.Received) {
		return true
	}

	return false
}

// SetReceived gets a reference to the given float32 and assigns it to the Received field.
func (o *GetNetworkClientUsageHistory200ResponseInner) SetReceived(v float32) {
	o.Received = &v
}

// GetSent returns the Sent field value if set, zero value otherwise.
func (o *GetNetworkClientUsageHistory200ResponseInner) GetSent() float32 {
	if o == nil || IsNil(o.Sent) {
		var ret float32
		return ret
	}
	return *o.Sent
}

// GetSentOk returns a tuple with the Sent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkClientUsageHistory200ResponseInner) GetSentOk() (*float32, bool) {
	if o == nil || IsNil(o.Sent) {
		return nil, false
	}
	return o.Sent, true
}

// HasSent returns a boolean if a field has been set.
func (o *GetNetworkClientUsageHistory200ResponseInner) HasSent() bool {
	if o != nil && !IsNil(o.Sent) {
		return true
	}

	return false
}

// SetSent gets a reference to the given float32 and assigns it to the Sent field.
func (o *GetNetworkClientUsageHistory200ResponseInner) SetSent(v float32) {
	o.Sent = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *GetNetworkClientUsageHistory200ResponseInner) GetTs() time.Time {
	if o == nil || IsNil(o.Ts) {
		var ret time.Time
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkClientUsageHistory200ResponseInner) GetTsOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *GetNetworkClientUsageHistory200ResponseInner) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given time.Time and assigns it to the Ts field.
func (o *GetNetworkClientUsageHistory200ResponseInner) SetTs(v time.Time) {
	o.Ts = &v
}

func (o GetNetworkClientUsageHistory200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkClientUsageHistory200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Received) {
		toSerialize["received"] = o.Received
	}
	if !IsNil(o.Sent) {
		toSerialize["sent"] = o.Sent
	}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	return toSerialize, nil
}

type NullableGetNetworkClientUsageHistory200ResponseInner struct {
	value *GetNetworkClientUsageHistory200ResponseInner
	isSet bool
}

func (v NullableGetNetworkClientUsageHistory200ResponseInner) Get() *GetNetworkClientUsageHistory200ResponseInner {
	return v.value
}

func (v *NullableGetNetworkClientUsageHistory200ResponseInner) Set(val *GetNetworkClientUsageHistory200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkClientUsageHistory200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkClientUsageHistory200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkClientUsageHistory200ResponseInner(val *GetNetworkClientUsageHistory200ResponseInner) *NullableGetNetworkClientUsageHistory200ResponseInner {
	return &NullableGetNetworkClientUsageHistory200ResponseInner{value: val, isSet: true}
}

func (v NullableGetNetworkClientUsageHistory200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkClientUsageHistory200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


