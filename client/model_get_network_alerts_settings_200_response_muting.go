/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkAlertsSettings200ResponseMuting type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkAlertsSettings200ResponseMuting{}

// GetNetworkAlertsSettings200ResponseMuting Mute alerts under certain conditions
type GetNetworkAlertsSettings200ResponseMuting struct {
	ByPortSchedules *GetNetworkAlertsSettings200ResponseMutingByPortSchedules `json:"byPortSchedules,omitempty"`
}

// NewGetNetworkAlertsSettings200ResponseMuting instantiates a new GetNetworkAlertsSettings200ResponseMuting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkAlertsSettings200ResponseMuting() *GetNetworkAlertsSettings200ResponseMuting {
	this := GetNetworkAlertsSettings200ResponseMuting{}
	return &this
}

// NewGetNetworkAlertsSettings200ResponseMutingWithDefaults instantiates a new GetNetworkAlertsSettings200ResponseMuting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkAlertsSettings200ResponseMutingWithDefaults() *GetNetworkAlertsSettings200ResponseMuting {
	this := GetNetworkAlertsSettings200ResponseMuting{}
	return &this
}

// GetByPortSchedules returns the ByPortSchedules field value if set, zero value otherwise.
func (o *GetNetworkAlertsSettings200ResponseMuting) GetByPortSchedules() GetNetworkAlertsSettings200ResponseMutingByPortSchedules {
	if o == nil || IsNil(o.ByPortSchedules) {
		var ret GetNetworkAlertsSettings200ResponseMutingByPortSchedules
		return ret
	}
	return *o.ByPortSchedules
}

// GetByPortSchedulesOk returns a tuple with the ByPortSchedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkAlertsSettings200ResponseMuting) GetByPortSchedulesOk() (*GetNetworkAlertsSettings200ResponseMutingByPortSchedules, bool) {
	if o == nil || IsNil(o.ByPortSchedules) {
		return nil, false
	}
	return o.ByPortSchedules, true
}

// HasByPortSchedules returns a boolean if a field has been set.
func (o *GetNetworkAlertsSettings200ResponseMuting) HasByPortSchedules() bool {
	if o != nil && !IsNil(o.ByPortSchedules) {
		return true
	}

	return false
}

// SetByPortSchedules gets a reference to the given GetNetworkAlertsSettings200ResponseMutingByPortSchedules and assigns it to the ByPortSchedules field.
func (o *GetNetworkAlertsSettings200ResponseMuting) SetByPortSchedules(v GetNetworkAlertsSettings200ResponseMutingByPortSchedules) {
	o.ByPortSchedules = &v
}

func (o GetNetworkAlertsSettings200ResponseMuting) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkAlertsSettings200ResponseMuting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ByPortSchedules) {
		toSerialize["byPortSchedules"] = o.ByPortSchedules
	}
	return toSerialize, nil
}

type NullableGetNetworkAlertsSettings200ResponseMuting struct {
	value *GetNetworkAlertsSettings200ResponseMuting
	isSet bool
}

func (v NullableGetNetworkAlertsSettings200ResponseMuting) Get() *GetNetworkAlertsSettings200ResponseMuting {
	return v.value
}

func (v *NullableGetNetworkAlertsSettings200ResponseMuting) Set(val *GetNetworkAlertsSettings200ResponseMuting) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkAlertsSettings200ResponseMuting) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkAlertsSettings200ResponseMuting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkAlertsSettings200ResponseMuting(val *GetNetworkAlertsSettings200ResponseMuting) *NullableGetNetworkAlertsSettings200ResponseMuting {
	return &NullableGetNetworkAlertsSettings200ResponseMuting{value: val, isSet: true}
}

func (v NullableGetNetworkAlertsSettings200ResponseMuting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkAlertsSettings200ResponseMuting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


