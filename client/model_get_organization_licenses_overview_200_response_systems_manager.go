/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetOrganizationLicensesOverview200ResponseSystemsManager type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganizationLicensesOverview200ResponseSystemsManager{}

// GetOrganizationLicensesOverview200ResponseSystemsManager Aggregated data for Systems Manager licenses (Per-device licensing only)
type GetOrganizationLicensesOverview200ResponseSystemsManager struct {
	Counts *GetOrganizationLicensesOverview200ResponseSystemsManagerCounts `json:"counts,omitempty"`
}

// NewGetOrganizationLicensesOverview200ResponseSystemsManager instantiates a new GetOrganizationLicensesOverview200ResponseSystemsManager object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganizationLicensesOverview200ResponseSystemsManager() *GetOrganizationLicensesOverview200ResponseSystemsManager {
	this := GetOrganizationLicensesOverview200ResponseSystemsManager{}
	return &this
}

// NewGetOrganizationLicensesOverview200ResponseSystemsManagerWithDefaults instantiates a new GetOrganizationLicensesOverview200ResponseSystemsManager object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganizationLicensesOverview200ResponseSystemsManagerWithDefaults() *GetOrganizationLicensesOverview200ResponseSystemsManager {
	this := GetOrganizationLicensesOverview200ResponseSystemsManager{}
	return &this
}

// GetCounts returns the Counts field value if set, zero value otherwise.
func (o *GetOrganizationLicensesOverview200ResponseSystemsManager) GetCounts() GetOrganizationLicensesOverview200ResponseSystemsManagerCounts {
	if o == nil || IsNil(o.Counts) {
		var ret GetOrganizationLicensesOverview200ResponseSystemsManagerCounts
		return ret
	}
	return *o.Counts
}

// GetCountsOk returns a tuple with the Counts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLicensesOverview200ResponseSystemsManager) GetCountsOk() (*GetOrganizationLicensesOverview200ResponseSystemsManagerCounts, bool) {
	if o == nil || IsNil(o.Counts) {
		return nil, false
	}
	return o.Counts, true
}

// HasCounts returns a boolean if a field has been set.
func (o *GetOrganizationLicensesOverview200ResponseSystemsManager) HasCounts() bool {
	if o != nil && !IsNil(o.Counts) {
		return true
	}

	return false
}

// SetCounts gets a reference to the given GetOrganizationLicensesOverview200ResponseSystemsManagerCounts and assigns it to the Counts field.
func (o *GetOrganizationLicensesOverview200ResponseSystemsManager) SetCounts(v GetOrganizationLicensesOverview200ResponseSystemsManagerCounts) {
	o.Counts = &v
}

func (o GetOrganizationLicensesOverview200ResponseSystemsManager) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganizationLicensesOverview200ResponseSystemsManager) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Counts) {
		toSerialize["counts"] = o.Counts
	}
	return toSerialize, nil
}

type NullableGetOrganizationLicensesOverview200ResponseSystemsManager struct {
	value *GetOrganizationLicensesOverview200ResponseSystemsManager
	isSet bool
}

func (v NullableGetOrganizationLicensesOverview200ResponseSystemsManager) Get() *GetOrganizationLicensesOverview200ResponseSystemsManager {
	return v.value
}

func (v *NullableGetOrganizationLicensesOverview200ResponseSystemsManager) Set(val *GetOrganizationLicensesOverview200ResponseSystemsManager) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationLicensesOverview200ResponseSystemsManager) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationLicensesOverview200ResponseSystemsManager) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationLicensesOverview200ResponseSystemsManager(val *GetOrganizationLicensesOverview200ResponseSystemsManager) *NullableGetOrganizationLicensesOverview200ResponseSystemsManager {
	return &NullableGetOrganizationLicensesOverview200ResponseSystemsManager{value: val, isSet: true}
}

func (v NullableGetOrganizationLicensesOverview200ResponseSystemsManager) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationLicensesOverview200ResponseSystemsManager) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


