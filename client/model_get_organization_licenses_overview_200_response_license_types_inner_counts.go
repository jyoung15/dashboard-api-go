/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts{}

// GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts Aggregated count data for the license type
type GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts struct {
	// The number of unassigned licenses
	Unassigned *int32 `json:"unassigned,omitempty"`
}

// NewGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts instantiates a new GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts() *GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts {
	this := GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts{}
	return &this
}

// NewGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCountsWithDefaults instantiates a new GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCountsWithDefaults() *GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts {
	this := GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts{}
	return &this
}

// GetUnassigned returns the Unassigned field value if set, zero value otherwise.
func (o *GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) GetUnassigned() int32 {
	if o == nil || IsNil(o.Unassigned) {
		var ret int32
		return ret
	}
	return *o.Unassigned
}

// GetUnassignedOk returns a tuple with the Unassigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) GetUnassignedOk() (*int32, bool) {
	if o == nil || IsNil(o.Unassigned) {
		return nil, false
	}
	return o.Unassigned, true
}

// HasUnassigned returns a boolean if a field has been set.
func (o *GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) HasUnassigned() bool {
	if o != nil && !IsNil(o.Unassigned) {
		return true
	}

	return false
}

// SetUnassigned gets a reference to the given int32 and assigns it to the Unassigned field.
func (o *GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) SetUnassigned(v int32) {
	o.Unassigned = &v
}

func (o GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Unassigned) {
		toSerialize["unassigned"] = o.Unassigned
	}
	return toSerialize, nil
}

type NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts struct {
	value *GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts
	isSet bool
}

func (v NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) Get() *GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts {
	return v.value
}

func (v *NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) Set(val *GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts(val *GetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) *NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts {
	return &NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts{value: val, isSet: true}
}

func (v NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationLicensesOverview200ResponseLicenseTypesInnerCounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


