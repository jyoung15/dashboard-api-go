/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProvisionNetworkClientsRequestPoliciesBySsid0 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisionNetworkClientsRequestPoliciesBySsid0{}

// ProvisionNetworkClientsRequestPoliciesBySsid0 The number for the SSID
type ProvisionNetworkClientsRequestPoliciesBySsid0 struct {
	// The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
	DevicePolicy string `json:"devicePolicy"`
	// The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored.
	GroupPolicyId *string `json:"groupPolicyId,omitempty"`
}

type _ProvisionNetworkClientsRequestPoliciesBySsid0 ProvisionNetworkClientsRequestPoliciesBySsid0

// NewProvisionNetworkClientsRequestPoliciesBySsid0 instantiates a new ProvisionNetworkClientsRequestPoliciesBySsid0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisionNetworkClientsRequestPoliciesBySsid0(devicePolicy string) *ProvisionNetworkClientsRequestPoliciesBySsid0 {
	this := ProvisionNetworkClientsRequestPoliciesBySsid0{}
	this.DevicePolicy = devicePolicy
	return &this
}

// NewProvisionNetworkClientsRequestPoliciesBySsid0WithDefaults instantiates a new ProvisionNetworkClientsRequestPoliciesBySsid0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisionNetworkClientsRequestPoliciesBySsid0WithDefaults() *ProvisionNetworkClientsRequestPoliciesBySsid0 {
	this := ProvisionNetworkClientsRequestPoliciesBySsid0{}
	return &this
}

// GetDevicePolicy returns the DevicePolicy field value
func (o *ProvisionNetworkClientsRequestPoliciesBySsid0) GetDevicePolicy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DevicePolicy
}

// GetDevicePolicyOk returns a tuple with the DevicePolicy field value
// and a boolean to check if the value has been set.
func (o *ProvisionNetworkClientsRequestPoliciesBySsid0) GetDevicePolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DevicePolicy, true
}

// SetDevicePolicy sets field value
func (o *ProvisionNetworkClientsRequestPoliciesBySsid0) SetDevicePolicy(v string) {
	o.DevicePolicy = v
}

// GetGroupPolicyId returns the GroupPolicyId field value if set, zero value otherwise.
func (o *ProvisionNetworkClientsRequestPoliciesBySsid0) GetGroupPolicyId() string {
	if o == nil || IsNil(o.GroupPolicyId) {
		var ret string
		return ret
	}
	return *o.GroupPolicyId
}

// GetGroupPolicyIdOk returns a tuple with the GroupPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionNetworkClientsRequestPoliciesBySsid0) GetGroupPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupPolicyId) {
		return nil, false
	}
	return o.GroupPolicyId, true
}

// HasGroupPolicyId returns a boolean if a field has been set.
func (o *ProvisionNetworkClientsRequestPoliciesBySsid0) HasGroupPolicyId() bool {
	if o != nil && !IsNil(o.GroupPolicyId) {
		return true
	}

	return false
}

// SetGroupPolicyId gets a reference to the given string and assigns it to the GroupPolicyId field.
func (o *ProvisionNetworkClientsRequestPoliciesBySsid0) SetGroupPolicyId(v string) {
	o.GroupPolicyId = &v
}

func (o ProvisionNetworkClientsRequestPoliciesBySsid0) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisionNetworkClientsRequestPoliciesBySsid0) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["devicePolicy"] = o.DevicePolicy
	if !IsNil(o.GroupPolicyId) {
		toSerialize["groupPolicyId"] = o.GroupPolicyId
	}
	return toSerialize, nil
}

func (o *ProvisionNetworkClientsRequestPoliciesBySsid0) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"devicePolicy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProvisionNetworkClientsRequestPoliciesBySsid0 := _ProvisionNetworkClientsRequestPoliciesBySsid0{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProvisionNetworkClientsRequestPoliciesBySsid0)

	if err != nil {
		return err
	}

	*o = ProvisionNetworkClientsRequestPoliciesBySsid0(varProvisionNetworkClientsRequestPoliciesBySsid0)

	return err
}

type NullableProvisionNetworkClientsRequestPoliciesBySsid0 struct {
	value *ProvisionNetworkClientsRequestPoliciesBySsid0
	isSet bool
}

func (v NullableProvisionNetworkClientsRequestPoliciesBySsid0) Get() *ProvisionNetworkClientsRequestPoliciesBySsid0 {
	return v.value
}

func (v *NullableProvisionNetworkClientsRequestPoliciesBySsid0) Set(val *ProvisionNetworkClientsRequestPoliciesBySsid0) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisionNetworkClientsRequestPoliciesBySsid0) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisionNetworkClientsRequestPoliciesBySsid0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisionNetworkClientsRequestPoliciesBySsid0(val *ProvisionNetworkClientsRequestPoliciesBySsid0) *NullableProvisionNetworkClientsRequestPoliciesBySsid0 {
	return &NullableProvisionNetworkClientsRequestPoliciesBySsid0{value: val, isSet: true}
}

func (v NullableProvisionNetworkClientsRequestPoliciesBySsid0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisionNetworkClientsRequestPoliciesBySsid0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


