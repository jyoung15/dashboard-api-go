/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkSmDeviceCerts200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkSmDeviceCerts200ResponseInner{}

// GetNetworkSmDeviceCerts200ResponseInner struct for GetNetworkSmDeviceCerts200ResponseInner
type GetNetworkSmDeviceCerts200ResponseInner struct {
	// The name of the certificate.
	Name *string `json:"name,omitempty"`
	// The date after which the certificate is no longer valid.
	NotValidAfter *string `json:"notValidAfter,omitempty"`
	// The date before which the certificate is not valid.
	NotValidBefore *string `json:"notValidBefore,omitempty"`
	// The PEM of the certificate.
	CertPem *string `json:"certPem,omitempty"`
	// The Meraki managed device Id.
	DeviceId *string `json:"deviceId,omitempty"`
	// The certificate issuer.
	Issuer *string `json:"issuer,omitempty"`
	// The subject of the certificate.
	Subject *string `json:"subject,omitempty"`
	// The Meraki Id of the certificate record.
	Id *string `json:"id,omitempty"`
}

// NewGetNetworkSmDeviceCerts200ResponseInner instantiates a new GetNetworkSmDeviceCerts200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkSmDeviceCerts200ResponseInner() *GetNetworkSmDeviceCerts200ResponseInner {
	this := GetNetworkSmDeviceCerts200ResponseInner{}
	return &this
}

// NewGetNetworkSmDeviceCerts200ResponseInnerWithDefaults instantiates a new GetNetworkSmDeviceCerts200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkSmDeviceCerts200ResponseInnerWithDefaults() *GetNetworkSmDeviceCerts200ResponseInner {
	this := GetNetworkSmDeviceCerts200ResponseInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetNetworkSmDeviceCerts200ResponseInner) SetName(v string) {
	o.Name = &v
}

// GetNotValidAfter returns the NotValidAfter field value if set, zero value otherwise.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetNotValidAfter() string {
	if o == nil || IsNil(o.NotValidAfter) {
		var ret string
		return ret
	}
	return *o.NotValidAfter
}

// GetNotValidAfterOk returns a tuple with the NotValidAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetNotValidAfterOk() (*string, bool) {
	if o == nil || IsNil(o.NotValidAfter) {
		return nil, false
	}
	return o.NotValidAfter, true
}

// HasNotValidAfter returns a boolean if a field has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) HasNotValidAfter() bool {
	if o != nil && !IsNil(o.NotValidAfter) {
		return true
	}

	return false
}

// SetNotValidAfter gets a reference to the given string and assigns it to the NotValidAfter field.
func (o *GetNetworkSmDeviceCerts200ResponseInner) SetNotValidAfter(v string) {
	o.NotValidAfter = &v
}

// GetNotValidBefore returns the NotValidBefore field value if set, zero value otherwise.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetNotValidBefore() string {
	if o == nil || IsNil(o.NotValidBefore) {
		var ret string
		return ret
	}
	return *o.NotValidBefore
}

// GetNotValidBeforeOk returns a tuple with the NotValidBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetNotValidBeforeOk() (*string, bool) {
	if o == nil || IsNil(o.NotValidBefore) {
		return nil, false
	}
	return o.NotValidBefore, true
}

// HasNotValidBefore returns a boolean if a field has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) HasNotValidBefore() bool {
	if o != nil && !IsNil(o.NotValidBefore) {
		return true
	}

	return false
}

// SetNotValidBefore gets a reference to the given string and assigns it to the NotValidBefore field.
func (o *GetNetworkSmDeviceCerts200ResponseInner) SetNotValidBefore(v string) {
	o.NotValidBefore = &v
}

// GetCertPem returns the CertPem field value if set, zero value otherwise.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetCertPem() string {
	if o == nil || IsNil(o.CertPem) {
		var ret string
		return ret
	}
	return *o.CertPem
}

// GetCertPemOk returns a tuple with the CertPem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetCertPemOk() (*string, bool) {
	if o == nil || IsNil(o.CertPem) {
		return nil, false
	}
	return o.CertPem, true
}

// HasCertPem returns a boolean if a field has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) HasCertPem() bool {
	if o != nil && !IsNil(o.CertPem) {
		return true
	}

	return false
}

// SetCertPem gets a reference to the given string and assigns it to the CertPem field.
func (o *GetNetworkSmDeviceCerts200ResponseInner) SetCertPem(v string) {
	o.CertPem = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetDeviceId() string {
	if o == nil || IsNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetDeviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *GetNetworkSmDeviceCerts200ResponseInner) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetIssuer() string {
	if o == nil || IsNil(o.Issuer) {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.Issuer) {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) HasIssuer() bool {
	if o != nil && !IsNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *GetNetworkSmDeviceCerts200ResponseInner) SetIssuer(v string) {
	o.Issuer = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *GetNetworkSmDeviceCerts200ResponseInner) SetSubject(v string) {
	o.Subject = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetNetworkSmDeviceCerts200ResponseInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetNetworkSmDeviceCerts200ResponseInner) SetId(v string) {
	o.Id = &v
}

func (o GetNetworkSmDeviceCerts200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkSmDeviceCerts200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NotValidAfter) {
		toSerialize["notValidAfter"] = o.NotValidAfter
	}
	if !IsNil(o.NotValidBefore) {
		toSerialize["notValidBefore"] = o.NotValidBefore
	}
	if !IsNil(o.CertPem) {
		toSerialize["certPem"] = o.CertPem
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableGetNetworkSmDeviceCerts200ResponseInner struct {
	value *GetNetworkSmDeviceCerts200ResponseInner
	isSet bool
}

func (v NullableGetNetworkSmDeviceCerts200ResponseInner) Get() *GetNetworkSmDeviceCerts200ResponseInner {
	return v.value
}

func (v *NullableGetNetworkSmDeviceCerts200ResponseInner) Set(val *GetNetworkSmDeviceCerts200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkSmDeviceCerts200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkSmDeviceCerts200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkSmDeviceCerts200ResponseInner(val *GetNetworkSmDeviceCerts200ResponseInner) *NullableGetNetworkSmDeviceCerts200ResponseInner {
	return &NullableGetNetworkSmDeviceCerts200ResponseInner{value: val, isSet: true}
}

func (v NullableGetNetworkSmDeviceCerts200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkSmDeviceCerts200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


