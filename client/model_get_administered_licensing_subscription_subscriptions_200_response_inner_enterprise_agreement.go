/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement{}

// GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement enterprise agreement details
type GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement struct {
	// List of suites included. Empty for non-EA subscriptions.
	Suites []string `json:"suites,omitempty"`
}

// NewGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement instantiates a new GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement() *GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement {
	this := GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement{}
	return &this
}

// NewGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreementWithDefaults instantiates a new GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreementWithDefaults() *GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement {
	this := GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement{}
	return &this
}

// GetSuites returns the Suites field value if set, zero value otherwise.
func (o *GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) GetSuites() []string {
	if o == nil || IsNil(o.Suites) {
		var ret []string
		return ret
	}
	return o.Suites
}

// GetSuitesOk returns a tuple with the Suites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) GetSuitesOk() ([]string, bool) {
	if o == nil || IsNil(o.Suites) {
		return nil, false
	}
	return o.Suites, true
}

// HasSuites returns a boolean if a field has been set.
func (o *GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) HasSuites() bool {
	if o != nil && !IsNil(o.Suites) {
		return true
	}

	return false
}

// SetSuites gets a reference to the given []string and assigns it to the Suites field.
func (o *GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) SetSuites(v []string) {
	o.Suites = v
}

func (o GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Suites) {
		toSerialize["suites"] = o.Suites
	}
	return toSerialize, nil
}

type NullableGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement struct {
	value *GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement
	isSet bool
}

func (v NullableGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) Get() *GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement {
	return v.value
}

func (v *NullableGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) Set(val *GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement(val *GetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) *NullableGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement {
	return &NullableGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement{value: val, isSet: true}
}

func (v NullableGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAdministeredLicensingSubscriptionSubscriptions200ResponseInnerEnterpriseAgreement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


