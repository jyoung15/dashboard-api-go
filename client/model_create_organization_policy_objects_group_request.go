/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateOrganizationPolicyObjectsGroupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrganizationPolicyObjectsGroupRequest{}

// CreateOrganizationPolicyObjectsGroupRequest struct for CreateOrganizationPolicyObjectsGroupRequest
type CreateOrganizationPolicyObjectsGroupRequest struct {
	// A name for the group of network addresses, unique within the organization (alphanumeric, space, dash, or underscore characters only)
	Name string `json:"name"`
	// Category of a policy object group (one of: NetworkObjectGroup, GeoLocationGroup, PortObjectGroup, ApplicationGroup)
	Category *string `json:"category,omitempty"`
	// A list of Policy Object ID's that this NetworkObjectGroup should be associated to (note: these ID's will replace the existing associated Policy Objects)
	ObjectIds []int32 `json:"objectIds,omitempty"`
}

type _CreateOrganizationPolicyObjectsGroupRequest CreateOrganizationPolicyObjectsGroupRequest

// NewCreateOrganizationPolicyObjectsGroupRequest instantiates a new CreateOrganizationPolicyObjectsGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrganizationPolicyObjectsGroupRequest(name string) *CreateOrganizationPolicyObjectsGroupRequest {
	this := CreateOrganizationPolicyObjectsGroupRequest{}
	this.Name = name
	return &this
}

// NewCreateOrganizationPolicyObjectsGroupRequestWithDefaults instantiates a new CreateOrganizationPolicyObjectsGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrganizationPolicyObjectsGroupRequestWithDefaults() *CreateOrganizationPolicyObjectsGroupRequest {
	this := CreateOrganizationPolicyObjectsGroupRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateOrganizationPolicyObjectsGroupRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateOrganizationPolicyObjectsGroupRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateOrganizationPolicyObjectsGroupRequest) SetName(v string) {
	o.Name = v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *CreateOrganizationPolicyObjectsGroupRequest) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationPolicyObjectsGroupRequest) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *CreateOrganizationPolicyObjectsGroupRequest) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *CreateOrganizationPolicyObjectsGroupRequest) SetCategory(v string) {
	o.Category = &v
}

// GetObjectIds returns the ObjectIds field value if set, zero value otherwise.
func (o *CreateOrganizationPolicyObjectsGroupRequest) GetObjectIds() []int32 {
	if o == nil || IsNil(o.ObjectIds) {
		var ret []int32
		return ret
	}
	return o.ObjectIds
}

// GetObjectIdsOk returns a tuple with the ObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationPolicyObjectsGroupRequest) GetObjectIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ObjectIds) {
		return nil, false
	}
	return o.ObjectIds, true
}

// HasObjectIds returns a boolean if a field has been set.
func (o *CreateOrganizationPolicyObjectsGroupRequest) HasObjectIds() bool {
	if o != nil && !IsNil(o.ObjectIds) {
		return true
	}

	return false
}

// SetObjectIds gets a reference to the given []int32 and assigns it to the ObjectIds field.
func (o *CreateOrganizationPolicyObjectsGroupRequest) SetObjectIds(v []int32) {
	o.ObjectIds = v
}

func (o CreateOrganizationPolicyObjectsGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrganizationPolicyObjectsGroupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.ObjectIds) {
		toSerialize["objectIds"] = o.ObjectIds
	}
	return toSerialize, nil
}

func (o *CreateOrganizationPolicyObjectsGroupRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrganizationPolicyObjectsGroupRequest := _CreateOrganizationPolicyObjectsGroupRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrganizationPolicyObjectsGroupRequest)

	if err != nil {
		return err
	}

	*o = CreateOrganizationPolicyObjectsGroupRequest(varCreateOrganizationPolicyObjectsGroupRequest)

	return err
}

type NullableCreateOrganizationPolicyObjectsGroupRequest struct {
	value *CreateOrganizationPolicyObjectsGroupRequest
	isSet bool
}

func (v NullableCreateOrganizationPolicyObjectsGroupRequest) Get() *CreateOrganizationPolicyObjectsGroupRequest {
	return v.value
}

func (v *NullableCreateOrganizationPolicyObjectsGroupRequest) Set(val *CreateOrganizationPolicyObjectsGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrganizationPolicyObjectsGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrganizationPolicyObjectsGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrganizationPolicyObjectsGroupRequest(val *CreateOrganizationPolicyObjectsGroupRequest) *NullableCreateOrganizationPolicyObjectsGroupRequest {
	return &NullableCreateOrganizationPolicyObjectsGroupRequest{value: val, isSet: true}
}

func (v NullableCreateOrganizationPolicyObjectsGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrganizationPolicyObjectsGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


