/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor{}

// GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor Reading for the 'powerFactor' metric. This will only be present if the 'metric' property equals 'powerFactor'.
type GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor struct {
	// Power factor reading as a percentage.
	Percentage *int32 `json:"percentage,omitempty"`
}

// NewGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor instantiates a new GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor() *GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor {
	this := GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor{}
	return &this
}

// NewGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactorWithDefaults instantiates a new GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactorWithDefaults() *GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor {
	this := GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor{}
	return &this
}

// GetPercentage returns the Percentage field value if set, zero value otherwise.
func (o *GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) GetPercentage() int32 {
	if o == nil || IsNil(o.Percentage) {
		var ret int32
		return ret
	}
	return *o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) GetPercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.Percentage) {
		return nil, false
	}
	return o.Percentage, true
}

// HasPercentage returns a boolean if a field has been set.
func (o *GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) HasPercentage() bool {
	if o != nil && !IsNil(o.Percentage) {
		return true
	}

	return false
}

// SetPercentage gets a reference to the given int32 and assigns it to the Percentage field.
func (o *GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) SetPercentage(v int32) {
	o.Percentage = &v
}

func (o GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Percentage) {
		toSerialize["percentage"] = o.Percentage
	}
	return toSerialize, nil
}

type NullableGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor struct {
	value *GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor
	isSet bool
}

func (v NullableGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) Get() *GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor {
	return v.value
}

func (v *NullableGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) Set(val *GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor(val *GetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) *NullableGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor {
	return &NullableGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor{value: val, isSet: true}
}

func (v NullableGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationSensorReadingsHistory200ResponseInnerPowerFactor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


