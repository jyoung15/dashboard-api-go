/*
Meraki Dashboard API

Testing QualityRetentionProfilesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package client

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/meraki/dashboard-api-go/client"
)

func Test_client_QualityRetentionProfilesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test QualityRetentionProfilesAPIService CreateNetworkCameraQualityRetentionProfile", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkId string

		resp, httpRes, err := apiClient.QualityRetentionProfilesAPI.CreateNetworkCameraQualityRetentionProfile(context.Background(), networkId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test QualityRetentionProfilesAPIService DeleteNetworkCameraQualityRetentionProfile", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkId string
		var qualityRetentionProfileId string

		httpRes, err := apiClient.QualityRetentionProfilesAPI.DeleteNetworkCameraQualityRetentionProfile(context.Background(), networkId, qualityRetentionProfileId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test QualityRetentionProfilesAPIService GetNetworkCameraQualityRetentionProfile", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkId string
		var qualityRetentionProfileId string

		resp, httpRes, err := apiClient.QualityRetentionProfilesAPI.GetNetworkCameraQualityRetentionProfile(context.Background(), networkId, qualityRetentionProfileId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test QualityRetentionProfilesAPIService GetNetworkCameraQualityRetentionProfiles", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkId string

		resp, httpRes, err := apiClient.QualityRetentionProfilesAPI.GetNetworkCameraQualityRetentionProfiles(context.Background(), networkId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test QualityRetentionProfilesAPIService UpdateNetworkCameraQualityRetentionProfile", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkId string
		var qualityRetentionProfileId string

		resp, httpRes, err := apiClient.QualityRetentionProfilesAPI.UpdateNetworkCameraQualityRetentionProfile(context.Background(), networkId, qualityRetentionProfileId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
