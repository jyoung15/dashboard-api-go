/*
Meraki Dashboard API

Testing UsersAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package client

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/meraki/dashboard-api-go/client"
)

func Test_client_UsersAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test UsersAPIService GetNetworkSmUserDeviceProfiles", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkId string
		var userId string

		resp, httpRes, err := apiClient.UsersAPI.GetNetworkSmUserDeviceProfiles(context.Background(), networkId, userId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UsersAPIService GetNetworkSmUserSoftwares", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkId string
		var userId string

		resp, httpRes, err := apiClient.UsersAPI.GetNetworkSmUserSoftwares(context.Background(), networkId, userId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UsersAPIService GetNetworkSmUsers", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkId string

		resp, httpRes, err := apiClient.UsersAPI.GetNetworkSmUsers(context.Background(), networkId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
