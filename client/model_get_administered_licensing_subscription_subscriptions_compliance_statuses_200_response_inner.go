/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner{}

// GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner struct for GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner
type GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner struct {
	Subscription *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerSubscription `json:"subscription,omitempty"`
	Violations *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolations `json:"violations,omitempty"`
}

// NewGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner instantiates a new GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner() *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner {
	this := GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner{}
	return &this
}

// NewGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerWithDefaults instantiates a new GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerWithDefaults() *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner {
	this := GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner{}
	return &this
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) GetSubscription() GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerSubscription {
	if o == nil || IsNil(o.Subscription) {
		var ret GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerSubscription
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) GetSubscriptionOk() (*GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerSubscription, bool) {
	if o == nil || IsNil(o.Subscription) {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) HasSubscription() bool {
	if o != nil && !IsNil(o.Subscription) {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerSubscription and assigns it to the Subscription field.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) SetSubscription(v GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerSubscription) {
	o.Subscription = &v
}

// GetViolations returns the Violations field value if set, zero value otherwise.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) GetViolations() GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolations {
	if o == nil || IsNil(o.Violations) {
		var ret GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolations
		return ret
	}
	return *o.Violations
}

// GetViolationsOk returns a tuple with the Violations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) GetViolationsOk() (*GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolations, bool) {
	if o == nil || IsNil(o.Violations) {
		return nil, false
	}
	return o.Violations, true
}

// HasViolations returns a boolean if a field has been set.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) HasViolations() bool {
	if o != nil && !IsNil(o.Violations) {
		return true
	}

	return false
}

// SetViolations gets a reference to the given GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolations and assigns it to the Violations field.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) SetViolations(v GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolations) {
	o.Violations = &v
}

func (o GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Subscription) {
		toSerialize["subscription"] = o.Subscription
	}
	if !IsNil(o.Violations) {
		toSerialize["violations"] = o.Violations
	}
	return toSerialize, nil
}

type NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner struct {
	value *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner
	isSet bool
}

func (v NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) Get() *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner {
	return v.value
}

func (v *NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) Set(val *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner(val *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) *NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner {
	return &NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner{value: val, isSet: true}
}

func (v NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


