/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkGroupPolicies200ResponseInnerBandwidth type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkGroupPolicies200ResponseInnerBandwidth{}

// GetNetworkGroupPolicies200ResponseInnerBandwidth     The bandwidth settings for clients bound to your group policy. 
type GetNetworkGroupPolicies200ResponseInnerBandwidth struct {
	// How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'.
	Settings *string `json:"settings,omitempty"`
	BandwidthLimits *GetNetworkGroupPolicies200ResponseInnerBandwidthBandwidthLimits `json:"bandwidthLimits,omitempty"`
}

// NewGetNetworkGroupPolicies200ResponseInnerBandwidth instantiates a new GetNetworkGroupPolicies200ResponseInnerBandwidth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkGroupPolicies200ResponseInnerBandwidth() *GetNetworkGroupPolicies200ResponseInnerBandwidth {
	this := GetNetworkGroupPolicies200ResponseInnerBandwidth{}
	return &this
}

// NewGetNetworkGroupPolicies200ResponseInnerBandwidthWithDefaults instantiates a new GetNetworkGroupPolicies200ResponseInnerBandwidth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkGroupPolicies200ResponseInnerBandwidthWithDefaults() *GetNetworkGroupPolicies200ResponseInnerBandwidth {
	this := GetNetworkGroupPolicies200ResponseInnerBandwidth{}
	return &this
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *GetNetworkGroupPolicies200ResponseInnerBandwidth) GetSettings() string {
	if o == nil || IsNil(o.Settings) {
		var ret string
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroupPolicies200ResponseInnerBandwidth) GetSettingsOk() (*string, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *GetNetworkGroupPolicies200ResponseInnerBandwidth) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given string and assigns it to the Settings field.
func (o *GetNetworkGroupPolicies200ResponseInnerBandwidth) SetSettings(v string) {
	o.Settings = &v
}

// GetBandwidthLimits returns the BandwidthLimits field value if set, zero value otherwise.
func (o *GetNetworkGroupPolicies200ResponseInnerBandwidth) GetBandwidthLimits() GetNetworkGroupPolicies200ResponseInnerBandwidthBandwidthLimits {
	if o == nil || IsNil(o.BandwidthLimits) {
		var ret GetNetworkGroupPolicies200ResponseInnerBandwidthBandwidthLimits
		return ret
	}
	return *o.BandwidthLimits
}

// GetBandwidthLimitsOk returns a tuple with the BandwidthLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroupPolicies200ResponseInnerBandwidth) GetBandwidthLimitsOk() (*GetNetworkGroupPolicies200ResponseInnerBandwidthBandwidthLimits, bool) {
	if o == nil || IsNil(o.BandwidthLimits) {
		return nil, false
	}
	return o.BandwidthLimits, true
}

// HasBandwidthLimits returns a boolean if a field has been set.
func (o *GetNetworkGroupPolicies200ResponseInnerBandwidth) HasBandwidthLimits() bool {
	if o != nil && !IsNil(o.BandwidthLimits) {
		return true
	}

	return false
}

// SetBandwidthLimits gets a reference to the given GetNetworkGroupPolicies200ResponseInnerBandwidthBandwidthLimits and assigns it to the BandwidthLimits field.
func (o *GetNetworkGroupPolicies200ResponseInnerBandwidth) SetBandwidthLimits(v GetNetworkGroupPolicies200ResponseInnerBandwidthBandwidthLimits) {
	o.BandwidthLimits = &v
}

func (o GetNetworkGroupPolicies200ResponseInnerBandwidth) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkGroupPolicies200ResponseInnerBandwidth) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.BandwidthLimits) {
		toSerialize["bandwidthLimits"] = o.BandwidthLimits
	}
	return toSerialize, nil
}

type NullableGetNetworkGroupPolicies200ResponseInnerBandwidth struct {
	value *GetNetworkGroupPolicies200ResponseInnerBandwidth
	isSet bool
}

func (v NullableGetNetworkGroupPolicies200ResponseInnerBandwidth) Get() *GetNetworkGroupPolicies200ResponseInnerBandwidth {
	return v.value
}

func (v *NullableGetNetworkGroupPolicies200ResponseInnerBandwidth) Set(val *GetNetworkGroupPolicies200ResponseInnerBandwidth) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkGroupPolicies200ResponseInnerBandwidth) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkGroupPolicies200ResponseInnerBandwidth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkGroupPolicies200ResponseInnerBandwidth(val *GetNetworkGroupPolicies200ResponseInnerBandwidth) *NullableGetNetworkGroupPolicies200ResponseInnerBandwidth {
	return &NullableGetNetworkGroupPolicies200ResponseInnerBandwidth{value: val, isSet: true}
}

func (v NullableGetNetworkGroupPolicies200ResponseInnerBandwidth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkGroupPolicies200ResponseInnerBandwidth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


