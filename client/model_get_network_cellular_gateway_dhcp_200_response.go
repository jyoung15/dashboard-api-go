/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkCellularGatewayDhcp200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkCellularGatewayDhcp200Response{}

// GetNetworkCellularGatewayDhcp200Response struct for GetNetworkCellularGatewayDhcp200Response
type GetNetworkCellularGatewayDhcp200Response struct {
	// DHCP Lease time for all MG in the network.
	DhcpLeaseTime *string `json:"dhcpLeaseTime,omitempty"`
	// DNS name servers mode for all MG in the network.
	DnsNameservers *string `json:"dnsNameservers,omitempty"`
	// List of fixed IPs representing the the DNS Name servers when the mode is 'custom'.
	DnsCustomNameservers []string `json:"dnsCustomNameservers,omitempty"`
}

// NewGetNetworkCellularGatewayDhcp200Response instantiates a new GetNetworkCellularGatewayDhcp200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkCellularGatewayDhcp200Response() *GetNetworkCellularGatewayDhcp200Response {
	this := GetNetworkCellularGatewayDhcp200Response{}
	return &this
}

// NewGetNetworkCellularGatewayDhcp200ResponseWithDefaults instantiates a new GetNetworkCellularGatewayDhcp200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkCellularGatewayDhcp200ResponseWithDefaults() *GetNetworkCellularGatewayDhcp200Response {
	this := GetNetworkCellularGatewayDhcp200Response{}
	return &this
}

// GetDhcpLeaseTime returns the DhcpLeaseTime field value if set, zero value otherwise.
func (o *GetNetworkCellularGatewayDhcp200Response) GetDhcpLeaseTime() string {
	if o == nil || IsNil(o.DhcpLeaseTime) {
		var ret string
		return ret
	}
	return *o.DhcpLeaseTime
}

// GetDhcpLeaseTimeOk returns a tuple with the DhcpLeaseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkCellularGatewayDhcp200Response) GetDhcpLeaseTimeOk() (*string, bool) {
	if o == nil || IsNil(o.DhcpLeaseTime) {
		return nil, false
	}
	return o.DhcpLeaseTime, true
}

// HasDhcpLeaseTime returns a boolean if a field has been set.
func (o *GetNetworkCellularGatewayDhcp200Response) HasDhcpLeaseTime() bool {
	if o != nil && !IsNil(o.DhcpLeaseTime) {
		return true
	}

	return false
}

// SetDhcpLeaseTime gets a reference to the given string and assigns it to the DhcpLeaseTime field.
func (o *GetNetworkCellularGatewayDhcp200Response) SetDhcpLeaseTime(v string) {
	o.DhcpLeaseTime = &v
}

// GetDnsNameservers returns the DnsNameservers field value if set, zero value otherwise.
func (o *GetNetworkCellularGatewayDhcp200Response) GetDnsNameservers() string {
	if o == nil || IsNil(o.DnsNameservers) {
		var ret string
		return ret
	}
	return *o.DnsNameservers
}

// GetDnsNameserversOk returns a tuple with the DnsNameservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkCellularGatewayDhcp200Response) GetDnsNameserversOk() (*string, bool) {
	if o == nil || IsNil(o.DnsNameservers) {
		return nil, false
	}
	return o.DnsNameservers, true
}

// HasDnsNameservers returns a boolean if a field has been set.
func (o *GetNetworkCellularGatewayDhcp200Response) HasDnsNameservers() bool {
	if o != nil && !IsNil(o.DnsNameservers) {
		return true
	}

	return false
}

// SetDnsNameservers gets a reference to the given string and assigns it to the DnsNameservers field.
func (o *GetNetworkCellularGatewayDhcp200Response) SetDnsNameservers(v string) {
	o.DnsNameservers = &v
}

// GetDnsCustomNameservers returns the DnsCustomNameservers field value if set, zero value otherwise.
func (o *GetNetworkCellularGatewayDhcp200Response) GetDnsCustomNameservers() []string {
	if o == nil || IsNil(o.DnsCustomNameservers) {
		var ret []string
		return ret
	}
	return o.DnsCustomNameservers
}

// GetDnsCustomNameserversOk returns a tuple with the DnsCustomNameservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkCellularGatewayDhcp200Response) GetDnsCustomNameserversOk() ([]string, bool) {
	if o == nil || IsNil(o.DnsCustomNameservers) {
		return nil, false
	}
	return o.DnsCustomNameservers, true
}

// HasDnsCustomNameservers returns a boolean if a field has been set.
func (o *GetNetworkCellularGatewayDhcp200Response) HasDnsCustomNameservers() bool {
	if o != nil && !IsNil(o.DnsCustomNameservers) {
		return true
	}

	return false
}

// SetDnsCustomNameservers gets a reference to the given []string and assigns it to the DnsCustomNameservers field.
func (o *GetNetworkCellularGatewayDhcp200Response) SetDnsCustomNameservers(v []string) {
	o.DnsCustomNameservers = v
}

func (o GetNetworkCellularGatewayDhcp200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkCellularGatewayDhcp200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DhcpLeaseTime) {
		toSerialize["dhcpLeaseTime"] = o.DhcpLeaseTime
	}
	if !IsNil(o.DnsNameservers) {
		toSerialize["dnsNameservers"] = o.DnsNameservers
	}
	if !IsNil(o.DnsCustomNameservers) {
		toSerialize["dnsCustomNameservers"] = o.DnsCustomNameservers
	}
	return toSerialize, nil
}

type NullableGetNetworkCellularGatewayDhcp200Response struct {
	value *GetNetworkCellularGatewayDhcp200Response
	isSet bool
}

func (v NullableGetNetworkCellularGatewayDhcp200Response) Get() *GetNetworkCellularGatewayDhcp200Response {
	return v.value
}

func (v *NullableGetNetworkCellularGatewayDhcp200Response) Set(val *GetNetworkCellularGatewayDhcp200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkCellularGatewayDhcp200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkCellularGatewayDhcp200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkCellularGatewayDhcp200Response(val *GetNetworkCellularGatewayDhcp200Response) *NullableGetNetworkCellularGatewayDhcp200Response {
	return &NullableGetNetworkCellularGatewayDhcp200Response{value: val, isSet: true}
}

func (v NullableGetNetworkCellularGatewayDhcp200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkCellularGatewayDhcp200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


