/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkSensorRelationships200ResponseInnerDevice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkSensorRelationships200ResponseInnerDevice{}

// GetNetworkSensorRelationships200ResponseInnerDevice A sensor or gateway device in the network
type GetNetworkSensorRelationships200ResponseInnerDevice struct {
	// The name of the device
	Name *string `json:"name,omitempty"`
	// The serial of the device
	Serial *string `json:"serial,omitempty"`
	// The product type of the device
	ProductType *string `json:"productType,omitempty"`
}

// NewGetNetworkSensorRelationships200ResponseInnerDevice instantiates a new GetNetworkSensorRelationships200ResponseInnerDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkSensorRelationships200ResponseInnerDevice() *GetNetworkSensorRelationships200ResponseInnerDevice {
	this := GetNetworkSensorRelationships200ResponseInnerDevice{}
	return &this
}

// NewGetNetworkSensorRelationships200ResponseInnerDeviceWithDefaults instantiates a new GetNetworkSensorRelationships200ResponseInnerDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkSensorRelationships200ResponseInnerDeviceWithDefaults() *GetNetworkSensorRelationships200ResponseInnerDevice {
	this := GetNetworkSensorRelationships200ResponseInnerDevice{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetNetworkSensorRelationships200ResponseInnerDevice) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSensorRelationships200ResponseInnerDevice) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetNetworkSensorRelationships200ResponseInnerDevice) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetNetworkSensorRelationships200ResponseInnerDevice) SetName(v string) {
	o.Name = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *GetNetworkSensorRelationships200ResponseInnerDevice) GetSerial() string {
	if o == nil || IsNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSensorRelationships200ResponseInnerDevice) GetSerialOk() (*string, bool) {
	if o == nil || IsNil(o.Serial) {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *GetNetworkSensorRelationships200ResponseInnerDevice) HasSerial() bool {
	if o != nil && !IsNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *GetNetworkSensorRelationships200ResponseInnerDevice) SetSerial(v string) {
	o.Serial = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *GetNetworkSensorRelationships200ResponseInnerDevice) GetProductType() string {
	if o == nil || IsNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSensorRelationships200ResponseInnerDevice) GetProductTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *GetNetworkSensorRelationships200ResponseInnerDevice) HasProductType() bool {
	if o != nil && !IsNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *GetNetworkSensorRelationships200ResponseInnerDevice) SetProductType(v string) {
	o.ProductType = &v
}

func (o GetNetworkSensorRelationships200ResponseInnerDevice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkSensorRelationships200ResponseInnerDevice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !IsNil(o.ProductType) {
		toSerialize["productType"] = o.ProductType
	}
	return toSerialize, nil
}

type NullableGetNetworkSensorRelationships200ResponseInnerDevice struct {
	value *GetNetworkSensorRelationships200ResponseInnerDevice
	isSet bool
}

func (v NullableGetNetworkSensorRelationships200ResponseInnerDevice) Get() *GetNetworkSensorRelationships200ResponseInnerDevice {
	return v.value
}

func (v *NullableGetNetworkSensorRelationships200ResponseInnerDevice) Set(val *GetNetworkSensorRelationships200ResponseInnerDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkSensorRelationships200ResponseInnerDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkSensorRelationships200ResponseInnerDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkSensorRelationships200ResponseInnerDevice(val *GetNetworkSensorRelationships200ResponseInnerDevice) *NullableGetNetworkSensorRelationships200ResponseInnerDevice {
	return &NullableGetNetworkSensorRelationships200ResponseInnerDevice{value: val, isSet: true}
}

func (v NullableGetNetworkSensorRelationships200ResponseInnerDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkSensorRelationships200ResponseInnerDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


