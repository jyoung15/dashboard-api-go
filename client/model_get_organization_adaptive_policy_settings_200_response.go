/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetOrganizationAdaptivePolicySettings200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganizationAdaptivePolicySettings200Response{}

// GetOrganizationAdaptivePolicySettings200Response struct for GetOrganizationAdaptivePolicySettings200Response
type GetOrganizationAdaptivePolicySettings200Response struct {
	// List of network IDs with adaptive policy enabled
	EnabledNetworks []string `json:"enabledNetworks,omitempty"`
}

// NewGetOrganizationAdaptivePolicySettings200Response instantiates a new GetOrganizationAdaptivePolicySettings200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganizationAdaptivePolicySettings200Response() *GetOrganizationAdaptivePolicySettings200Response {
	this := GetOrganizationAdaptivePolicySettings200Response{}
	return &this
}

// NewGetOrganizationAdaptivePolicySettings200ResponseWithDefaults instantiates a new GetOrganizationAdaptivePolicySettings200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganizationAdaptivePolicySettings200ResponseWithDefaults() *GetOrganizationAdaptivePolicySettings200Response {
	this := GetOrganizationAdaptivePolicySettings200Response{}
	return &this
}

// GetEnabledNetworks returns the EnabledNetworks field value if set, zero value otherwise.
func (o *GetOrganizationAdaptivePolicySettings200Response) GetEnabledNetworks() []string {
	if o == nil || IsNil(o.EnabledNetworks) {
		var ret []string
		return ret
	}
	return o.EnabledNetworks
}

// GetEnabledNetworksOk returns a tuple with the EnabledNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationAdaptivePolicySettings200Response) GetEnabledNetworksOk() ([]string, bool) {
	if o == nil || IsNil(o.EnabledNetworks) {
		return nil, false
	}
	return o.EnabledNetworks, true
}

// HasEnabledNetworks returns a boolean if a field has been set.
func (o *GetOrganizationAdaptivePolicySettings200Response) HasEnabledNetworks() bool {
	if o != nil && !IsNil(o.EnabledNetworks) {
		return true
	}

	return false
}

// SetEnabledNetworks gets a reference to the given []string and assigns it to the EnabledNetworks field.
func (o *GetOrganizationAdaptivePolicySettings200Response) SetEnabledNetworks(v []string) {
	o.EnabledNetworks = v
}

func (o GetOrganizationAdaptivePolicySettings200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganizationAdaptivePolicySettings200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnabledNetworks) {
		toSerialize["enabledNetworks"] = o.EnabledNetworks
	}
	return toSerialize, nil
}

type NullableGetOrganizationAdaptivePolicySettings200Response struct {
	value *GetOrganizationAdaptivePolicySettings200Response
	isSet bool
}

func (v NullableGetOrganizationAdaptivePolicySettings200Response) Get() *GetOrganizationAdaptivePolicySettings200Response {
	return v.value
}

func (v *NullableGetOrganizationAdaptivePolicySettings200Response) Set(val *GetOrganizationAdaptivePolicySettings200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationAdaptivePolicySettings200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationAdaptivePolicySettings200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationAdaptivePolicySettings200Response(val *GetOrganizationAdaptivePolicySettings200Response) *NullableGetOrganizationAdaptivePolicySettings200Response {
	return &NullableGetOrganizationAdaptivePolicySettings200Response{value: val, isSet: true}
}

func (v NullableGetOrganizationAdaptivePolicySettings200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationAdaptivePolicySettings200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


