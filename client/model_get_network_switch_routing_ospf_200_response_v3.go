/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkSwitchRoutingOspf200ResponseV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkSwitchRoutingOspf200ResponseV3{}

// GetNetworkSwitchRoutingOspf200ResponseV3 OSPF v3 configuration
type GetNetworkSwitchRoutingOspf200ResponseV3 struct {
	// Boolean value to enable or disable V3 OSPF routing. OSPF V3 routing is disabled by default.
	Enabled *bool `json:"enabled,omitempty"`
	// Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
	HelloTimerInSeconds *int32 `json:"helloTimerInSeconds,omitempty"`
	// Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
	DeadTimerInSeconds *int32 `json:"deadTimerInSeconds,omitempty"`
	// OSPF v3 areas
	Areas []GetNetworkSwitchRoutingOspf200ResponseAreasInner `json:"areas,omitempty"`
}

// NewGetNetworkSwitchRoutingOspf200ResponseV3 instantiates a new GetNetworkSwitchRoutingOspf200ResponseV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkSwitchRoutingOspf200ResponseV3() *GetNetworkSwitchRoutingOspf200ResponseV3 {
	this := GetNetworkSwitchRoutingOspf200ResponseV3{}
	return &this
}

// NewGetNetworkSwitchRoutingOspf200ResponseV3WithDefaults instantiates a new GetNetworkSwitchRoutingOspf200ResponseV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkSwitchRoutingOspf200ResponseV3WithDefaults() *GetNetworkSwitchRoutingOspf200ResponseV3 {
	this := GetNetworkSwitchRoutingOspf200ResponseV3{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetHelloTimerInSeconds returns the HelloTimerInSeconds field value if set, zero value otherwise.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) GetHelloTimerInSeconds() int32 {
	if o == nil || IsNil(o.HelloTimerInSeconds) {
		var ret int32
		return ret
	}
	return *o.HelloTimerInSeconds
}

// GetHelloTimerInSecondsOk returns a tuple with the HelloTimerInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) GetHelloTimerInSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.HelloTimerInSeconds) {
		return nil, false
	}
	return o.HelloTimerInSeconds, true
}

// HasHelloTimerInSeconds returns a boolean if a field has been set.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) HasHelloTimerInSeconds() bool {
	if o != nil && !IsNil(o.HelloTimerInSeconds) {
		return true
	}

	return false
}

// SetHelloTimerInSeconds gets a reference to the given int32 and assigns it to the HelloTimerInSeconds field.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) SetHelloTimerInSeconds(v int32) {
	o.HelloTimerInSeconds = &v
}

// GetDeadTimerInSeconds returns the DeadTimerInSeconds field value if set, zero value otherwise.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) GetDeadTimerInSeconds() int32 {
	if o == nil || IsNil(o.DeadTimerInSeconds) {
		var ret int32
		return ret
	}
	return *o.DeadTimerInSeconds
}

// GetDeadTimerInSecondsOk returns a tuple with the DeadTimerInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) GetDeadTimerInSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.DeadTimerInSeconds) {
		return nil, false
	}
	return o.DeadTimerInSeconds, true
}

// HasDeadTimerInSeconds returns a boolean if a field has been set.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) HasDeadTimerInSeconds() bool {
	if o != nil && !IsNil(o.DeadTimerInSeconds) {
		return true
	}

	return false
}

// SetDeadTimerInSeconds gets a reference to the given int32 and assigns it to the DeadTimerInSeconds field.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) SetDeadTimerInSeconds(v int32) {
	o.DeadTimerInSeconds = &v
}

// GetAreas returns the Areas field value if set, zero value otherwise.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) GetAreas() []GetNetworkSwitchRoutingOspf200ResponseAreasInner {
	if o == nil || IsNil(o.Areas) {
		var ret []GetNetworkSwitchRoutingOspf200ResponseAreasInner
		return ret
	}
	return o.Areas
}

// GetAreasOk returns a tuple with the Areas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) GetAreasOk() ([]GetNetworkSwitchRoutingOspf200ResponseAreasInner, bool) {
	if o == nil || IsNil(o.Areas) {
		return nil, false
	}
	return o.Areas, true
}

// HasAreas returns a boolean if a field has been set.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) HasAreas() bool {
	if o != nil && !IsNil(o.Areas) {
		return true
	}

	return false
}

// SetAreas gets a reference to the given []GetNetworkSwitchRoutingOspf200ResponseAreasInner and assigns it to the Areas field.
func (o *GetNetworkSwitchRoutingOspf200ResponseV3) SetAreas(v []GetNetworkSwitchRoutingOspf200ResponseAreasInner) {
	o.Areas = v
}

func (o GetNetworkSwitchRoutingOspf200ResponseV3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkSwitchRoutingOspf200ResponseV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.HelloTimerInSeconds) {
		toSerialize["helloTimerInSeconds"] = o.HelloTimerInSeconds
	}
	if !IsNil(o.DeadTimerInSeconds) {
		toSerialize["deadTimerInSeconds"] = o.DeadTimerInSeconds
	}
	if !IsNil(o.Areas) {
		toSerialize["areas"] = o.Areas
	}
	return toSerialize, nil
}

type NullableGetNetworkSwitchRoutingOspf200ResponseV3 struct {
	value *GetNetworkSwitchRoutingOspf200ResponseV3
	isSet bool
}

func (v NullableGetNetworkSwitchRoutingOspf200ResponseV3) Get() *GetNetworkSwitchRoutingOspf200ResponseV3 {
	return v.value
}

func (v *NullableGetNetworkSwitchRoutingOspf200ResponseV3) Set(val *GetNetworkSwitchRoutingOspf200ResponseV3) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkSwitchRoutingOspf200ResponseV3) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkSwitchRoutingOspf200ResponseV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkSwitchRoutingOspf200ResponseV3(val *GetNetworkSwitchRoutingOspf200ResponseV3) *NullableGetNetworkSwitchRoutingOspf200ResponseV3 {
	return &NullableGetNetworkSwitchRoutingOspf200ResponseV3{value: val, isSet: true}
}

func (v NullableGetNetworkSwitchRoutingOspf200ResponseV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkSwitchRoutingOspf200ResponseV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


