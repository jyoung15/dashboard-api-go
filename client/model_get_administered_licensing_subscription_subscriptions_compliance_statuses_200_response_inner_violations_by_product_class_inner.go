/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner{}

// GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner struct for GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner
type GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner struct {
	// Name of the product class
	ProductClass *string `json:"productClass,omitempty"`
	// End date of the grace period in ISO 8601 format
	GracePeriodEndsAt *string `json:"gracePeriodEndsAt,omitempty"`
	Missing *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerMissing `json:"missing,omitempty"`
}

// NewGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner instantiates a new GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner() *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner {
	this := GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner{}
	return &this
}

// NewGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerWithDefaults instantiates a new GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerWithDefaults() *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner {
	this := GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner{}
	return &this
}

// GetProductClass returns the ProductClass field value if set, zero value otherwise.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) GetProductClass() string {
	if o == nil || IsNil(o.ProductClass) {
		var ret string
		return ret
	}
	return *o.ProductClass
}

// GetProductClassOk returns a tuple with the ProductClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) GetProductClassOk() (*string, bool) {
	if o == nil || IsNil(o.ProductClass) {
		return nil, false
	}
	return o.ProductClass, true
}

// HasProductClass returns a boolean if a field has been set.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) HasProductClass() bool {
	if o != nil && !IsNil(o.ProductClass) {
		return true
	}

	return false
}

// SetProductClass gets a reference to the given string and assigns it to the ProductClass field.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) SetProductClass(v string) {
	o.ProductClass = &v
}

// GetGracePeriodEndsAt returns the GracePeriodEndsAt field value if set, zero value otherwise.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) GetGracePeriodEndsAt() string {
	if o == nil || IsNil(o.GracePeriodEndsAt) {
		var ret string
		return ret
	}
	return *o.GracePeriodEndsAt
}

// GetGracePeriodEndsAtOk returns a tuple with the GracePeriodEndsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) GetGracePeriodEndsAtOk() (*string, bool) {
	if o == nil || IsNil(o.GracePeriodEndsAt) {
		return nil, false
	}
	return o.GracePeriodEndsAt, true
}

// HasGracePeriodEndsAt returns a boolean if a field has been set.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) HasGracePeriodEndsAt() bool {
	if o != nil && !IsNil(o.GracePeriodEndsAt) {
		return true
	}

	return false
}

// SetGracePeriodEndsAt gets a reference to the given string and assigns it to the GracePeriodEndsAt field.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) SetGracePeriodEndsAt(v string) {
	o.GracePeriodEndsAt = &v
}

// GetMissing returns the Missing field value if set, zero value otherwise.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) GetMissing() GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerMissing {
	if o == nil || IsNil(o.Missing) {
		var ret GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerMissing
		return ret
	}
	return *o.Missing
}

// GetMissingOk returns a tuple with the Missing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) GetMissingOk() (*GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerMissing, bool) {
	if o == nil || IsNil(o.Missing) {
		return nil, false
	}
	return o.Missing, true
}

// HasMissing returns a boolean if a field has been set.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) HasMissing() bool {
	if o != nil && !IsNil(o.Missing) {
		return true
	}

	return false
}

// SetMissing gets a reference to the given GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerMissing and assigns it to the Missing field.
func (o *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) SetMissing(v GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerMissing) {
	o.Missing = &v
}

func (o GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductClass) {
		toSerialize["productClass"] = o.ProductClass
	}
	if !IsNil(o.GracePeriodEndsAt) {
		toSerialize["gracePeriodEndsAt"] = o.GracePeriodEndsAt
	}
	if !IsNil(o.Missing) {
		toSerialize["missing"] = o.Missing
	}
	return toSerialize, nil
}

type NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner struct {
	value *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner
	isSet bool
}

func (v NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) Get() *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner {
	return v.value
}

func (v *NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) Set(val *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner(val *GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) *NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner {
	return &NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner{value: val, isSet: true}
}

func (v NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


