/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis{}

// GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis SVI settings by protocol.
type GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis struct {
	Ipv4 *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv4 `json:"ipv4,omitempty"`
	Ipv6 *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv6 `json:"ipv6,omitempty"`
}

// NewGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis instantiates a new GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis() *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis {
	this := GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis{}
	return &this
}

// NewGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisWithDefaults instantiates a new GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisWithDefaults() *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis {
	this := GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis{}
	return &this
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) GetIpv4() GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv4 {
	if o == nil || IsNil(o.Ipv4) {
		var ret GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv4
		return ret
	}
	return *o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) GetIpv4Ok() (*GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv4, bool) {
	if o == nil || IsNil(o.Ipv4) {
		return nil, false
	}
	return o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) HasIpv4() bool {
	if o != nil && !IsNil(o.Ipv4) {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv4 and assigns it to the Ipv4 field.
func (o *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) SetIpv4(v GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv4) {
	o.Ipv4 = &v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) GetIpv6() GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv6 {
	if o == nil || IsNil(o.Ipv6) {
		var ret GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv6
		return ret
	}
	return *o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) GetIpv6Ok() (*GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv6, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv6 and assigns it to the Ipv6 field.
func (o *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) SetIpv6(v GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1SvisIpv6) {
	o.Ipv6 = &v
}

func (o GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ipv4) {
		toSerialize["ipv4"] = o.Ipv4
	}
	if !IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}
	return toSerialize, nil
}

type NullableGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis struct {
	value *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis
	isSet bool
}

func (v NullableGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) Get() *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis {
	return v.value
}

func (v *NullableGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) Set(val *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis(val *GetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) *NullableGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis {
	return &NullableGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis{value: val, isSet: true}
}

func (v NullableGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeviceApplianceUplinksSettings200ResponseInterfacesWan1Svis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


