/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetNetworkAlertsSettings200ResponseAlertsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkAlertsSettings200ResponseAlertsInner{}

// GetNetworkAlertsSettings200ResponseAlertsInner struct for GetNetworkAlertsSettings200ResponseAlertsInner
type GetNetworkAlertsSettings200ResponseAlertsInner struct {
	// The type of alert
	Type string `json:"type"`
	// A boolean depicting if the alert is turned on or off
	Enabled *bool `json:"enabled,omitempty"`
	AlertDestinations *GetNetworkAlertsSettings200ResponseAlertsInnerAlertDestinations `json:"alertDestinations,omitempty"`
	Filters *GetNetworkAlertsSettings200ResponseAlertsInnerFilters `json:"filters,omitempty"`
}

type _GetNetworkAlertsSettings200ResponseAlertsInner GetNetworkAlertsSettings200ResponseAlertsInner

// NewGetNetworkAlertsSettings200ResponseAlertsInner instantiates a new GetNetworkAlertsSettings200ResponseAlertsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkAlertsSettings200ResponseAlertsInner(type_ string) *GetNetworkAlertsSettings200ResponseAlertsInner {
	this := GetNetworkAlertsSettings200ResponseAlertsInner{}
	this.Type = type_
	return &this
}

// NewGetNetworkAlertsSettings200ResponseAlertsInnerWithDefaults instantiates a new GetNetworkAlertsSettings200ResponseAlertsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkAlertsSettings200ResponseAlertsInnerWithDefaults() *GetNetworkAlertsSettings200ResponseAlertsInner {
	this := GetNetworkAlertsSettings200ResponseAlertsInner{}
	return &this
}

// GetType returns the Type field value
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) SetType(v string) {
	o.Type = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAlertDestinations returns the AlertDestinations field value if set, zero value otherwise.
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) GetAlertDestinations() GetNetworkAlertsSettings200ResponseAlertsInnerAlertDestinations {
	if o == nil || IsNil(o.AlertDestinations) {
		var ret GetNetworkAlertsSettings200ResponseAlertsInnerAlertDestinations
		return ret
	}
	return *o.AlertDestinations
}

// GetAlertDestinationsOk returns a tuple with the AlertDestinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) GetAlertDestinationsOk() (*GetNetworkAlertsSettings200ResponseAlertsInnerAlertDestinations, bool) {
	if o == nil || IsNil(o.AlertDestinations) {
		return nil, false
	}
	return o.AlertDestinations, true
}

// HasAlertDestinations returns a boolean if a field has been set.
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) HasAlertDestinations() bool {
	if o != nil && !IsNil(o.AlertDestinations) {
		return true
	}

	return false
}

// SetAlertDestinations gets a reference to the given GetNetworkAlertsSettings200ResponseAlertsInnerAlertDestinations and assigns it to the AlertDestinations field.
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) SetAlertDestinations(v GetNetworkAlertsSettings200ResponseAlertsInnerAlertDestinations) {
	o.AlertDestinations = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) GetFilters() GetNetworkAlertsSettings200ResponseAlertsInnerFilters {
	if o == nil || IsNil(o.Filters) {
		var ret GetNetworkAlertsSettings200ResponseAlertsInnerFilters
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) GetFiltersOk() (*GetNetworkAlertsSettings200ResponseAlertsInnerFilters, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given GetNetworkAlertsSettings200ResponseAlertsInnerFilters and assigns it to the Filters field.
func (o *GetNetworkAlertsSettings200ResponseAlertsInner) SetFilters(v GetNetworkAlertsSettings200ResponseAlertsInnerFilters) {
	o.Filters = &v
}

func (o GetNetworkAlertsSettings200ResponseAlertsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkAlertsSettings200ResponseAlertsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.AlertDestinations) {
		toSerialize["alertDestinations"] = o.AlertDestinations
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	return toSerialize, nil
}

func (o *GetNetworkAlertsSettings200ResponseAlertsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetNetworkAlertsSettings200ResponseAlertsInner := _GetNetworkAlertsSettings200ResponseAlertsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetNetworkAlertsSettings200ResponseAlertsInner)

	if err != nil {
		return err
	}

	*o = GetNetworkAlertsSettings200ResponseAlertsInner(varGetNetworkAlertsSettings200ResponseAlertsInner)

	return err
}

type NullableGetNetworkAlertsSettings200ResponseAlertsInner struct {
	value *GetNetworkAlertsSettings200ResponseAlertsInner
	isSet bool
}

func (v NullableGetNetworkAlertsSettings200ResponseAlertsInner) Get() *GetNetworkAlertsSettings200ResponseAlertsInner {
	return v.value
}

func (v *NullableGetNetworkAlertsSettings200ResponseAlertsInner) Set(val *GetNetworkAlertsSettings200ResponseAlertsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkAlertsSettings200ResponseAlertsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkAlertsSettings200ResponseAlertsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkAlertsSettings200ResponseAlertsInner(val *GetNetworkAlertsSettings200ResponseAlertsInner) *NullableGetNetworkAlertsSettings200ResponseAlertsInner {
	return &NullableGetNetworkAlertsSettings200ResponseAlertsInner{value: val, isSet: true}
}

func (v NullableGetNetworkAlertsSettings200ResponseAlertsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkAlertsSettings200ResponseAlertsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


