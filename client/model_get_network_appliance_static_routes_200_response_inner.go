/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkApplianceStaticRoutes200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkApplianceStaticRoutes200ResponseInner{}

// GetNetworkApplianceStaticRoutes200ResponseInner struct for GetNetworkApplianceStaticRoutes200ResponseInner
type GetNetworkApplianceStaticRoutes200ResponseInner struct {
	// Route ID
	Id *string `json:"id,omitempty"`
	// IP protocol version
	IpVersion *int32 `json:"ipVersion,omitempty"`
	// Network ID
	NetworkId *string `json:"networkId,omitempty"`
	// Whether the route is enabled or not
	Enabled *bool `json:"enabled,omitempty"`
	// Name of the route
	Name *string `json:"name,omitempty"`
	// Subnet of the route
	Subnet *string `json:"subnet,omitempty"`
	// Gateway IP address (next hop)
	GatewayIp *string `json:"gatewayIp,omitempty"`
	// Fixed DHCP IP assignments on the route
	FixedIpAssignments *map[string]GetNetworkApplianceStaticRoutes200ResponseInnerFixedIpAssignmentsValue `json:"fixedIpAssignments,omitempty"`
	// DHCP reserved IP ranges
	ReservedIpRanges []GetNetworkApplianceStaticRoutes200ResponseInnerReservedIpRangesInner `json:"reservedIpRanges,omitempty"`
	// Gateway VLAN ID
	GatewayVlanId *int32 `json:"gatewayVlanId,omitempty"`
}

// NewGetNetworkApplianceStaticRoutes200ResponseInner instantiates a new GetNetworkApplianceStaticRoutes200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkApplianceStaticRoutes200ResponseInner() *GetNetworkApplianceStaticRoutes200ResponseInner {
	this := GetNetworkApplianceStaticRoutes200ResponseInner{}
	return &this
}

// NewGetNetworkApplianceStaticRoutes200ResponseInnerWithDefaults instantiates a new GetNetworkApplianceStaticRoutes200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkApplianceStaticRoutes200ResponseInnerWithDefaults() *GetNetworkApplianceStaticRoutes200ResponseInner {
	this := GetNetworkApplianceStaticRoutes200ResponseInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) SetId(v string) {
	o.Id = &v
}

// GetIpVersion returns the IpVersion field value if set, zero value otherwise.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetIpVersion() int32 {
	if o == nil || IsNil(o.IpVersion) {
		var ret int32
		return ret
	}
	return *o.IpVersion
}

// GetIpVersionOk returns a tuple with the IpVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetIpVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.IpVersion) {
		return nil, false
	}
	return o.IpVersion, true
}

// HasIpVersion returns a boolean if a field has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) HasIpVersion() bool {
	if o != nil && !IsNil(o.IpVersion) {
		return true
	}

	return false
}

// SetIpVersion gets a reference to the given int32 and assigns it to the IpVersion field.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) SetIpVersion(v int32) {
	o.IpVersion = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetNetworkId() string {
	if o == nil || IsNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetNetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkId) {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) HasNetworkId() bool {
	if o != nil && !IsNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) SetName(v string) {
	o.Name = &v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetSubnet() string {
	if o == nil || IsNil(o.Subnet) {
		var ret string
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetSubnetOk() (*string, bool) {
	if o == nil || IsNil(o.Subnet) {
		return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) HasSubnet() bool {
	if o != nil && !IsNil(o.Subnet) {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given string and assigns it to the Subnet field.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) SetSubnet(v string) {
	o.Subnet = &v
}

// GetGatewayIp returns the GatewayIp field value if set, zero value otherwise.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetGatewayIp() string {
	if o == nil || IsNil(o.GatewayIp) {
		var ret string
		return ret
	}
	return *o.GatewayIp
}

// GetGatewayIpOk returns a tuple with the GatewayIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetGatewayIpOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayIp) {
		return nil, false
	}
	return o.GatewayIp, true
}

// HasGatewayIp returns a boolean if a field has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) HasGatewayIp() bool {
	if o != nil && !IsNil(o.GatewayIp) {
		return true
	}

	return false
}

// SetGatewayIp gets a reference to the given string and assigns it to the GatewayIp field.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) SetGatewayIp(v string) {
	o.GatewayIp = &v
}

// GetFixedIpAssignments returns the FixedIpAssignments field value if set, zero value otherwise.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetFixedIpAssignments() map[string]GetNetworkApplianceStaticRoutes200ResponseInnerFixedIpAssignmentsValue {
	if o == nil || IsNil(o.FixedIpAssignments) {
		var ret map[string]GetNetworkApplianceStaticRoutes200ResponseInnerFixedIpAssignmentsValue
		return ret
	}
	return *o.FixedIpAssignments
}

// GetFixedIpAssignmentsOk returns a tuple with the FixedIpAssignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetFixedIpAssignmentsOk() (*map[string]GetNetworkApplianceStaticRoutes200ResponseInnerFixedIpAssignmentsValue, bool) {
	if o == nil || IsNil(o.FixedIpAssignments) {
		return nil, false
	}
	return o.FixedIpAssignments, true
}

// HasFixedIpAssignments returns a boolean if a field has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) HasFixedIpAssignments() bool {
	if o != nil && !IsNil(o.FixedIpAssignments) {
		return true
	}

	return false
}

// SetFixedIpAssignments gets a reference to the given map[string]GetNetworkApplianceStaticRoutes200ResponseInnerFixedIpAssignmentsValue and assigns it to the FixedIpAssignments field.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) SetFixedIpAssignments(v map[string]GetNetworkApplianceStaticRoutes200ResponseInnerFixedIpAssignmentsValue) {
	o.FixedIpAssignments = &v
}

// GetReservedIpRanges returns the ReservedIpRanges field value if set, zero value otherwise.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetReservedIpRanges() []GetNetworkApplianceStaticRoutes200ResponseInnerReservedIpRangesInner {
	if o == nil || IsNil(o.ReservedIpRanges) {
		var ret []GetNetworkApplianceStaticRoutes200ResponseInnerReservedIpRangesInner
		return ret
	}
	return o.ReservedIpRanges
}

// GetReservedIpRangesOk returns a tuple with the ReservedIpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetReservedIpRangesOk() ([]GetNetworkApplianceStaticRoutes200ResponseInnerReservedIpRangesInner, bool) {
	if o == nil || IsNil(o.ReservedIpRanges) {
		return nil, false
	}
	return o.ReservedIpRanges, true
}

// HasReservedIpRanges returns a boolean if a field has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) HasReservedIpRanges() bool {
	if o != nil && !IsNil(o.ReservedIpRanges) {
		return true
	}

	return false
}

// SetReservedIpRanges gets a reference to the given []GetNetworkApplianceStaticRoutes200ResponseInnerReservedIpRangesInner and assigns it to the ReservedIpRanges field.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) SetReservedIpRanges(v []GetNetworkApplianceStaticRoutes200ResponseInnerReservedIpRangesInner) {
	o.ReservedIpRanges = v
}

// GetGatewayVlanId returns the GatewayVlanId field value if set, zero value otherwise.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetGatewayVlanId() int32 {
	if o == nil || IsNil(o.GatewayVlanId) {
		var ret int32
		return ret
	}
	return *o.GatewayVlanId
}

// GetGatewayVlanIdOk returns a tuple with the GatewayVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) GetGatewayVlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.GatewayVlanId) {
		return nil, false
	}
	return o.GatewayVlanId, true
}

// HasGatewayVlanId returns a boolean if a field has been set.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) HasGatewayVlanId() bool {
	if o != nil && !IsNil(o.GatewayVlanId) {
		return true
	}

	return false
}

// SetGatewayVlanId gets a reference to the given int32 and assigns it to the GatewayVlanId field.
func (o *GetNetworkApplianceStaticRoutes200ResponseInner) SetGatewayVlanId(v int32) {
	o.GatewayVlanId = &v
}

func (o GetNetworkApplianceStaticRoutes200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkApplianceStaticRoutes200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IpVersion) {
		toSerialize["ipVersion"] = o.IpVersion
	}
	if !IsNil(o.NetworkId) {
		toSerialize["networkId"] = o.NetworkId
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Subnet) {
		toSerialize["subnet"] = o.Subnet
	}
	if !IsNil(o.GatewayIp) {
		toSerialize["gatewayIp"] = o.GatewayIp
	}
	if !IsNil(o.FixedIpAssignments) {
		toSerialize["fixedIpAssignments"] = o.FixedIpAssignments
	}
	if !IsNil(o.ReservedIpRanges) {
		toSerialize["reservedIpRanges"] = o.ReservedIpRanges
	}
	if !IsNil(o.GatewayVlanId) {
		toSerialize["gatewayVlanId"] = o.GatewayVlanId
	}
	return toSerialize, nil
}

type NullableGetNetworkApplianceStaticRoutes200ResponseInner struct {
	value *GetNetworkApplianceStaticRoutes200ResponseInner
	isSet bool
}

func (v NullableGetNetworkApplianceStaticRoutes200ResponseInner) Get() *GetNetworkApplianceStaticRoutes200ResponseInner {
	return v.value
}

func (v *NullableGetNetworkApplianceStaticRoutes200ResponseInner) Set(val *GetNetworkApplianceStaticRoutes200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkApplianceStaticRoutes200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkApplianceStaticRoutes200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkApplianceStaticRoutes200ResponseInner(val *GetNetworkApplianceStaticRoutes200ResponseInner) *NullableGetNetworkApplianceStaticRoutes200ResponseInner {
	return &NullableGetNetworkApplianceStaticRoutes200ResponseInner{value: val, isSet: true}
}

func (v NullableGetNetworkApplianceStaticRoutes200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkApplianceStaticRoutes200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


