/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner{}

// GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner struct for GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner
type GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner struct {
	// The start time of the channel utilization interval.
	StartTs *time.Time `json:"start_ts,omitempty"`
	// The end time of the channel utilization interval.
	EndTs *time.Time `json:"end_ts,omitempty"`
	// Percentage of total channel utiliation for the given radio.
	Utilization *float32 `json:"utilization,omitempty"`
	// Percentage of wifi channel utiliation for the given radio.
	Wifi *float32 `json:"wifi,omitempty"`
	// Percentage of non-wifi channel utiliation for the given radio.
	NonWifi *float32 `json:"non_wifi,omitempty"`
}

// NewGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner instantiates a new GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner() *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner {
	this := GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner{}
	return &this
}

// NewGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0InnerWithDefaults instantiates a new GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0InnerWithDefaults() *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner {
	this := GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner{}
	return &this
}

// GetStartTs returns the StartTs field value if set, zero value otherwise.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) GetStartTs() time.Time {
	if o == nil || IsNil(o.StartTs) {
		var ret time.Time
		return ret
	}
	return *o.StartTs
}

// GetStartTsOk returns a tuple with the StartTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) GetStartTsOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTs) {
		return nil, false
	}
	return o.StartTs, true
}

// HasStartTs returns a boolean if a field has been set.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) HasStartTs() bool {
	if o != nil && !IsNil(o.StartTs) {
		return true
	}

	return false
}

// SetStartTs gets a reference to the given time.Time and assigns it to the StartTs field.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) SetStartTs(v time.Time) {
	o.StartTs = &v
}

// GetEndTs returns the EndTs field value if set, zero value otherwise.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) GetEndTs() time.Time {
	if o == nil || IsNil(o.EndTs) {
		var ret time.Time
		return ret
	}
	return *o.EndTs
}

// GetEndTsOk returns a tuple with the EndTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) GetEndTsOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTs) {
		return nil, false
	}
	return o.EndTs, true
}

// HasEndTs returns a boolean if a field has been set.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) HasEndTs() bool {
	if o != nil && !IsNil(o.EndTs) {
		return true
	}

	return false
}

// SetEndTs gets a reference to the given time.Time and assigns it to the EndTs field.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) SetEndTs(v time.Time) {
	o.EndTs = &v
}

// GetUtilization returns the Utilization field value if set, zero value otherwise.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) GetUtilization() float32 {
	if o == nil || IsNil(o.Utilization) {
		var ret float32
		return ret
	}
	return *o.Utilization
}

// GetUtilizationOk returns a tuple with the Utilization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) GetUtilizationOk() (*float32, bool) {
	if o == nil || IsNil(o.Utilization) {
		return nil, false
	}
	return o.Utilization, true
}

// HasUtilization returns a boolean if a field has been set.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) HasUtilization() bool {
	if o != nil && !IsNil(o.Utilization) {
		return true
	}

	return false
}

// SetUtilization gets a reference to the given float32 and assigns it to the Utilization field.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) SetUtilization(v float32) {
	o.Utilization = &v
}

// GetWifi returns the Wifi field value if set, zero value otherwise.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) GetWifi() float32 {
	if o == nil || IsNil(o.Wifi) {
		var ret float32
		return ret
	}
	return *o.Wifi
}

// GetWifiOk returns a tuple with the Wifi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) GetWifiOk() (*float32, bool) {
	if o == nil || IsNil(o.Wifi) {
		return nil, false
	}
	return o.Wifi, true
}

// HasWifi returns a boolean if a field has been set.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) HasWifi() bool {
	if o != nil && !IsNil(o.Wifi) {
		return true
	}

	return false
}

// SetWifi gets a reference to the given float32 and assigns it to the Wifi field.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) SetWifi(v float32) {
	o.Wifi = &v
}

// GetNonWifi returns the NonWifi field value if set, zero value otherwise.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) GetNonWifi() float32 {
	if o == nil || IsNil(o.NonWifi) {
		var ret float32
		return ret
	}
	return *o.NonWifi
}

// GetNonWifiOk returns a tuple with the NonWifi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) GetNonWifiOk() (*float32, bool) {
	if o == nil || IsNil(o.NonWifi) {
		return nil, false
	}
	return o.NonWifi, true
}

// HasNonWifi returns a boolean if a field has been set.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) HasNonWifi() bool {
	if o != nil && !IsNil(o.NonWifi) {
		return true
	}

	return false
}

// SetNonWifi gets a reference to the given float32 and assigns it to the NonWifi field.
func (o *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) SetNonWifi(v float32) {
	o.NonWifi = &v
}

func (o GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartTs) {
		toSerialize["start_ts"] = o.StartTs
	}
	if !IsNil(o.EndTs) {
		toSerialize["end_ts"] = o.EndTs
	}
	if !IsNil(o.Utilization) {
		toSerialize["utilization"] = o.Utilization
	}
	if !IsNil(o.Wifi) {
		toSerialize["wifi"] = o.Wifi
	}
	if !IsNil(o.NonWifi) {
		toSerialize["non_wifi"] = o.NonWifi
	}
	return toSerialize, nil
}

type NullableGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner struct {
	value *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner
	isSet bool
}

func (v NullableGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) Get() *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner {
	return v.value
}

func (v *NullableGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) Set(val *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner(val *GetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) *NullableGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner {
	return &NullableGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner{value: val, isSet: true}
}

func (v NullableGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkNetworkHealthChannelUtilization200ResponseInnerWifi0Inner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


