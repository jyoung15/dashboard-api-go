/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner{}

// GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner struct for GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner
type GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner struct {
	// The sha256 digest of allowed file
	Sha256 *string `json:"sha256,omitempty"`
	// Comment about the allowed file
	Comment *string `json:"comment,omitempty"`
}

// NewGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner instantiates a new GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner() *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner {
	this := GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner{}
	return &this
}

// NewGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInnerWithDefaults instantiates a new GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInnerWithDefaults() *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner {
	this := GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner{}
	return &this
}

// GetSha256 returns the Sha256 field value if set, zero value otherwise.
func (o *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) GetSha256() string {
	if o == nil || IsNil(o.Sha256) {
		var ret string
		return ret
	}
	return *o.Sha256
}

// GetSha256Ok returns a tuple with the Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) GetSha256Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha256) {
		return nil, false
	}
	return o.Sha256, true
}

// HasSha256 returns a boolean if a field has been set.
func (o *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) HasSha256() bool {
	if o != nil && !IsNil(o.Sha256) {
		return true
	}

	return false
}

// SetSha256 gets a reference to the given string and assigns it to the Sha256 field.
func (o *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) SetSha256(v string) {
	o.Sha256 = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) SetComment(v string) {
	o.Comment = &v
}

func (o GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sha256) {
		toSerialize["sha256"] = o.Sha256
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullableGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner struct {
	value *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner
	isSet bool
}

func (v NullableGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) Get() *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner {
	return v.value
}

func (v *NullableGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) Set(val *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner(val *GetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) *NullableGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner {
	return &NullableGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner{value: val, isSet: true}
}

func (v NullableGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkApplianceSecurityMalware200ResponseAllowedFilesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


