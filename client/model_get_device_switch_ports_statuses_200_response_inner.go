/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetDeviceSwitchPortsStatuses200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDeviceSwitchPortsStatuses200ResponseInner{}

// GetDeviceSwitchPortsStatuses200ResponseInner struct for GetDeviceSwitchPortsStatuses200ResponseInner
type GetDeviceSwitchPortsStatuses200ResponseInner struct {
	// The string identifier of this port on the switch. This is commonly just the port number but may contain additional identifying information such as the slot and module-type if the port is located on a port module.
	PortId *string `json:"portId,omitempty"`
	// Whether the port is configured to be enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// The current connection status of the port.
	Status *string `json:"status,omitempty"`
	SpanningTree *GetDeviceSwitchPortsStatuses200ResponseInnerSpanningTree `json:"spanningTree,omitempty"`
	// Whether the port is the switch's uplink.
	IsUplink *bool `json:"isUplink,omitempty"`
	// All errors present on the port.
	Errors []string `json:"errors,omitempty"`
	// All warnings present on the port.
	Warnings []string `json:"warnings,omitempty"`
	// The current data transfer rate which the port is operating at.
	Speed *string `json:"speed,omitempty"`
	// The current duplex of a connected port.
	Duplex *string `json:"duplex,omitempty"`
	UsageInKb *GetDeviceSwitchPortsStatuses200ResponseInnerUsageInKb `json:"usageInKb,omitempty"`
	Cdp *GetDeviceSwitchPortsStatuses200ResponseInnerCdp `json:"cdp,omitempty"`
	Lldp *GetDeviceSwitchPortsStatuses200ResponseInnerLldp `json:"lldp,omitempty"`
	// The number of clients connected through this port.
	ClientCount *int32 `json:"clientCount,omitempty"`
	// How much power (in watt-hours) has been delivered by this port during the timespan.
	PowerUsageInWh *float32 `json:"powerUsageInWh,omitempty"`
	TrafficInKbps *GetDeviceSwitchPortsStatuses200ResponseInnerTrafficInKbps `json:"trafficInKbps,omitempty"`
	SecurePort *GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort `json:"securePort,omitempty"`
	Poe *GetDeviceSwitchPortsStatuses200ResponseInnerPoe `json:"poe,omitempty"`
}

// NewGetDeviceSwitchPortsStatuses200ResponseInner instantiates a new GetDeviceSwitchPortsStatuses200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeviceSwitchPortsStatuses200ResponseInner() *GetDeviceSwitchPortsStatuses200ResponseInner {
	this := GetDeviceSwitchPortsStatuses200ResponseInner{}
	return &this
}

// NewGetDeviceSwitchPortsStatuses200ResponseInnerWithDefaults instantiates a new GetDeviceSwitchPortsStatuses200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeviceSwitchPortsStatuses200ResponseInnerWithDefaults() *GetDeviceSwitchPortsStatuses200ResponseInner {
	this := GetDeviceSwitchPortsStatuses200ResponseInner{}
	return &this
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetPortId() string {
	if o == nil || IsNil(o.PortId) {
		var ret string
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetPortIdOk() (*string, bool) {
	if o == nil || IsNil(o.PortId) {
		return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasPortId() bool {
	if o != nil && !IsNil(o.PortId) {
		return true
	}

	return false
}

// SetPortId gets a reference to the given string and assigns it to the PortId field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetPortId(v string) {
	o.PortId = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetStatus(v string) {
	o.Status = &v
}

// GetSpanningTree returns the SpanningTree field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetSpanningTree() GetDeviceSwitchPortsStatuses200ResponseInnerSpanningTree {
	if o == nil || IsNil(o.SpanningTree) {
		var ret GetDeviceSwitchPortsStatuses200ResponseInnerSpanningTree
		return ret
	}
	return *o.SpanningTree
}

// GetSpanningTreeOk returns a tuple with the SpanningTree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetSpanningTreeOk() (*GetDeviceSwitchPortsStatuses200ResponseInnerSpanningTree, bool) {
	if o == nil || IsNil(o.SpanningTree) {
		return nil, false
	}
	return o.SpanningTree, true
}

// HasSpanningTree returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasSpanningTree() bool {
	if o != nil && !IsNil(o.SpanningTree) {
		return true
	}

	return false
}

// SetSpanningTree gets a reference to the given GetDeviceSwitchPortsStatuses200ResponseInnerSpanningTree and assigns it to the SpanningTree field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetSpanningTree(v GetDeviceSwitchPortsStatuses200ResponseInnerSpanningTree) {
	o.SpanningTree = &v
}

// GetIsUplink returns the IsUplink field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetIsUplink() bool {
	if o == nil || IsNil(o.IsUplink) {
		var ret bool
		return ret
	}
	return *o.IsUplink
}

// GetIsUplinkOk returns a tuple with the IsUplink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetIsUplinkOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUplink) {
		return nil, false
	}
	return o.IsUplink, true
}

// HasIsUplink returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasIsUplink() bool {
	if o != nil && !IsNil(o.IsUplink) {
		return true
	}

	return false
}

// SetIsUplink gets a reference to the given bool and assigns it to the IsUplink field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetIsUplink(v bool) {
	o.IsUplink = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetErrors() []string {
	if o == nil || IsNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetErrors(v []string) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetWarnings() []string {
	if o == nil || IsNil(o.Warnings) {
		var ret []string
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetWarningsOk() ([]string, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []string and assigns it to the Warnings field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetWarnings(v []string) {
	o.Warnings = v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetSpeed() string {
	if o == nil || IsNil(o.Speed) {
		var ret string
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetSpeedOk() (*string, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given string and assigns it to the Speed field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetSpeed(v string) {
	o.Speed = &v
}

// GetDuplex returns the Duplex field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetDuplex() string {
	if o == nil || IsNil(o.Duplex) {
		var ret string
		return ret
	}
	return *o.Duplex
}

// GetDuplexOk returns a tuple with the Duplex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetDuplexOk() (*string, bool) {
	if o == nil || IsNil(o.Duplex) {
		return nil, false
	}
	return o.Duplex, true
}

// HasDuplex returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasDuplex() bool {
	if o != nil && !IsNil(o.Duplex) {
		return true
	}

	return false
}

// SetDuplex gets a reference to the given string and assigns it to the Duplex field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetDuplex(v string) {
	o.Duplex = &v
}

// GetUsageInKb returns the UsageInKb field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetUsageInKb() GetDeviceSwitchPortsStatuses200ResponseInnerUsageInKb {
	if o == nil || IsNil(o.UsageInKb) {
		var ret GetDeviceSwitchPortsStatuses200ResponseInnerUsageInKb
		return ret
	}
	return *o.UsageInKb
}

// GetUsageInKbOk returns a tuple with the UsageInKb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetUsageInKbOk() (*GetDeviceSwitchPortsStatuses200ResponseInnerUsageInKb, bool) {
	if o == nil || IsNil(o.UsageInKb) {
		return nil, false
	}
	return o.UsageInKb, true
}

// HasUsageInKb returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasUsageInKb() bool {
	if o != nil && !IsNil(o.UsageInKb) {
		return true
	}

	return false
}

// SetUsageInKb gets a reference to the given GetDeviceSwitchPortsStatuses200ResponseInnerUsageInKb and assigns it to the UsageInKb field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetUsageInKb(v GetDeviceSwitchPortsStatuses200ResponseInnerUsageInKb) {
	o.UsageInKb = &v
}

// GetCdp returns the Cdp field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetCdp() GetDeviceSwitchPortsStatuses200ResponseInnerCdp {
	if o == nil || IsNil(o.Cdp) {
		var ret GetDeviceSwitchPortsStatuses200ResponseInnerCdp
		return ret
	}
	return *o.Cdp
}

// GetCdpOk returns a tuple with the Cdp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetCdpOk() (*GetDeviceSwitchPortsStatuses200ResponseInnerCdp, bool) {
	if o == nil || IsNil(o.Cdp) {
		return nil, false
	}
	return o.Cdp, true
}

// HasCdp returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasCdp() bool {
	if o != nil && !IsNil(o.Cdp) {
		return true
	}

	return false
}

// SetCdp gets a reference to the given GetDeviceSwitchPortsStatuses200ResponseInnerCdp and assigns it to the Cdp field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetCdp(v GetDeviceSwitchPortsStatuses200ResponseInnerCdp) {
	o.Cdp = &v
}

// GetLldp returns the Lldp field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetLldp() GetDeviceSwitchPortsStatuses200ResponseInnerLldp {
	if o == nil || IsNil(o.Lldp) {
		var ret GetDeviceSwitchPortsStatuses200ResponseInnerLldp
		return ret
	}
	return *o.Lldp
}

// GetLldpOk returns a tuple with the Lldp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetLldpOk() (*GetDeviceSwitchPortsStatuses200ResponseInnerLldp, bool) {
	if o == nil || IsNil(o.Lldp) {
		return nil, false
	}
	return o.Lldp, true
}

// HasLldp returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasLldp() bool {
	if o != nil && !IsNil(o.Lldp) {
		return true
	}

	return false
}

// SetLldp gets a reference to the given GetDeviceSwitchPortsStatuses200ResponseInnerLldp and assigns it to the Lldp field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetLldp(v GetDeviceSwitchPortsStatuses200ResponseInnerLldp) {
	o.Lldp = &v
}

// GetClientCount returns the ClientCount field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetClientCount() int32 {
	if o == nil || IsNil(o.ClientCount) {
		var ret int32
		return ret
	}
	return *o.ClientCount
}

// GetClientCountOk returns a tuple with the ClientCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetClientCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ClientCount) {
		return nil, false
	}
	return o.ClientCount, true
}

// HasClientCount returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasClientCount() bool {
	if o != nil && !IsNil(o.ClientCount) {
		return true
	}

	return false
}

// SetClientCount gets a reference to the given int32 and assigns it to the ClientCount field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetClientCount(v int32) {
	o.ClientCount = &v
}

// GetPowerUsageInWh returns the PowerUsageInWh field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetPowerUsageInWh() float32 {
	if o == nil || IsNil(o.PowerUsageInWh) {
		var ret float32
		return ret
	}
	return *o.PowerUsageInWh
}

// GetPowerUsageInWhOk returns a tuple with the PowerUsageInWh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetPowerUsageInWhOk() (*float32, bool) {
	if o == nil || IsNil(o.PowerUsageInWh) {
		return nil, false
	}
	return o.PowerUsageInWh, true
}

// HasPowerUsageInWh returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasPowerUsageInWh() bool {
	if o != nil && !IsNil(o.PowerUsageInWh) {
		return true
	}

	return false
}

// SetPowerUsageInWh gets a reference to the given float32 and assigns it to the PowerUsageInWh field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetPowerUsageInWh(v float32) {
	o.PowerUsageInWh = &v
}

// GetTrafficInKbps returns the TrafficInKbps field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetTrafficInKbps() GetDeviceSwitchPortsStatuses200ResponseInnerTrafficInKbps {
	if o == nil || IsNil(o.TrafficInKbps) {
		var ret GetDeviceSwitchPortsStatuses200ResponseInnerTrafficInKbps
		return ret
	}
	return *o.TrafficInKbps
}

// GetTrafficInKbpsOk returns a tuple with the TrafficInKbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetTrafficInKbpsOk() (*GetDeviceSwitchPortsStatuses200ResponseInnerTrafficInKbps, bool) {
	if o == nil || IsNil(o.TrafficInKbps) {
		return nil, false
	}
	return o.TrafficInKbps, true
}

// HasTrafficInKbps returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasTrafficInKbps() bool {
	if o != nil && !IsNil(o.TrafficInKbps) {
		return true
	}

	return false
}

// SetTrafficInKbps gets a reference to the given GetDeviceSwitchPortsStatuses200ResponseInnerTrafficInKbps and assigns it to the TrafficInKbps field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetTrafficInKbps(v GetDeviceSwitchPortsStatuses200ResponseInnerTrafficInKbps) {
	o.TrafficInKbps = &v
}

// GetSecurePort returns the SecurePort field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetSecurePort() GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort {
	if o == nil || IsNil(o.SecurePort) {
		var ret GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort
		return ret
	}
	return *o.SecurePort
}

// GetSecurePortOk returns a tuple with the SecurePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetSecurePortOk() (*GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort, bool) {
	if o == nil || IsNil(o.SecurePort) {
		return nil, false
	}
	return o.SecurePort, true
}

// HasSecurePort returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasSecurePort() bool {
	if o != nil && !IsNil(o.SecurePort) {
		return true
	}

	return false
}

// SetSecurePort gets a reference to the given GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort and assigns it to the SecurePort field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetSecurePort(v GetDeviceSwitchPortsStatuses200ResponseInnerSecurePort) {
	o.SecurePort = &v
}

// GetPoe returns the Poe field value if set, zero value otherwise.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetPoe() GetDeviceSwitchPortsStatuses200ResponseInnerPoe {
	if o == nil || IsNil(o.Poe) {
		var ret GetDeviceSwitchPortsStatuses200ResponseInnerPoe
		return ret
	}
	return *o.Poe
}

// GetPoeOk returns a tuple with the Poe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) GetPoeOk() (*GetDeviceSwitchPortsStatuses200ResponseInnerPoe, bool) {
	if o == nil || IsNil(o.Poe) {
		return nil, false
	}
	return o.Poe, true
}

// HasPoe returns a boolean if a field has been set.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) HasPoe() bool {
	if o != nil && !IsNil(o.Poe) {
		return true
	}

	return false
}

// SetPoe gets a reference to the given GetDeviceSwitchPortsStatuses200ResponseInnerPoe and assigns it to the Poe field.
func (o *GetDeviceSwitchPortsStatuses200ResponseInner) SetPoe(v GetDeviceSwitchPortsStatuses200ResponseInnerPoe) {
	o.Poe = &v
}

func (o GetDeviceSwitchPortsStatuses200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeviceSwitchPortsStatuses200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PortId) {
		toSerialize["portId"] = o.PortId
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SpanningTree) {
		toSerialize["spanningTree"] = o.SpanningTree
	}
	if !IsNil(o.IsUplink) {
		toSerialize["isUplink"] = o.IsUplink
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.Duplex) {
		toSerialize["duplex"] = o.Duplex
	}
	if !IsNil(o.UsageInKb) {
		toSerialize["usageInKb"] = o.UsageInKb
	}
	if !IsNil(o.Cdp) {
		toSerialize["cdp"] = o.Cdp
	}
	if !IsNil(o.Lldp) {
		toSerialize["lldp"] = o.Lldp
	}
	if !IsNil(o.ClientCount) {
		toSerialize["clientCount"] = o.ClientCount
	}
	if !IsNil(o.PowerUsageInWh) {
		toSerialize["powerUsageInWh"] = o.PowerUsageInWh
	}
	if !IsNil(o.TrafficInKbps) {
		toSerialize["trafficInKbps"] = o.TrafficInKbps
	}
	if !IsNil(o.SecurePort) {
		toSerialize["securePort"] = o.SecurePort
	}
	if !IsNil(o.Poe) {
		toSerialize["poe"] = o.Poe
	}
	return toSerialize, nil
}

type NullableGetDeviceSwitchPortsStatuses200ResponseInner struct {
	value *GetDeviceSwitchPortsStatuses200ResponseInner
	isSet bool
}

func (v NullableGetDeviceSwitchPortsStatuses200ResponseInner) Get() *GetDeviceSwitchPortsStatuses200ResponseInner {
	return v.value
}

func (v *NullableGetDeviceSwitchPortsStatuses200ResponseInner) Set(val *GetDeviceSwitchPortsStatuses200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeviceSwitchPortsStatuses200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeviceSwitchPortsStatuses200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeviceSwitchPortsStatuses200ResponseInner(val *GetDeviceSwitchPortsStatuses200ResponseInner) *NullableGetDeviceSwitchPortsStatuses200ResponseInner {
	return &NullableGetDeviceSwitchPortsStatuses200ResponseInner{value: val, isSet: true}
}

func (v NullableGetDeviceSwitchPortsStatuses200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeviceSwitchPortsStatuses200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


