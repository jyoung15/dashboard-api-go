/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ClaimNetworkDevices200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClaimNetworkDevices200Response{}

// ClaimNetworkDevices200Response struct for ClaimNetworkDevices200Response
type ClaimNetworkDevices200Response struct {
	// The serials of the devices
	Serials []string `json:"serials,omitempty"`
	// Errors for devices that were not added
	Errors []ClaimNetworkDevices200ResponseErrorsInner `json:"errors,omitempty"`
}

// NewClaimNetworkDevices200Response instantiates a new ClaimNetworkDevices200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClaimNetworkDevices200Response() *ClaimNetworkDevices200Response {
	this := ClaimNetworkDevices200Response{}
	return &this
}

// NewClaimNetworkDevices200ResponseWithDefaults instantiates a new ClaimNetworkDevices200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClaimNetworkDevices200ResponseWithDefaults() *ClaimNetworkDevices200Response {
	this := ClaimNetworkDevices200Response{}
	return &this
}

// GetSerials returns the Serials field value if set, zero value otherwise.
func (o *ClaimNetworkDevices200Response) GetSerials() []string {
	if o == nil || IsNil(o.Serials) {
		var ret []string
		return ret
	}
	return o.Serials
}

// GetSerialsOk returns a tuple with the Serials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimNetworkDevices200Response) GetSerialsOk() ([]string, bool) {
	if o == nil || IsNil(o.Serials) {
		return nil, false
	}
	return o.Serials, true
}

// HasSerials returns a boolean if a field has been set.
func (o *ClaimNetworkDevices200Response) HasSerials() bool {
	if o != nil && !IsNil(o.Serials) {
		return true
	}

	return false
}

// SetSerials gets a reference to the given []string and assigns it to the Serials field.
func (o *ClaimNetworkDevices200Response) SetSerials(v []string) {
	o.Serials = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ClaimNetworkDevices200Response) GetErrors() []ClaimNetworkDevices200ResponseErrorsInner {
	if o == nil || IsNil(o.Errors) {
		var ret []ClaimNetworkDevices200ResponseErrorsInner
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimNetworkDevices200Response) GetErrorsOk() ([]ClaimNetworkDevices200ResponseErrorsInner, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ClaimNetworkDevices200Response) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []ClaimNetworkDevices200ResponseErrorsInner and assigns it to the Errors field.
func (o *ClaimNetworkDevices200Response) SetErrors(v []ClaimNetworkDevices200ResponseErrorsInner) {
	o.Errors = v
}

func (o ClaimNetworkDevices200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClaimNetworkDevices200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Serials) {
		toSerialize["serials"] = o.Serials
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return toSerialize, nil
}

type NullableClaimNetworkDevices200Response struct {
	value *ClaimNetworkDevices200Response
	isSet bool
}

func (v NullableClaimNetworkDevices200Response) Get() *ClaimNetworkDevices200Response {
	return v.value
}

func (v *NullableClaimNetworkDevices200Response) Set(val *ClaimNetworkDevices200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableClaimNetworkDevices200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableClaimNetworkDevices200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClaimNetworkDevices200Response(val *ClaimNetworkDevices200Response) *NullableClaimNetworkDevices200Response {
	return &NullableClaimNetworkDevices200Response{value: val, isSet: true}
}

func (v NullableClaimNetworkDevices200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClaimNetworkDevices200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


