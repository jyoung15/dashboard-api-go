/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UpdateNetworkApplianceRfProfileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkApplianceRfProfileRequest{}

// UpdateNetworkApplianceRfProfileRequest struct for UpdateNetworkApplianceRfProfileRequest
type UpdateNetworkApplianceRfProfileRequest struct {
	// The name of the new profile. Must be unique.
	Name *string `json:"name,omitempty"`
	TwoFourGhzSettings *UpdateNetworkApplianceRfProfileRequestTwoFourGhzSettings `json:"twoFourGhzSettings,omitempty"`
	FiveGhzSettings *UpdateNetworkApplianceRfProfileRequestFiveGhzSettings `json:"fiveGhzSettings,omitempty"`
	PerSsidSettings *CreateNetworkApplianceRfProfileRequestPerSsidSettings `json:"perSsidSettings,omitempty"`
}

// NewUpdateNetworkApplianceRfProfileRequest instantiates a new UpdateNetworkApplianceRfProfileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkApplianceRfProfileRequest() *UpdateNetworkApplianceRfProfileRequest {
	this := UpdateNetworkApplianceRfProfileRequest{}
	return &this
}

// NewUpdateNetworkApplianceRfProfileRequestWithDefaults instantiates a new UpdateNetworkApplianceRfProfileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkApplianceRfProfileRequestWithDefaults() *UpdateNetworkApplianceRfProfileRequest {
	this := UpdateNetworkApplianceRfProfileRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateNetworkApplianceRfProfileRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkApplianceRfProfileRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateNetworkApplianceRfProfileRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateNetworkApplianceRfProfileRequest) SetName(v string) {
	o.Name = &v
}

// GetTwoFourGhzSettings returns the TwoFourGhzSettings field value if set, zero value otherwise.
func (o *UpdateNetworkApplianceRfProfileRequest) GetTwoFourGhzSettings() UpdateNetworkApplianceRfProfileRequestTwoFourGhzSettings {
	if o == nil || IsNil(o.TwoFourGhzSettings) {
		var ret UpdateNetworkApplianceRfProfileRequestTwoFourGhzSettings
		return ret
	}
	return *o.TwoFourGhzSettings
}

// GetTwoFourGhzSettingsOk returns a tuple with the TwoFourGhzSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkApplianceRfProfileRequest) GetTwoFourGhzSettingsOk() (*UpdateNetworkApplianceRfProfileRequestTwoFourGhzSettings, bool) {
	if o == nil || IsNil(o.TwoFourGhzSettings) {
		return nil, false
	}
	return o.TwoFourGhzSettings, true
}

// HasTwoFourGhzSettings returns a boolean if a field has been set.
func (o *UpdateNetworkApplianceRfProfileRequest) HasTwoFourGhzSettings() bool {
	if o != nil && !IsNil(o.TwoFourGhzSettings) {
		return true
	}

	return false
}

// SetTwoFourGhzSettings gets a reference to the given UpdateNetworkApplianceRfProfileRequestTwoFourGhzSettings and assigns it to the TwoFourGhzSettings field.
func (o *UpdateNetworkApplianceRfProfileRequest) SetTwoFourGhzSettings(v UpdateNetworkApplianceRfProfileRequestTwoFourGhzSettings) {
	o.TwoFourGhzSettings = &v
}

// GetFiveGhzSettings returns the FiveGhzSettings field value if set, zero value otherwise.
func (o *UpdateNetworkApplianceRfProfileRequest) GetFiveGhzSettings() UpdateNetworkApplianceRfProfileRequestFiveGhzSettings {
	if o == nil || IsNil(o.FiveGhzSettings) {
		var ret UpdateNetworkApplianceRfProfileRequestFiveGhzSettings
		return ret
	}
	return *o.FiveGhzSettings
}

// GetFiveGhzSettingsOk returns a tuple with the FiveGhzSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkApplianceRfProfileRequest) GetFiveGhzSettingsOk() (*UpdateNetworkApplianceRfProfileRequestFiveGhzSettings, bool) {
	if o == nil || IsNil(o.FiveGhzSettings) {
		return nil, false
	}
	return o.FiveGhzSettings, true
}

// HasFiveGhzSettings returns a boolean if a field has been set.
func (o *UpdateNetworkApplianceRfProfileRequest) HasFiveGhzSettings() bool {
	if o != nil && !IsNil(o.FiveGhzSettings) {
		return true
	}

	return false
}

// SetFiveGhzSettings gets a reference to the given UpdateNetworkApplianceRfProfileRequestFiveGhzSettings and assigns it to the FiveGhzSettings field.
func (o *UpdateNetworkApplianceRfProfileRequest) SetFiveGhzSettings(v UpdateNetworkApplianceRfProfileRequestFiveGhzSettings) {
	o.FiveGhzSettings = &v
}

// GetPerSsidSettings returns the PerSsidSettings field value if set, zero value otherwise.
func (o *UpdateNetworkApplianceRfProfileRequest) GetPerSsidSettings() CreateNetworkApplianceRfProfileRequestPerSsidSettings {
	if o == nil || IsNil(o.PerSsidSettings) {
		var ret CreateNetworkApplianceRfProfileRequestPerSsidSettings
		return ret
	}
	return *o.PerSsidSettings
}

// GetPerSsidSettingsOk returns a tuple with the PerSsidSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkApplianceRfProfileRequest) GetPerSsidSettingsOk() (*CreateNetworkApplianceRfProfileRequestPerSsidSettings, bool) {
	if o == nil || IsNil(o.PerSsidSettings) {
		return nil, false
	}
	return o.PerSsidSettings, true
}

// HasPerSsidSettings returns a boolean if a field has been set.
func (o *UpdateNetworkApplianceRfProfileRequest) HasPerSsidSettings() bool {
	if o != nil && !IsNil(o.PerSsidSettings) {
		return true
	}

	return false
}

// SetPerSsidSettings gets a reference to the given CreateNetworkApplianceRfProfileRequestPerSsidSettings and assigns it to the PerSsidSettings field.
func (o *UpdateNetworkApplianceRfProfileRequest) SetPerSsidSettings(v CreateNetworkApplianceRfProfileRequestPerSsidSettings) {
	o.PerSsidSettings = &v
}

func (o UpdateNetworkApplianceRfProfileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkApplianceRfProfileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TwoFourGhzSettings) {
		toSerialize["twoFourGhzSettings"] = o.TwoFourGhzSettings
	}
	if !IsNil(o.FiveGhzSettings) {
		toSerialize["fiveGhzSettings"] = o.FiveGhzSettings
	}
	if !IsNil(o.PerSsidSettings) {
		toSerialize["perSsidSettings"] = o.PerSsidSettings
	}
	return toSerialize, nil
}

type NullableUpdateNetworkApplianceRfProfileRequest struct {
	value *UpdateNetworkApplianceRfProfileRequest
	isSet bool
}

func (v NullableUpdateNetworkApplianceRfProfileRequest) Get() *UpdateNetworkApplianceRfProfileRequest {
	return v.value
}

func (v *NullableUpdateNetworkApplianceRfProfileRequest) Set(val *UpdateNetworkApplianceRfProfileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkApplianceRfProfileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkApplianceRfProfileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkApplianceRfProfileRequest(val *UpdateNetworkApplianceRfProfileRequest) *NullableUpdateNetworkApplianceRfProfileRequest {
	return &NullableUpdateNetworkApplianceRfProfileRequest{value: val, isSet: true}
}

func (v NullableUpdateNetworkApplianceRfProfileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkApplianceRfProfileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


