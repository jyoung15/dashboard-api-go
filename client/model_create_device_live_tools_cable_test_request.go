/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateDeviceLiveToolsCableTestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDeviceLiveToolsCableTestRequest{}

// CreateDeviceLiveToolsCableTestRequest struct for CreateDeviceLiveToolsCableTestRequest
type CreateDeviceLiveToolsCableTestRequest struct {
	// A list of ports for which to perform the cable test.
	Ports []string `json:"ports"`
	Callback *CreateDeviceLiveToolsArpTableRequestCallback `json:"callback,omitempty"`
}

type _CreateDeviceLiveToolsCableTestRequest CreateDeviceLiveToolsCableTestRequest

// NewCreateDeviceLiveToolsCableTestRequest instantiates a new CreateDeviceLiveToolsCableTestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDeviceLiveToolsCableTestRequest(ports []string) *CreateDeviceLiveToolsCableTestRequest {
	this := CreateDeviceLiveToolsCableTestRequest{}
	this.Ports = ports
	return &this
}

// NewCreateDeviceLiveToolsCableTestRequestWithDefaults instantiates a new CreateDeviceLiveToolsCableTestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDeviceLiveToolsCableTestRequestWithDefaults() *CreateDeviceLiveToolsCableTestRequest {
	this := CreateDeviceLiveToolsCableTestRequest{}
	return &this
}

// GetPorts returns the Ports field value
func (o *CreateDeviceLiveToolsCableTestRequest) GetPorts() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value
// and a boolean to check if the value has been set.
func (o *CreateDeviceLiveToolsCableTestRequest) GetPortsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ports, true
}

// SetPorts sets field value
func (o *CreateDeviceLiveToolsCableTestRequest) SetPorts(v []string) {
	o.Ports = v
}

// GetCallback returns the Callback field value if set, zero value otherwise.
func (o *CreateDeviceLiveToolsCableTestRequest) GetCallback() CreateDeviceLiveToolsArpTableRequestCallback {
	if o == nil || IsNil(o.Callback) {
		var ret CreateDeviceLiveToolsArpTableRequestCallback
		return ret
	}
	return *o.Callback
}

// GetCallbackOk returns a tuple with the Callback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceLiveToolsCableTestRequest) GetCallbackOk() (*CreateDeviceLiveToolsArpTableRequestCallback, bool) {
	if o == nil || IsNil(o.Callback) {
		return nil, false
	}
	return o.Callback, true
}

// HasCallback returns a boolean if a field has been set.
func (o *CreateDeviceLiveToolsCableTestRequest) HasCallback() bool {
	if o != nil && !IsNil(o.Callback) {
		return true
	}

	return false
}

// SetCallback gets a reference to the given CreateDeviceLiveToolsArpTableRequestCallback and assigns it to the Callback field.
func (o *CreateDeviceLiveToolsCableTestRequest) SetCallback(v CreateDeviceLiveToolsArpTableRequestCallback) {
	o.Callback = &v
}

func (o CreateDeviceLiveToolsCableTestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDeviceLiveToolsCableTestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ports"] = o.Ports
	if !IsNil(o.Callback) {
		toSerialize["callback"] = o.Callback
	}
	return toSerialize, nil
}

func (o *CreateDeviceLiveToolsCableTestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ports",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateDeviceLiveToolsCableTestRequest := _CreateDeviceLiveToolsCableTestRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateDeviceLiveToolsCableTestRequest)

	if err != nil {
		return err
	}

	*o = CreateDeviceLiveToolsCableTestRequest(varCreateDeviceLiveToolsCableTestRequest)

	return err
}

type NullableCreateDeviceLiveToolsCableTestRequest struct {
	value *CreateDeviceLiveToolsCableTestRequest
	isSet bool
}

func (v NullableCreateDeviceLiveToolsCableTestRequest) Get() *CreateDeviceLiveToolsCableTestRequest {
	return v.value
}

func (v *NullableCreateDeviceLiveToolsCableTestRequest) Set(val *CreateDeviceLiveToolsCableTestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDeviceLiveToolsCableTestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDeviceLiveToolsCableTestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDeviceLiveToolsCableTestRequest(val *CreateDeviceLiveToolsCableTestRequest) *NullableCreateDeviceLiveToolsCableTestRequest {
	return &NullableCreateDeviceLiveToolsCableTestRequest{value: val, isSet: true}
}

func (v NullableCreateDeviceLiveToolsCableTestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDeviceLiveToolsCableTestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


