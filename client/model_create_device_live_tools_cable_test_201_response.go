/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CreateDeviceLiveToolsCableTest201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDeviceLiveToolsCableTest201Response{}

// CreateDeviceLiveToolsCableTest201Response struct for CreateDeviceLiveToolsCableTest201Response
type CreateDeviceLiveToolsCableTest201Response struct {
	// Id of the cable test request. Used to check the status of the request.
	CableTestId *string `json:"cableTestId,omitempty"`
	// GET this url to check the status of your cable test request.
	Url *string `json:"url,omitempty"`
	Request *CreateDeviceLiveToolsCableTest201ResponseRequest `json:"request,omitempty"`
	// Status of the cable test request.
	Status *string `json:"status,omitempty"`
	Callback *CreateDeviceLiveToolsArpTable201ResponseCallback `json:"callback,omitempty"`
}

// NewCreateDeviceLiveToolsCableTest201Response instantiates a new CreateDeviceLiveToolsCableTest201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDeviceLiveToolsCableTest201Response() *CreateDeviceLiveToolsCableTest201Response {
	this := CreateDeviceLiveToolsCableTest201Response{}
	return &this
}

// NewCreateDeviceLiveToolsCableTest201ResponseWithDefaults instantiates a new CreateDeviceLiveToolsCableTest201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDeviceLiveToolsCableTest201ResponseWithDefaults() *CreateDeviceLiveToolsCableTest201Response {
	this := CreateDeviceLiveToolsCableTest201Response{}
	return &this
}

// GetCableTestId returns the CableTestId field value if set, zero value otherwise.
func (o *CreateDeviceLiveToolsCableTest201Response) GetCableTestId() string {
	if o == nil || IsNil(o.CableTestId) {
		var ret string
		return ret
	}
	return *o.CableTestId
}

// GetCableTestIdOk returns a tuple with the CableTestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceLiveToolsCableTest201Response) GetCableTestIdOk() (*string, bool) {
	if o == nil || IsNil(o.CableTestId) {
		return nil, false
	}
	return o.CableTestId, true
}

// HasCableTestId returns a boolean if a field has been set.
func (o *CreateDeviceLiveToolsCableTest201Response) HasCableTestId() bool {
	if o != nil && !IsNil(o.CableTestId) {
		return true
	}

	return false
}

// SetCableTestId gets a reference to the given string and assigns it to the CableTestId field.
func (o *CreateDeviceLiveToolsCableTest201Response) SetCableTestId(v string) {
	o.CableTestId = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CreateDeviceLiveToolsCableTest201Response) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceLiveToolsCableTest201Response) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CreateDeviceLiveToolsCableTest201Response) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CreateDeviceLiveToolsCableTest201Response) SetUrl(v string) {
	o.Url = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *CreateDeviceLiveToolsCableTest201Response) GetRequest() CreateDeviceLiveToolsCableTest201ResponseRequest {
	if o == nil || IsNil(o.Request) {
		var ret CreateDeviceLiveToolsCableTest201ResponseRequest
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceLiveToolsCableTest201Response) GetRequestOk() (*CreateDeviceLiveToolsCableTest201ResponseRequest, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *CreateDeviceLiveToolsCableTest201Response) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given CreateDeviceLiveToolsCableTest201ResponseRequest and assigns it to the Request field.
func (o *CreateDeviceLiveToolsCableTest201Response) SetRequest(v CreateDeviceLiveToolsCableTest201ResponseRequest) {
	o.Request = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreateDeviceLiveToolsCableTest201Response) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceLiveToolsCableTest201Response) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreateDeviceLiveToolsCableTest201Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CreateDeviceLiveToolsCableTest201Response) SetStatus(v string) {
	o.Status = &v
}

// GetCallback returns the Callback field value if set, zero value otherwise.
func (o *CreateDeviceLiveToolsCableTest201Response) GetCallback() CreateDeviceLiveToolsArpTable201ResponseCallback {
	if o == nil || IsNil(o.Callback) {
		var ret CreateDeviceLiveToolsArpTable201ResponseCallback
		return ret
	}
	return *o.Callback
}

// GetCallbackOk returns a tuple with the Callback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceLiveToolsCableTest201Response) GetCallbackOk() (*CreateDeviceLiveToolsArpTable201ResponseCallback, bool) {
	if o == nil || IsNil(o.Callback) {
		return nil, false
	}
	return o.Callback, true
}

// HasCallback returns a boolean if a field has been set.
func (o *CreateDeviceLiveToolsCableTest201Response) HasCallback() bool {
	if o != nil && !IsNil(o.Callback) {
		return true
	}

	return false
}

// SetCallback gets a reference to the given CreateDeviceLiveToolsArpTable201ResponseCallback and assigns it to the Callback field.
func (o *CreateDeviceLiveToolsCableTest201Response) SetCallback(v CreateDeviceLiveToolsArpTable201ResponseCallback) {
	o.Callback = &v
}

func (o CreateDeviceLiveToolsCableTest201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDeviceLiveToolsCableTest201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CableTestId) {
		toSerialize["cableTestId"] = o.CableTestId
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Callback) {
		toSerialize["callback"] = o.Callback
	}
	return toSerialize, nil
}

type NullableCreateDeviceLiveToolsCableTest201Response struct {
	value *CreateDeviceLiveToolsCableTest201Response
	isSet bool
}

func (v NullableCreateDeviceLiveToolsCableTest201Response) Get() *CreateDeviceLiveToolsCableTest201Response {
	return v.value
}

func (v *NullableCreateDeviceLiveToolsCableTest201Response) Set(val *CreateDeviceLiveToolsCableTest201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDeviceLiveToolsCableTest201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDeviceLiveToolsCableTest201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDeviceLiveToolsCableTest201Response(val *CreateDeviceLiveToolsCableTest201Response) *NullableCreateDeviceLiveToolsCableTest201Response {
	return &NullableCreateDeviceLiveToolsCableTest201Response{value: val, isSet: true}
}

func (v NullableCreateDeviceLiveToolsCableTest201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDeviceLiveToolsCableTest201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


