/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateNetworkWirelessBillingRequestPlansInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkWirelessBillingRequestPlansInner{}

// UpdateNetworkWirelessBillingRequestPlansInner struct for UpdateNetworkWirelessBillingRequestPlansInner
type UpdateNetworkWirelessBillingRequestPlansInner struct {
	// The id of the pricing plan to update.
	Id *string `json:"id,omitempty"`
	// The price of the billing plan.
	Price float32 `json:"price"`
	BandwidthLimits UpdateNetworkWirelessBillingRequestPlansInnerBandwidthLimits `json:"bandwidthLimits"`
	// The time limit of the pricing plan in minutes. Can be '1 hour', '1 day', '1 week', or '30 days'.
	TimeLimit string `json:"timeLimit"`
}

type _UpdateNetworkWirelessBillingRequestPlansInner UpdateNetworkWirelessBillingRequestPlansInner

// NewUpdateNetworkWirelessBillingRequestPlansInner instantiates a new UpdateNetworkWirelessBillingRequestPlansInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkWirelessBillingRequestPlansInner(price float32, bandwidthLimits UpdateNetworkWirelessBillingRequestPlansInnerBandwidthLimits, timeLimit string) *UpdateNetworkWirelessBillingRequestPlansInner {
	this := UpdateNetworkWirelessBillingRequestPlansInner{}
	this.Price = price
	this.BandwidthLimits = bandwidthLimits
	this.TimeLimit = timeLimit
	return &this
}

// NewUpdateNetworkWirelessBillingRequestPlansInnerWithDefaults instantiates a new UpdateNetworkWirelessBillingRequestPlansInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkWirelessBillingRequestPlansInnerWithDefaults() *UpdateNetworkWirelessBillingRequestPlansInner {
	this := UpdateNetworkWirelessBillingRequestPlansInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpdateNetworkWirelessBillingRequestPlansInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkWirelessBillingRequestPlansInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpdateNetworkWirelessBillingRequestPlansInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpdateNetworkWirelessBillingRequestPlansInner) SetId(v string) {
	o.Id = &v
}

// GetPrice returns the Price field value
func (o *UpdateNetworkWirelessBillingRequestPlansInner) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *UpdateNetworkWirelessBillingRequestPlansInner) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *UpdateNetworkWirelessBillingRequestPlansInner) SetPrice(v float32) {
	o.Price = v
}

// GetBandwidthLimits returns the BandwidthLimits field value
func (o *UpdateNetworkWirelessBillingRequestPlansInner) GetBandwidthLimits() UpdateNetworkWirelessBillingRequestPlansInnerBandwidthLimits {
	if o == nil {
		var ret UpdateNetworkWirelessBillingRequestPlansInnerBandwidthLimits
		return ret
	}

	return o.BandwidthLimits
}

// GetBandwidthLimitsOk returns a tuple with the BandwidthLimits field value
// and a boolean to check if the value has been set.
func (o *UpdateNetworkWirelessBillingRequestPlansInner) GetBandwidthLimitsOk() (*UpdateNetworkWirelessBillingRequestPlansInnerBandwidthLimits, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BandwidthLimits, true
}

// SetBandwidthLimits sets field value
func (o *UpdateNetworkWirelessBillingRequestPlansInner) SetBandwidthLimits(v UpdateNetworkWirelessBillingRequestPlansInnerBandwidthLimits) {
	o.BandwidthLimits = v
}

// GetTimeLimit returns the TimeLimit field value
func (o *UpdateNetworkWirelessBillingRequestPlansInner) GetTimeLimit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeLimit
}

// GetTimeLimitOk returns a tuple with the TimeLimit field value
// and a boolean to check if the value has been set.
func (o *UpdateNetworkWirelessBillingRequestPlansInner) GetTimeLimitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeLimit, true
}

// SetTimeLimit sets field value
func (o *UpdateNetworkWirelessBillingRequestPlansInner) SetTimeLimit(v string) {
	o.TimeLimit = v
}

func (o UpdateNetworkWirelessBillingRequestPlansInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkWirelessBillingRequestPlansInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["price"] = o.Price
	toSerialize["bandwidthLimits"] = o.BandwidthLimits
	toSerialize["timeLimit"] = o.TimeLimit
	return toSerialize, nil
}

func (o *UpdateNetworkWirelessBillingRequestPlansInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"price",
		"bandwidthLimits",
		"timeLimit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateNetworkWirelessBillingRequestPlansInner := _UpdateNetworkWirelessBillingRequestPlansInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateNetworkWirelessBillingRequestPlansInner)

	if err != nil {
		return err
	}

	*o = UpdateNetworkWirelessBillingRequestPlansInner(varUpdateNetworkWirelessBillingRequestPlansInner)

	return err
}

type NullableUpdateNetworkWirelessBillingRequestPlansInner struct {
	value *UpdateNetworkWirelessBillingRequestPlansInner
	isSet bool
}

func (v NullableUpdateNetworkWirelessBillingRequestPlansInner) Get() *UpdateNetworkWirelessBillingRequestPlansInner {
	return v.value
}

func (v *NullableUpdateNetworkWirelessBillingRequestPlansInner) Set(val *UpdateNetworkWirelessBillingRequestPlansInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkWirelessBillingRequestPlansInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkWirelessBillingRequestPlansInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkWirelessBillingRequestPlansInner(val *UpdateNetworkWirelessBillingRequestPlansInner) *NullableUpdateNetworkWirelessBillingRequestPlansInner {
	return &NullableUpdateNetworkWirelessBillingRequestPlansInner{value: val, isSet: true}
}

func (v NullableUpdateNetworkWirelessBillingRequestPlansInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkWirelessBillingRequestPlansInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


