/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkGroupPolicies200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkGroupPolicies200ResponseInner{}

// GetNetworkGroupPolicies200ResponseInner struct for GetNetworkGroupPolicies200ResponseInner
type GetNetworkGroupPolicies200ResponseInner struct {
	// The ID of the group policy
	GroupPolicyId *string `json:"groupPolicyId,omitempty"`
	Scheduling *GetNetworkGroupPolicies200ResponseInnerScheduling `json:"scheduling,omitempty"`
	Bandwidth *GetNetworkGroupPolicies200ResponseInnerBandwidth `json:"bandwidth,omitempty"`
	FirewallAndTrafficShaping *GetNetworkGroupPolicies200ResponseInnerFirewallAndTrafficShaping `json:"firewallAndTrafficShaping,omitempty"`
	ContentFiltering *GetNetworkGroupPolicies200ResponseInnerContentFiltering `json:"contentFiltering,omitempty"`
	// Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.
	SplashAuthSettings *string `json:"splashAuthSettings,omitempty"`
	VlanTagging *GetNetworkGroupPolicies200ResponseInnerVlanTagging `json:"vlanTagging,omitempty"`
	BonjourForwarding *GetNetworkGroupPolicies200ResponseInnerBonjourForwarding `json:"bonjourForwarding,omitempty"`
}

// NewGetNetworkGroupPolicies200ResponseInner instantiates a new GetNetworkGroupPolicies200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkGroupPolicies200ResponseInner() *GetNetworkGroupPolicies200ResponseInner {
	this := GetNetworkGroupPolicies200ResponseInner{}
	return &this
}

// NewGetNetworkGroupPolicies200ResponseInnerWithDefaults instantiates a new GetNetworkGroupPolicies200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkGroupPolicies200ResponseInnerWithDefaults() *GetNetworkGroupPolicies200ResponseInner {
	this := GetNetworkGroupPolicies200ResponseInner{}
	return &this
}

// GetGroupPolicyId returns the GroupPolicyId field value if set, zero value otherwise.
func (o *GetNetworkGroupPolicies200ResponseInner) GetGroupPolicyId() string {
	if o == nil || IsNil(o.GroupPolicyId) {
		var ret string
		return ret
	}
	return *o.GroupPolicyId
}

// GetGroupPolicyIdOk returns a tuple with the GroupPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) GetGroupPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupPolicyId) {
		return nil, false
	}
	return o.GroupPolicyId, true
}

// HasGroupPolicyId returns a boolean if a field has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) HasGroupPolicyId() bool {
	if o != nil && !IsNil(o.GroupPolicyId) {
		return true
	}

	return false
}

// SetGroupPolicyId gets a reference to the given string and assigns it to the GroupPolicyId field.
func (o *GetNetworkGroupPolicies200ResponseInner) SetGroupPolicyId(v string) {
	o.GroupPolicyId = &v
}

// GetScheduling returns the Scheduling field value if set, zero value otherwise.
func (o *GetNetworkGroupPolicies200ResponseInner) GetScheduling() GetNetworkGroupPolicies200ResponseInnerScheduling {
	if o == nil || IsNil(o.Scheduling) {
		var ret GetNetworkGroupPolicies200ResponseInnerScheduling
		return ret
	}
	return *o.Scheduling
}

// GetSchedulingOk returns a tuple with the Scheduling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) GetSchedulingOk() (*GetNetworkGroupPolicies200ResponseInnerScheduling, bool) {
	if o == nil || IsNil(o.Scheduling) {
		return nil, false
	}
	return o.Scheduling, true
}

// HasScheduling returns a boolean if a field has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) HasScheduling() bool {
	if o != nil && !IsNil(o.Scheduling) {
		return true
	}

	return false
}

// SetScheduling gets a reference to the given GetNetworkGroupPolicies200ResponseInnerScheduling and assigns it to the Scheduling field.
func (o *GetNetworkGroupPolicies200ResponseInner) SetScheduling(v GetNetworkGroupPolicies200ResponseInnerScheduling) {
	o.Scheduling = &v
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *GetNetworkGroupPolicies200ResponseInner) GetBandwidth() GetNetworkGroupPolicies200ResponseInnerBandwidth {
	if o == nil || IsNil(o.Bandwidth) {
		var ret GetNetworkGroupPolicies200ResponseInnerBandwidth
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) GetBandwidthOk() (*GetNetworkGroupPolicies200ResponseInnerBandwidth, bool) {
	if o == nil || IsNil(o.Bandwidth) {
		return nil, false
	}
	return o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) HasBandwidth() bool {
	if o != nil && !IsNil(o.Bandwidth) {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given GetNetworkGroupPolicies200ResponseInnerBandwidth and assigns it to the Bandwidth field.
func (o *GetNetworkGroupPolicies200ResponseInner) SetBandwidth(v GetNetworkGroupPolicies200ResponseInnerBandwidth) {
	o.Bandwidth = &v
}

// GetFirewallAndTrafficShaping returns the FirewallAndTrafficShaping field value if set, zero value otherwise.
func (o *GetNetworkGroupPolicies200ResponseInner) GetFirewallAndTrafficShaping() GetNetworkGroupPolicies200ResponseInnerFirewallAndTrafficShaping {
	if o == nil || IsNil(o.FirewallAndTrafficShaping) {
		var ret GetNetworkGroupPolicies200ResponseInnerFirewallAndTrafficShaping
		return ret
	}
	return *o.FirewallAndTrafficShaping
}

// GetFirewallAndTrafficShapingOk returns a tuple with the FirewallAndTrafficShaping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) GetFirewallAndTrafficShapingOk() (*GetNetworkGroupPolicies200ResponseInnerFirewallAndTrafficShaping, bool) {
	if o == nil || IsNil(o.FirewallAndTrafficShaping) {
		return nil, false
	}
	return o.FirewallAndTrafficShaping, true
}

// HasFirewallAndTrafficShaping returns a boolean if a field has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) HasFirewallAndTrafficShaping() bool {
	if o != nil && !IsNil(o.FirewallAndTrafficShaping) {
		return true
	}

	return false
}

// SetFirewallAndTrafficShaping gets a reference to the given GetNetworkGroupPolicies200ResponseInnerFirewallAndTrafficShaping and assigns it to the FirewallAndTrafficShaping field.
func (o *GetNetworkGroupPolicies200ResponseInner) SetFirewallAndTrafficShaping(v GetNetworkGroupPolicies200ResponseInnerFirewallAndTrafficShaping) {
	o.FirewallAndTrafficShaping = &v
}

// GetContentFiltering returns the ContentFiltering field value if set, zero value otherwise.
func (o *GetNetworkGroupPolicies200ResponseInner) GetContentFiltering() GetNetworkGroupPolicies200ResponseInnerContentFiltering {
	if o == nil || IsNil(o.ContentFiltering) {
		var ret GetNetworkGroupPolicies200ResponseInnerContentFiltering
		return ret
	}
	return *o.ContentFiltering
}

// GetContentFilteringOk returns a tuple with the ContentFiltering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) GetContentFilteringOk() (*GetNetworkGroupPolicies200ResponseInnerContentFiltering, bool) {
	if o == nil || IsNil(o.ContentFiltering) {
		return nil, false
	}
	return o.ContentFiltering, true
}

// HasContentFiltering returns a boolean if a field has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) HasContentFiltering() bool {
	if o != nil && !IsNil(o.ContentFiltering) {
		return true
	}

	return false
}

// SetContentFiltering gets a reference to the given GetNetworkGroupPolicies200ResponseInnerContentFiltering and assigns it to the ContentFiltering field.
func (o *GetNetworkGroupPolicies200ResponseInner) SetContentFiltering(v GetNetworkGroupPolicies200ResponseInnerContentFiltering) {
	o.ContentFiltering = &v
}

// GetSplashAuthSettings returns the SplashAuthSettings field value if set, zero value otherwise.
func (o *GetNetworkGroupPolicies200ResponseInner) GetSplashAuthSettings() string {
	if o == nil || IsNil(o.SplashAuthSettings) {
		var ret string
		return ret
	}
	return *o.SplashAuthSettings
}

// GetSplashAuthSettingsOk returns a tuple with the SplashAuthSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) GetSplashAuthSettingsOk() (*string, bool) {
	if o == nil || IsNil(o.SplashAuthSettings) {
		return nil, false
	}
	return o.SplashAuthSettings, true
}

// HasSplashAuthSettings returns a boolean if a field has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) HasSplashAuthSettings() bool {
	if o != nil && !IsNil(o.SplashAuthSettings) {
		return true
	}

	return false
}

// SetSplashAuthSettings gets a reference to the given string and assigns it to the SplashAuthSettings field.
func (o *GetNetworkGroupPolicies200ResponseInner) SetSplashAuthSettings(v string) {
	o.SplashAuthSettings = &v
}

// GetVlanTagging returns the VlanTagging field value if set, zero value otherwise.
func (o *GetNetworkGroupPolicies200ResponseInner) GetVlanTagging() GetNetworkGroupPolicies200ResponseInnerVlanTagging {
	if o == nil || IsNil(o.VlanTagging) {
		var ret GetNetworkGroupPolicies200ResponseInnerVlanTagging
		return ret
	}
	return *o.VlanTagging
}

// GetVlanTaggingOk returns a tuple with the VlanTagging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) GetVlanTaggingOk() (*GetNetworkGroupPolicies200ResponseInnerVlanTagging, bool) {
	if o == nil || IsNil(o.VlanTagging) {
		return nil, false
	}
	return o.VlanTagging, true
}

// HasVlanTagging returns a boolean if a field has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) HasVlanTagging() bool {
	if o != nil && !IsNil(o.VlanTagging) {
		return true
	}

	return false
}

// SetVlanTagging gets a reference to the given GetNetworkGroupPolicies200ResponseInnerVlanTagging and assigns it to the VlanTagging field.
func (o *GetNetworkGroupPolicies200ResponseInner) SetVlanTagging(v GetNetworkGroupPolicies200ResponseInnerVlanTagging) {
	o.VlanTagging = &v
}

// GetBonjourForwarding returns the BonjourForwarding field value if set, zero value otherwise.
func (o *GetNetworkGroupPolicies200ResponseInner) GetBonjourForwarding() GetNetworkGroupPolicies200ResponseInnerBonjourForwarding {
	if o == nil || IsNil(o.BonjourForwarding) {
		var ret GetNetworkGroupPolicies200ResponseInnerBonjourForwarding
		return ret
	}
	return *o.BonjourForwarding
}

// GetBonjourForwardingOk returns a tuple with the BonjourForwarding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) GetBonjourForwardingOk() (*GetNetworkGroupPolicies200ResponseInnerBonjourForwarding, bool) {
	if o == nil || IsNil(o.BonjourForwarding) {
		return nil, false
	}
	return o.BonjourForwarding, true
}

// HasBonjourForwarding returns a boolean if a field has been set.
func (o *GetNetworkGroupPolicies200ResponseInner) HasBonjourForwarding() bool {
	if o != nil && !IsNil(o.BonjourForwarding) {
		return true
	}

	return false
}

// SetBonjourForwarding gets a reference to the given GetNetworkGroupPolicies200ResponseInnerBonjourForwarding and assigns it to the BonjourForwarding field.
func (o *GetNetworkGroupPolicies200ResponseInner) SetBonjourForwarding(v GetNetworkGroupPolicies200ResponseInnerBonjourForwarding) {
	o.BonjourForwarding = &v
}

func (o GetNetworkGroupPolicies200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkGroupPolicies200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupPolicyId) {
		toSerialize["groupPolicyId"] = o.GroupPolicyId
	}
	if !IsNil(o.Scheduling) {
		toSerialize["scheduling"] = o.Scheduling
	}
	if !IsNil(o.Bandwidth) {
		toSerialize["bandwidth"] = o.Bandwidth
	}
	if !IsNil(o.FirewallAndTrafficShaping) {
		toSerialize["firewallAndTrafficShaping"] = o.FirewallAndTrafficShaping
	}
	if !IsNil(o.ContentFiltering) {
		toSerialize["contentFiltering"] = o.ContentFiltering
	}
	if !IsNil(o.SplashAuthSettings) {
		toSerialize["splashAuthSettings"] = o.SplashAuthSettings
	}
	if !IsNil(o.VlanTagging) {
		toSerialize["vlanTagging"] = o.VlanTagging
	}
	if !IsNil(o.BonjourForwarding) {
		toSerialize["bonjourForwarding"] = o.BonjourForwarding
	}
	return toSerialize, nil
}

type NullableGetNetworkGroupPolicies200ResponseInner struct {
	value *GetNetworkGroupPolicies200ResponseInner
	isSet bool
}

func (v NullableGetNetworkGroupPolicies200ResponseInner) Get() *GetNetworkGroupPolicies200ResponseInner {
	return v.value
}

func (v *NullableGetNetworkGroupPolicies200ResponseInner) Set(val *GetNetworkGroupPolicies200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkGroupPolicies200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkGroupPolicies200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkGroupPolicies200ResponseInner(val *GetNetworkGroupPolicies200ResponseInner) *NullableGetNetworkGroupPolicies200ResponseInner {
	return &NullableGetNetworkGroupPolicies200ResponseInner{value: val, isSet: true}
}

func (v NullableGetNetworkGroupPolicies200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkGroupPolicies200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


