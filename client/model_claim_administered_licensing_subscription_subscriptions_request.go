/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClaimAdministeredLicensingSubscriptionSubscriptionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClaimAdministeredLicensingSubscriptionSubscriptionsRequest{}

// ClaimAdministeredLicensingSubscriptionSubscriptionsRequest struct for ClaimAdministeredLicensingSubscriptionSubscriptionsRequest
type ClaimAdministeredLicensingSubscriptionSubscriptionsRequest struct {
	// The subscription's claim key
	ClaimKey string `json:"claimKey"`
	// The id of the organization claiming the subscription
	OrganizationId string `json:"organizationId"`
	// Friendly name to identify the subscription
	Name *string `json:"name,omitempty"`
	// Extra details or notes about the subscription
	Description *string `json:"description,omitempty"`
}

type _ClaimAdministeredLicensingSubscriptionSubscriptionsRequest ClaimAdministeredLicensingSubscriptionSubscriptionsRequest

// NewClaimAdministeredLicensingSubscriptionSubscriptionsRequest instantiates a new ClaimAdministeredLicensingSubscriptionSubscriptionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClaimAdministeredLicensingSubscriptionSubscriptionsRequest(claimKey string, organizationId string) *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest {
	this := ClaimAdministeredLicensingSubscriptionSubscriptionsRequest{}
	this.ClaimKey = claimKey
	this.OrganizationId = organizationId
	return &this
}

// NewClaimAdministeredLicensingSubscriptionSubscriptionsRequestWithDefaults instantiates a new ClaimAdministeredLicensingSubscriptionSubscriptionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClaimAdministeredLicensingSubscriptionSubscriptionsRequestWithDefaults() *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest {
	this := ClaimAdministeredLicensingSubscriptionSubscriptionsRequest{}
	return &this
}

// GetClaimKey returns the ClaimKey field value
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) GetClaimKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClaimKey
}

// GetClaimKeyOk returns a tuple with the ClaimKey field value
// and a boolean to check if the value has been set.
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) GetClaimKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClaimKey, true
}

// SetClaimKey sets field value
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) SetClaimKey(v string) {
	o.ClaimKey = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) SetDescription(v string) {
	o.Description = &v
}

func (o ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["claimKey"] = o.ClaimKey
	toSerialize["organizationId"] = o.OrganizationId
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

func (o *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"claimKey",
		"organizationId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClaimAdministeredLicensingSubscriptionSubscriptionsRequest := _ClaimAdministeredLicensingSubscriptionSubscriptionsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClaimAdministeredLicensingSubscriptionSubscriptionsRequest)

	if err != nil {
		return err
	}

	*o = ClaimAdministeredLicensingSubscriptionSubscriptionsRequest(varClaimAdministeredLicensingSubscriptionSubscriptionsRequest)

	return err
}

type NullableClaimAdministeredLicensingSubscriptionSubscriptionsRequest struct {
	value *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest
	isSet bool
}

func (v NullableClaimAdministeredLicensingSubscriptionSubscriptionsRequest) Get() *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest {
	return v.value
}

func (v *NullableClaimAdministeredLicensingSubscriptionSubscriptionsRequest) Set(val *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClaimAdministeredLicensingSubscriptionSubscriptionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClaimAdministeredLicensingSubscriptionSubscriptionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClaimAdministeredLicensingSubscriptionSubscriptionsRequest(val *ClaimAdministeredLicensingSubscriptionSubscriptionsRequest) *NullableClaimAdministeredLicensingSubscriptionSubscriptionsRequest {
	return &NullableClaimAdministeredLicensingSubscriptionSubscriptionsRequest{value: val, isSet: true}
}

func (v NullableClaimAdministeredLicensingSubscriptionSubscriptionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClaimAdministeredLicensingSubscriptionSubscriptionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


