/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkEvents200ResponseEventsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkEvents200ResponseEventsInner{}

// GetNetworkEvents200ResponseEventsInner struct for GetNetworkEvents200ResponseEventsInner
type GetNetworkEvents200ResponseEventsInner struct {
	// An UTC ISO8601 string of the time the event occurred at.
	OccurredAt *string `json:"occurredAt,omitempty"`
	// The ID of the network.
	NetworkId *string `json:"networkId,omitempty"`
	// The type of event being listed.
	Type *string `json:"type,omitempty"`
	// A description of the event the happened.
	Description *string `json:"description,omitempty"`
	// The category that the event type belongs to
	Category *string `json:"category,omitempty"`
	// A string identifying the client. This could be a client's MAC or IP address
	ClientId *string `json:"clientId,omitempty"`
	// A description of the client. This is usually the client's device name.
	ClientDescription *string `json:"clientDescription,omitempty"`
	// The client's MAC address.
	ClientMac *string `json:"clientMac,omitempty"`
	// The serial number of the device. Only shown if the device is an access point.
	DeviceSerial *string `json:"deviceSerial,omitempty"`
	// The name of the device. Only shown if the device is an access point.
	DeviceName *string `json:"deviceName,omitempty"`
	// The SSID number of the device.
	SsidNumber *int32 `json:"ssidNumber,omitempty"`
	EventData *GetNetworkEvents200ResponseEventsInnerEventData `json:"eventData,omitempty"`
}

// NewGetNetworkEvents200ResponseEventsInner instantiates a new GetNetworkEvents200ResponseEventsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkEvents200ResponseEventsInner() *GetNetworkEvents200ResponseEventsInner {
	this := GetNetworkEvents200ResponseEventsInner{}
	return &this
}

// NewGetNetworkEvents200ResponseEventsInnerWithDefaults instantiates a new GetNetworkEvents200ResponseEventsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkEvents200ResponseEventsInnerWithDefaults() *GetNetworkEvents200ResponseEventsInner {
	this := GetNetworkEvents200ResponseEventsInner{}
	return &this
}

// GetOccurredAt returns the OccurredAt field value if set, zero value otherwise.
func (o *GetNetworkEvents200ResponseEventsInner) GetOccurredAt() string {
	if o == nil || IsNil(o.OccurredAt) {
		var ret string
		return ret
	}
	return *o.OccurredAt
}

// GetOccurredAtOk returns a tuple with the OccurredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkEvents200ResponseEventsInner) GetOccurredAtOk() (*string, bool) {
	if o == nil || IsNil(o.OccurredAt) {
		return nil, false
	}
	return o.OccurredAt, true
}

// HasOccurredAt returns a boolean if a field has been set.
func (o *GetNetworkEvents200ResponseEventsInner) HasOccurredAt() bool {
	if o != nil && !IsNil(o.OccurredAt) {
		return true
	}

	return false
}

// SetOccurredAt gets a reference to the given string and assigns it to the OccurredAt field.
func (o *GetNetworkEvents200ResponseEventsInner) SetOccurredAt(v string) {
	o.OccurredAt = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *GetNetworkEvents200ResponseEventsInner) GetNetworkId() string {
	if o == nil || IsNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkEvents200ResponseEventsInner) GetNetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkId) {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *GetNetworkEvents200ResponseEventsInner) HasNetworkId() bool {
	if o != nil && !IsNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *GetNetworkEvents200ResponseEventsInner) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetNetworkEvents200ResponseEventsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkEvents200ResponseEventsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetNetworkEvents200ResponseEventsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetNetworkEvents200ResponseEventsInner) SetType(v string) {
	o.Type = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetNetworkEvents200ResponseEventsInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkEvents200ResponseEventsInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetNetworkEvents200ResponseEventsInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetNetworkEvents200ResponseEventsInner) SetDescription(v string) {
	o.Description = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *GetNetworkEvents200ResponseEventsInner) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkEvents200ResponseEventsInner) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *GetNetworkEvents200ResponseEventsInner) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *GetNetworkEvents200ResponseEventsInner) SetCategory(v string) {
	o.Category = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *GetNetworkEvents200ResponseEventsInner) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkEvents200ResponseEventsInner) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *GetNetworkEvents200ResponseEventsInner) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *GetNetworkEvents200ResponseEventsInner) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientDescription returns the ClientDescription field value if set, zero value otherwise.
func (o *GetNetworkEvents200ResponseEventsInner) GetClientDescription() string {
	if o == nil || IsNil(o.ClientDescription) {
		var ret string
		return ret
	}
	return *o.ClientDescription
}

// GetClientDescriptionOk returns a tuple with the ClientDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkEvents200ResponseEventsInner) GetClientDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ClientDescription) {
		return nil, false
	}
	return o.ClientDescription, true
}

// HasClientDescription returns a boolean if a field has been set.
func (o *GetNetworkEvents200ResponseEventsInner) HasClientDescription() bool {
	if o != nil && !IsNil(o.ClientDescription) {
		return true
	}

	return false
}

// SetClientDescription gets a reference to the given string and assigns it to the ClientDescription field.
func (o *GetNetworkEvents200ResponseEventsInner) SetClientDescription(v string) {
	o.ClientDescription = &v
}

// GetClientMac returns the ClientMac field value if set, zero value otherwise.
func (o *GetNetworkEvents200ResponseEventsInner) GetClientMac() string {
	if o == nil || IsNil(o.ClientMac) {
		var ret string
		return ret
	}
	return *o.ClientMac
}

// GetClientMacOk returns a tuple with the ClientMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkEvents200ResponseEventsInner) GetClientMacOk() (*string, bool) {
	if o == nil || IsNil(o.ClientMac) {
		return nil, false
	}
	return o.ClientMac, true
}

// HasClientMac returns a boolean if a field has been set.
func (o *GetNetworkEvents200ResponseEventsInner) HasClientMac() bool {
	if o != nil && !IsNil(o.ClientMac) {
		return true
	}

	return false
}

// SetClientMac gets a reference to the given string and assigns it to the ClientMac field.
func (o *GetNetworkEvents200ResponseEventsInner) SetClientMac(v string) {
	o.ClientMac = &v
}

// GetDeviceSerial returns the DeviceSerial field value if set, zero value otherwise.
func (o *GetNetworkEvents200ResponseEventsInner) GetDeviceSerial() string {
	if o == nil || IsNil(o.DeviceSerial) {
		var ret string
		return ret
	}
	return *o.DeviceSerial
}

// GetDeviceSerialOk returns a tuple with the DeviceSerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkEvents200ResponseEventsInner) GetDeviceSerialOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceSerial) {
		return nil, false
	}
	return o.DeviceSerial, true
}

// HasDeviceSerial returns a boolean if a field has been set.
func (o *GetNetworkEvents200ResponseEventsInner) HasDeviceSerial() bool {
	if o != nil && !IsNil(o.DeviceSerial) {
		return true
	}

	return false
}

// SetDeviceSerial gets a reference to the given string and assigns it to the DeviceSerial field.
func (o *GetNetworkEvents200ResponseEventsInner) SetDeviceSerial(v string) {
	o.DeviceSerial = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *GetNetworkEvents200ResponseEventsInner) GetDeviceName() string {
	if o == nil || IsNil(o.DeviceName) {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkEvents200ResponseEventsInner) GetDeviceNameOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceName) {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *GetNetworkEvents200ResponseEventsInner) HasDeviceName() bool {
	if o != nil && !IsNil(o.DeviceName) {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *GetNetworkEvents200ResponseEventsInner) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetSsidNumber returns the SsidNumber field value if set, zero value otherwise.
func (o *GetNetworkEvents200ResponseEventsInner) GetSsidNumber() int32 {
	if o == nil || IsNil(o.SsidNumber) {
		var ret int32
		return ret
	}
	return *o.SsidNumber
}

// GetSsidNumberOk returns a tuple with the SsidNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkEvents200ResponseEventsInner) GetSsidNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.SsidNumber) {
		return nil, false
	}
	return o.SsidNumber, true
}

// HasSsidNumber returns a boolean if a field has been set.
func (o *GetNetworkEvents200ResponseEventsInner) HasSsidNumber() bool {
	if o != nil && !IsNil(o.SsidNumber) {
		return true
	}

	return false
}

// SetSsidNumber gets a reference to the given int32 and assigns it to the SsidNumber field.
func (o *GetNetworkEvents200ResponseEventsInner) SetSsidNumber(v int32) {
	o.SsidNumber = &v
}

// GetEventData returns the EventData field value if set, zero value otherwise.
func (o *GetNetworkEvents200ResponseEventsInner) GetEventData() GetNetworkEvents200ResponseEventsInnerEventData {
	if o == nil || IsNil(o.EventData) {
		var ret GetNetworkEvents200ResponseEventsInnerEventData
		return ret
	}
	return *o.EventData
}

// GetEventDataOk returns a tuple with the EventData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkEvents200ResponseEventsInner) GetEventDataOk() (*GetNetworkEvents200ResponseEventsInnerEventData, bool) {
	if o == nil || IsNil(o.EventData) {
		return nil, false
	}
	return o.EventData, true
}

// HasEventData returns a boolean if a field has been set.
func (o *GetNetworkEvents200ResponseEventsInner) HasEventData() bool {
	if o != nil && !IsNil(o.EventData) {
		return true
	}

	return false
}

// SetEventData gets a reference to the given GetNetworkEvents200ResponseEventsInnerEventData and assigns it to the EventData field.
func (o *GetNetworkEvents200ResponseEventsInner) SetEventData(v GetNetworkEvents200ResponseEventsInnerEventData) {
	o.EventData = &v
}

func (o GetNetworkEvents200ResponseEventsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkEvents200ResponseEventsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OccurredAt) {
		toSerialize["occurredAt"] = o.OccurredAt
	}
	if !IsNil(o.NetworkId) {
		toSerialize["networkId"] = o.NetworkId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.ClientDescription) {
		toSerialize["clientDescription"] = o.ClientDescription
	}
	if !IsNil(o.ClientMac) {
		toSerialize["clientMac"] = o.ClientMac
	}
	if !IsNil(o.DeviceSerial) {
		toSerialize["deviceSerial"] = o.DeviceSerial
	}
	if !IsNil(o.DeviceName) {
		toSerialize["deviceName"] = o.DeviceName
	}
	if !IsNil(o.SsidNumber) {
		toSerialize["ssidNumber"] = o.SsidNumber
	}
	if !IsNil(o.EventData) {
		toSerialize["eventData"] = o.EventData
	}
	return toSerialize, nil
}

type NullableGetNetworkEvents200ResponseEventsInner struct {
	value *GetNetworkEvents200ResponseEventsInner
	isSet bool
}

func (v NullableGetNetworkEvents200ResponseEventsInner) Get() *GetNetworkEvents200ResponseEventsInner {
	return v.value
}

func (v *NullableGetNetworkEvents200ResponseEventsInner) Set(val *GetNetworkEvents200ResponseEventsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkEvents200ResponseEventsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkEvents200ResponseEventsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkEvents200ResponseEventsInner(val *GetNetworkEvents200ResponseEventsInner) *NullableGetNetworkEvents200ResponseEventsInner {
	return &NullableGetNetworkEvents200ResponseEventsInner{value: val, isSet: true}
}

func (v NullableGetNetworkEvents200ResponseEventsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkEvents200ResponseEventsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


