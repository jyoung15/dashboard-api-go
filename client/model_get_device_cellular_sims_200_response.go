/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetDeviceCellularSims200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDeviceCellularSims200Response{}

// GetDeviceCellularSims200Response struct for GetDeviceCellularSims200Response
type GetDeviceCellularSims200Response struct {
	// List of SIMs. If a SIM was previously configured and not specified in this request, it will remain unchanged.
	Sims []GetDeviceCellularSims200ResponseSimsInner `json:"sims,omitempty"`
	// Specifies the ordering of all SIMs for an MG: primary, secondary, and not-in-use (when applicable). It's required for devices with 3 or more SIMs and can be used in place of 'isPrimary' for dual-SIM devices. To indicate eSIM, use 'sim3'. Sim failover will occur only between primary and secondary sim slots.
	SimOrdering []string `json:"simOrdering,omitempty"`
	SimFailover *GetDeviceCellularSims200ResponseSimFailover `json:"simFailover,omitempty"`
}

// NewGetDeviceCellularSims200Response instantiates a new GetDeviceCellularSims200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeviceCellularSims200Response() *GetDeviceCellularSims200Response {
	this := GetDeviceCellularSims200Response{}
	return &this
}

// NewGetDeviceCellularSims200ResponseWithDefaults instantiates a new GetDeviceCellularSims200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeviceCellularSims200ResponseWithDefaults() *GetDeviceCellularSims200Response {
	this := GetDeviceCellularSims200Response{}
	return &this
}

// GetSims returns the Sims field value if set, zero value otherwise.
func (o *GetDeviceCellularSims200Response) GetSims() []GetDeviceCellularSims200ResponseSimsInner {
	if o == nil || IsNil(o.Sims) {
		var ret []GetDeviceCellularSims200ResponseSimsInner
		return ret
	}
	return o.Sims
}

// GetSimsOk returns a tuple with the Sims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceCellularSims200Response) GetSimsOk() ([]GetDeviceCellularSims200ResponseSimsInner, bool) {
	if o == nil || IsNil(o.Sims) {
		return nil, false
	}
	return o.Sims, true
}

// HasSims returns a boolean if a field has been set.
func (o *GetDeviceCellularSims200Response) HasSims() bool {
	if o != nil && !IsNil(o.Sims) {
		return true
	}

	return false
}

// SetSims gets a reference to the given []GetDeviceCellularSims200ResponseSimsInner and assigns it to the Sims field.
func (o *GetDeviceCellularSims200Response) SetSims(v []GetDeviceCellularSims200ResponseSimsInner) {
	o.Sims = v
}

// GetSimOrdering returns the SimOrdering field value if set, zero value otherwise.
func (o *GetDeviceCellularSims200Response) GetSimOrdering() []string {
	if o == nil || IsNil(o.SimOrdering) {
		var ret []string
		return ret
	}
	return o.SimOrdering
}

// GetSimOrderingOk returns a tuple with the SimOrdering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceCellularSims200Response) GetSimOrderingOk() ([]string, bool) {
	if o == nil || IsNil(o.SimOrdering) {
		return nil, false
	}
	return o.SimOrdering, true
}

// HasSimOrdering returns a boolean if a field has been set.
func (o *GetDeviceCellularSims200Response) HasSimOrdering() bool {
	if o != nil && !IsNil(o.SimOrdering) {
		return true
	}

	return false
}

// SetSimOrdering gets a reference to the given []string and assigns it to the SimOrdering field.
func (o *GetDeviceCellularSims200Response) SetSimOrdering(v []string) {
	o.SimOrdering = v
}

// GetSimFailover returns the SimFailover field value if set, zero value otherwise.
func (o *GetDeviceCellularSims200Response) GetSimFailover() GetDeviceCellularSims200ResponseSimFailover {
	if o == nil || IsNil(o.SimFailover) {
		var ret GetDeviceCellularSims200ResponseSimFailover
		return ret
	}
	return *o.SimFailover
}

// GetSimFailoverOk returns a tuple with the SimFailover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeviceCellularSims200Response) GetSimFailoverOk() (*GetDeviceCellularSims200ResponseSimFailover, bool) {
	if o == nil || IsNil(o.SimFailover) {
		return nil, false
	}
	return o.SimFailover, true
}

// HasSimFailover returns a boolean if a field has been set.
func (o *GetDeviceCellularSims200Response) HasSimFailover() bool {
	if o != nil && !IsNil(o.SimFailover) {
		return true
	}

	return false
}

// SetSimFailover gets a reference to the given GetDeviceCellularSims200ResponseSimFailover and assigns it to the SimFailover field.
func (o *GetDeviceCellularSims200Response) SetSimFailover(v GetDeviceCellularSims200ResponseSimFailover) {
	o.SimFailover = &v
}

func (o GetDeviceCellularSims200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeviceCellularSims200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sims) {
		toSerialize["sims"] = o.Sims
	}
	if !IsNil(o.SimOrdering) {
		toSerialize["simOrdering"] = o.SimOrdering
	}
	if !IsNil(o.SimFailover) {
		toSerialize["simFailover"] = o.SimFailover
	}
	return toSerialize, nil
}

type NullableGetDeviceCellularSims200Response struct {
	value *GetDeviceCellularSims200Response
	isSet bool
}

func (v NullableGetDeviceCellularSims200Response) Get() *GetDeviceCellularSims200Response {
	return v.value
}

func (v *NullableGetDeviceCellularSims200Response) Set(val *GetDeviceCellularSims200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeviceCellularSims200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeviceCellularSims200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeviceCellularSims200Response(val *GetDeviceCellularSims200Response) *NullableGetDeviceCellularSims200Response {
	return &NullableGetDeviceCellularSims200Response{value: val, isSet: true}
}

func (v NullableGetDeviceCellularSims200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeviceCellularSims200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


