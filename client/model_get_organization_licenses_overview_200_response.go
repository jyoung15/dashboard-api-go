/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetOrganizationLicensesOverview200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrganizationLicensesOverview200Response{}

// GetOrganizationLicensesOverview200Response struct for GetOrganizationLicensesOverview200Response
type GetOrganizationLicensesOverview200Response struct {
	// License status (Co-termination licensing only)
	Status *string `json:"status,omitempty"`
	// License expiration date (Co-termination licensing only)
	ExpirationDate *string `json:"expirationDate,omitempty"`
	// License counts (Co-termination licensing only)
	LicensedDeviceCounts *map[string]int32 `json:"licensedDeviceCounts,omitempty"`
	// Total number of licenses (Per-device licensing only)
	LicenseCount *int32 `json:"licenseCount,omitempty"`
	States *GetOrganizationLicensesOverview200ResponseStates `json:"states,omitempty"`
	// Data by license type (Per-device licensing only)
	LicenseTypes []GetOrganizationLicensesOverview200ResponseLicenseTypesInner `json:"licenseTypes,omitempty"`
	SystemsManager *GetOrganizationLicensesOverview200ResponseSystemsManager `json:"systemsManager,omitempty"`
}

// NewGetOrganizationLicensesOverview200Response instantiates a new GetOrganizationLicensesOverview200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrganizationLicensesOverview200Response() *GetOrganizationLicensesOverview200Response {
	this := GetOrganizationLicensesOverview200Response{}
	return &this
}

// NewGetOrganizationLicensesOverview200ResponseWithDefaults instantiates a new GetOrganizationLicensesOverview200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrganizationLicensesOverview200ResponseWithDefaults() *GetOrganizationLicensesOverview200Response {
	this := GetOrganizationLicensesOverview200Response{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetOrganizationLicensesOverview200Response) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLicensesOverview200Response) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetOrganizationLicensesOverview200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetOrganizationLicensesOverview200Response) SetStatus(v string) {
	o.Status = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *GetOrganizationLicensesOverview200Response) GetExpirationDate() string {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLicensesOverview200Response) GetExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *GetOrganizationLicensesOverview200Response) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *GetOrganizationLicensesOverview200Response) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetLicensedDeviceCounts returns the LicensedDeviceCounts field value if set, zero value otherwise.
func (o *GetOrganizationLicensesOverview200Response) GetLicensedDeviceCounts() map[string]int32 {
	if o == nil || IsNil(o.LicensedDeviceCounts) {
		var ret map[string]int32
		return ret
	}
	return *o.LicensedDeviceCounts
}

// GetLicensedDeviceCountsOk returns a tuple with the LicensedDeviceCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLicensesOverview200Response) GetLicensedDeviceCountsOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.LicensedDeviceCounts) {
		return nil, false
	}
	return o.LicensedDeviceCounts, true
}

// HasLicensedDeviceCounts returns a boolean if a field has been set.
func (o *GetOrganizationLicensesOverview200Response) HasLicensedDeviceCounts() bool {
	if o != nil && !IsNil(o.LicensedDeviceCounts) {
		return true
	}

	return false
}

// SetLicensedDeviceCounts gets a reference to the given map[string]int32 and assigns it to the LicensedDeviceCounts field.
func (o *GetOrganizationLicensesOverview200Response) SetLicensedDeviceCounts(v map[string]int32) {
	o.LicensedDeviceCounts = &v
}

// GetLicenseCount returns the LicenseCount field value if set, zero value otherwise.
func (o *GetOrganizationLicensesOverview200Response) GetLicenseCount() int32 {
	if o == nil || IsNil(o.LicenseCount) {
		var ret int32
		return ret
	}
	return *o.LicenseCount
}

// GetLicenseCountOk returns a tuple with the LicenseCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLicensesOverview200Response) GetLicenseCountOk() (*int32, bool) {
	if o == nil || IsNil(o.LicenseCount) {
		return nil, false
	}
	return o.LicenseCount, true
}

// HasLicenseCount returns a boolean if a field has been set.
func (o *GetOrganizationLicensesOverview200Response) HasLicenseCount() bool {
	if o != nil && !IsNil(o.LicenseCount) {
		return true
	}

	return false
}

// SetLicenseCount gets a reference to the given int32 and assigns it to the LicenseCount field.
func (o *GetOrganizationLicensesOverview200Response) SetLicenseCount(v int32) {
	o.LicenseCount = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *GetOrganizationLicensesOverview200Response) GetStates() GetOrganizationLicensesOverview200ResponseStates {
	if o == nil || IsNil(o.States) {
		var ret GetOrganizationLicensesOverview200ResponseStates
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLicensesOverview200Response) GetStatesOk() (*GetOrganizationLicensesOverview200ResponseStates, bool) {
	if o == nil || IsNil(o.States) {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *GetOrganizationLicensesOverview200Response) HasStates() bool {
	if o != nil && !IsNil(o.States) {
		return true
	}

	return false
}

// SetStates gets a reference to the given GetOrganizationLicensesOverview200ResponseStates and assigns it to the States field.
func (o *GetOrganizationLicensesOverview200Response) SetStates(v GetOrganizationLicensesOverview200ResponseStates) {
	o.States = &v
}

// GetLicenseTypes returns the LicenseTypes field value if set, zero value otherwise.
func (o *GetOrganizationLicensesOverview200Response) GetLicenseTypes() []GetOrganizationLicensesOverview200ResponseLicenseTypesInner {
	if o == nil || IsNil(o.LicenseTypes) {
		var ret []GetOrganizationLicensesOverview200ResponseLicenseTypesInner
		return ret
	}
	return o.LicenseTypes
}

// GetLicenseTypesOk returns a tuple with the LicenseTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLicensesOverview200Response) GetLicenseTypesOk() ([]GetOrganizationLicensesOverview200ResponseLicenseTypesInner, bool) {
	if o == nil || IsNil(o.LicenseTypes) {
		return nil, false
	}
	return o.LicenseTypes, true
}

// HasLicenseTypes returns a boolean if a field has been set.
func (o *GetOrganizationLicensesOverview200Response) HasLicenseTypes() bool {
	if o != nil && !IsNil(o.LicenseTypes) {
		return true
	}

	return false
}

// SetLicenseTypes gets a reference to the given []GetOrganizationLicensesOverview200ResponseLicenseTypesInner and assigns it to the LicenseTypes field.
func (o *GetOrganizationLicensesOverview200Response) SetLicenseTypes(v []GetOrganizationLicensesOverview200ResponseLicenseTypesInner) {
	o.LicenseTypes = v
}

// GetSystemsManager returns the SystemsManager field value if set, zero value otherwise.
func (o *GetOrganizationLicensesOverview200Response) GetSystemsManager() GetOrganizationLicensesOverview200ResponseSystemsManager {
	if o == nil || IsNil(o.SystemsManager) {
		var ret GetOrganizationLicensesOverview200ResponseSystemsManager
		return ret
	}
	return *o.SystemsManager
}

// GetSystemsManagerOk returns a tuple with the SystemsManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrganizationLicensesOverview200Response) GetSystemsManagerOk() (*GetOrganizationLicensesOverview200ResponseSystemsManager, bool) {
	if o == nil || IsNil(o.SystemsManager) {
		return nil, false
	}
	return o.SystemsManager, true
}

// HasSystemsManager returns a boolean if a field has been set.
func (o *GetOrganizationLicensesOverview200Response) HasSystemsManager() bool {
	if o != nil && !IsNil(o.SystemsManager) {
		return true
	}

	return false
}

// SetSystemsManager gets a reference to the given GetOrganizationLicensesOverview200ResponseSystemsManager and assigns it to the SystemsManager field.
func (o *GetOrganizationLicensesOverview200Response) SetSystemsManager(v GetOrganizationLicensesOverview200ResponseSystemsManager) {
	o.SystemsManager = &v
}

func (o GetOrganizationLicensesOverview200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrganizationLicensesOverview200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if !IsNil(o.LicensedDeviceCounts) {
		toSerialize["licensedDeviceCounts"] = o.LicensedDeviceCounts
	}
	if !IsNil(o.LicenseCount) {
		toSerialize["licenseCount"] = o.LicenseCount
	}
	if !IsNil(o.States) {
		toSerialize["states"] = o.States
	}
	if !IsNil(o.LicenseTypes) {
		toSerialize["licenseTypes"] = o.LicenseTypes
	}
	if !IsNil(o.SystemsManager) {
		toSerialize["systemsManager"] = o.SystemsManager
	}
	return toSerialize, nil
}

type NullableGetOrganizationLicensesOverview200Response struct {
	value *GetOrganizationLicensesOverview200Response
	isSet bool
}

func (v NullableGetOrganizationLicensesOverview200Response) Get() *GetOrganizationLicensesOverview200Response {
	return v.value
}

func (v *NullableGetOrganizationLicensesOverview200Response) Set(val *GetOrganizationLicensesOverview200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrganizationLicensesOverview200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrganizationLicensesOverview200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrganizationLicensesOverview200Response(val *GetOrganizationLicensesOverview200Response) *NullableGetOrganizationLicensesOverview200Response {
	return &NullableGetOrganizationLicensesOverview200Response{value: val, isSet: true}
}

func (v NullableGetOrganizationLicensesOverview200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrganizationLicensesOverview200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


