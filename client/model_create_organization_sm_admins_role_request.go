/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateOrganizationSmAdminsRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrganizationSmAdminsRoleRequest{}

// CreateOrganizationSmAdminsRoleRequest struct for CreateOrganizationSmAdminsRoleRequest
type CreateOrganizationSmAdminsRoleRequest struct {
	// The name of the Limited Access Role
	Name string `json:"name"`
	// The scope of the Limited Access Role
	Scope *string `json:"scope,omitempty"`
	// The tags of the Limited Access Role
	Tags []string `json:"tags,omitempty"`
}

type _CreateOrganizationSmAdminsRoleRequest CreateOrganizationSmAdminsRoleRequest

// NewCreateOrganizationSmAdminsRoleRequest instantiates a new CreateOrganizationSmAdminsRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrganizationSmAdminsRoleRequest(name string) *CreateOrganizationSmAdminsRoleRequest {
	this := CreateOrganizationSmAdminsRoleRequest{}
	this.Name = name
	return &this
}

// NewCreateOrganizationSmAdminsRoleRequestWithDefaults instantiates a new CreateOrganizationSmAdminsRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrganizationSmAdminsRoleRequestWithDefaults() *CreateOrganizationSmAdminsRoleRequest {
	this := CreateOrganizationSmAdminsRoleRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateOrganizationSmAdminsRoleRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateOrganizationSmAdminsRoleRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateOrganizationSmAdminsRoleRequest) SetName(v string) {
	o.Name = v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *CreateOrganizationSmAdminsRoleRequest) GetScope() string {
	if o == nil || IsNil(o.Scope) {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationSmAdminsRoleRequest) GetScopeOk() (*string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *CreateOrganizationSmAdminsRoleRequest) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *CreateOrganizationSmAdminsRoleRequest) SetScope(v string) {
	o.Scope = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreateOrganizationSmAdminsRoleRequest) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationSmAdminsRoleRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateOrganizationSmAdminsRoleRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CreateOrganizationSmAdminsRoleRequest) SetTags(v []string) {
	o.Tags = v
}

func (o CreateOrganizationSmAdminsRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrganizationSmAdminsRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *CreateOrganizationSmAdminsRoleRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrganizationSmAdminsRoleRequest := _CreateOrganizationSmAdminsRoleRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrganizationSmAdminsRoleRequest)

	if err != nil {
		return err
	}

	*o = CreateOrganizationSmAdminsRoleRequest(varCreateOrganizationSmAdminsRoleRequest)

	return err
}

type NullableCreateOrganizationSmAdminsRoleRequest struct {
	value *CreateOrganizationSmAdminsRoleRequest
	isSet bool
}

func (v NullableCreateOrganizationSmAdminsRoleRequest) Get() *CreateOrganizationSmAdminsRoleRequest {
	return v.value
}

func (v *NullableCreateOrganizationSmAdminsRoleRequest) Set(val *CreateOrganizationSmAdminsRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrganizationSmAdminsRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrganizationSmAdminsRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrganizationSmAdminsRoleRequest(val *CreateOrganizationSmAdminsRoleRequest) *NullableCreateOrganizationSmAdminsRoleRequest {
	return &NullableCreateOrganizationSmAdminsRoleRequest{value: val, isSet: true}
}

func (v NullableCreateOrganizationSmAdminsRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrganizationSmAdminsRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


