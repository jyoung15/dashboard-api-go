/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the BindAdministeredLicensingSubscriptionSubscription200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BindAdministeredLicensingSubscriptionSubscription200Response{}

// BindAdministeredLicensingSubscriptionSubscription200Response struct for BindAdministeredLicensingSubscriptionSubscription200Response
type BindAdministeredLicensingSubscriptionSubscription200Response struct {
	// Subscription ID
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// Unbound networks
	Networks []BindAdministeredLicensingSubscriptionSubscription200ResponseNetworksInner `json:"networks,omitempty"`
	// Array of errors if failed
	Errors []string `json:"errors,omitempty"`
	// A list of entitlements required to successfully bind the networks to the subscription
	InsufficientEntitlements []GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerMissingEntitlementsInner `json:"insufficientEntitlements,omitempty"`
}

// NewBindAdministeredLicensingSubscriptionSubscription200Response instantiates a new BindAdministeredLicensingSubscriptionSubscription200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBindAdministeredLicensingSubscriptionSubscription200Response() *BindAdministeredLicensingSubscriptionSubscription200Response {
	this := BindAdministeredLicensingSubscriptionSubscription200Response{}
	return &this
}

// NewBindAdministeredLicensingSubscriptionSubscription200ResponseWithDefaults instantiates a new BindAdministeredLicensingSubscriptionSubscription200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBindAdministeredLicensingSubscriptionSubscription200ResponseWithDefaults() *BindAdministeredLicensingSubscriptionSubscription200Response {
	this := BindAdministeredLicensingSubscriptionSubscription200Response{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) GetNetworks() []BindAdministeredLicensingSubscriptionSubscription200ResponseNetworksInner {
	if o == nil || IsNil(o.Networks) {
		var ret []BindAdministeredLicensingSubscriptionSubscription200ResponseNetworksInner
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) GetNetworksOk() ([]BindAdministeredLicensingSubscriptionSubscription200ResponseNetworksInner, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) HasNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []BindAdministeredLicensingSubscriptionSubscription200ResponseNetworksInner and assigns it to the Networks field.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) SetNetworks(v []BindAdministeredLicensingSubscriptionSubscription200ResponseNetworksInner) {
	o.Networks = v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) GetErrors() []string {
	if o == nil || IsNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) SetErrors(v []string) {
	o.Errors = v
}

// GetInsufficientEntitlements returns the InsufficientEntitlements field value if set, zero value otherwise.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) GetInsufficientEntitlements() []GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerMissingEntitlementsInner {
	if o == nil || IsNil(o.InsufficientEntitlements) {
		var ret []GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerMissingEntitlementsInner
		return ret
	}
	return o.InsufficientEntitlements
}

// GetInsufficientEntitlementsOk returns a tuple with the InsufficientEntitlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) GetInsufficientEntitlementsOk() ([]GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerMissingEntitlementsInner, bool) {
	if o == nil || IsNil(o.InsufficientEntitlements) {
		return nil, false
	}
	return o.InsufficientEntitlements, true
}

// HasInsufficientEntitlements returns a boolean if a field has been set.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) HasInsufficientEntitlements() bool {
	if o != nil && !IsNil(o.InsufficientEntitlements) {
		return true
	}

	return false
}

// SetInsufficientEntitlements gets a reference to the given []GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerMissingEntitlementsInner and assigns it to the InsufficientEntitlements field.
func (o *BindAdministeredLicensingSubscriptionSubscription200Response) SetInsufficientEntitlements(v []GetAdministeredLicensingSubscriptionSubscriptionsComplianceStatuses200ResponseInnerViolationsByProductClassInnerMissingEntitlementsInner) {
	o.InsufficientEntitlements = v
}

func (o BindAdministeredLicensingSubscriptionSubscription200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BindAdministeredLicensingSubscriptionSubscription200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.InsufficientEntitlements) {
		toSerialize["insufficientEntitlements"] = o.InsufficientEntitlements
	}
	return toSerialize, nil
}

type NullableBindAdministeredLicensingSubscriptionSubscription200Response struct {
	value *BindAdministeredLicensingSubscriptionSubscription200Response
	isSet bool
}

func (v NullableBindAdministeredLicensingSubscriptionSubscription200Response) Get() *BindAdministeredLicensingSubscriptionSubscription200Response {
	return v.value
}

func (v *NullableBindAdministeredLicensingSubscriptionSubscription200Response) Set(val *BindAdministeredLicensingSubscriptionSubscription200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableBindAdministeredLicensingSubscriptionSubscription200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableBindAdministeredLicensingSubscriptionSubscription200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBindAdministeredLicensingSubscriptionSubscription200Response(val *BindAdministeredLicensingSubscriptionSubscription200Response) *NullableBindAdministeredLicensingSubscriptionSubscription200Response {
	return &NullableBindAdministeredLicensingSubscriptionSubscription200Response{value: val, isSet: true}
}

func (v NullableBindAdministeredLicensingSubscriptionSubscription200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBindAdministeredLicensingSubscriptionSubscription200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


