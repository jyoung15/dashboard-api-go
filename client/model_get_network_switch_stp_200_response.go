/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkSwitchStp200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkSwitchStp200Response{}

// GetNetworkSwitchStp200Response struct for GetNetworkSwitchStp200Response
type GetNetworkSwitchStp200Response struct {
	// The spanning tree protocol status in network
	RstpEnabled *bool `json:"rstpEnabled,omitempty"`
	// STP bridge priority for switches/stacks or switch templates. An empty array will clear the STP bridge priority settings.
	StpBridgePriority []GetNetworkSwitchStp200ResponseStpBridgePriorityInner `json:"stpBridgePriority,omitempty"`
}

// NewGetNetworkSwitchStp200Response instantiates a new GetNetworkSwitchStp200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkSwitchStp200Response() *GetNetworkSwitchStp200Response {
	this := GetNetworkSwitchStp200Response{}
	return &this
}

// NewGetNetworkSwitchStp200ResponseWithDefaults instantiates a new GetNetworkSwitchStp200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkSwitchStp200ResponseWithDefaults() *GetNetworkSwitchStp200Response {
	this := GetNetworkSwitchStp200Response{}
	return &this
}

// GetRstpEnabled returns the RstpEnabled field value if set, zero value otherwise.
func (o *GetNetworkSwitchStp200Response) GetRstpEnabled() bool {
	if o == nil || IsNil(o.RstpEnabled) {
		var ret bool
		return ret
	}
	return *o.RstpEnabled
}

// GetRstpEnabledOk returns a tuple with the RstpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchStp200Response) GetRstpEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.RstpEnabled) {
		return nil, false
	}
	return o.RstpEnabled, true
}

// HasRstpEnabled returns a boolean if a field has been set.
func (o *GetNetworkSwitchStp200Response) HasRstpEnabled() bool {
	if o != nil && !IsNil(o.RstpEnabled) {
		return true
	}

	return false
}

// SetRstpEnabled gets a reference to the given bool and assigns it to the RstpEnabled field.
func (o *GetNetworkSwitchStp200Response) SetRstpEnabled(v bool) {
	o.RstpEnabled = &v
}

// GetStpBridgePriority returns the StpBridgePriority field value if set, zero value otherwise.
func (o *GetNetworkSwitchStp200Response) GetStpBridgePriority() []GetNetworkSwitchStp200ResponseStpBridgePriorityInner {
	if o == nil || IsNil(o.StpBridgePriority) {
		var ret []GetNetworkSwitchStp200ResponseStpBridgePriorityInner
		return ret
	}
	return o.StpBridgePriority
}

// GetStpBridgePriorityOk returns a tuple with the StpBridgePriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchStp200Response) GetStpBridgePriorityOk() ([]GetNetworkSwitchStp200ResponseStpBridgePriorityInner, bool) {
	if o == nil || IsNil(o.StpBridgePriority) {
		return nil, false
	}
	return o.StpBridgePriority, true
}

// HasStpBridgePriority returns a boolean if a field has been set.
func (o *GetNetworkSwitchStp200Response) HasStpBridgePriority() bool {
	if o != nil && !IsNil(o.StpBridgePriority) {
		return true
	}

	return false
}

// SetStpBridgePriority gets a reference to the given []GetNetworkSwitchStp200ResponseStpBridgePriorityInner and assigns it to the StpBridgePriority field.
func (o *GetNetworkSwitchStp200Response) SetStpBridgePriority(v []GetNetworkSwitchStp200ResponseStpBridgePriorityInner) {
	o.StpBridgePriority = v
}

func (o GetNetworkSwitchStp200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkSwitchStp200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RstpEnabled) {
		toSerialize["rstpEnabled"] = o.RstpEnabled
	}
	if !IsNil(o.StpBridgePriority) {
		toSerialize["stpBridgePriority"] = o.StpBridgePriority
	}
	return toSerialize, nil
}

type NullableGetNetworkSwitchStp200Response struct {
	value *GetNetworkSwitchStp200Response
	isSet bool
}

func (v NullableGetNetworkSwitchStp200Response) Get() *GetNetworkSwitchStp200Response {
	return v.value
}

func (v *NullableGetNetworkSwitchStp200Response) Set(val *GetNetworkSwitchStp200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkSwitchStp200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkSwitchStp200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkSwitchStp200Response(val *GetNetworkSwitchStp200Response) *NullableGetNetworkSwitchStp200Response {
	return &NullableGetNetworkSwitchStp200Response{value: val, isSet: true}
}

func (v NullableGetNetworkSwitchStp200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkSwitchStp200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


