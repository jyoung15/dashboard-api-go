/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade{}

// CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade The next upgrade version for the switch network
type CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade struct {
	ToVersion *CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgradeToVersion `json:"toVersion,omitempty"`
}

// NewCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade instantiates a new CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade() *CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade {
	this := CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade{}
	return &this
}

// NewCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgradeWithDefaults instantiates a new CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgradeWithDefaults() *CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade {
	this := CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade{}
	return &this
}

// GetToVersion returns the ToVersion field value if set, zero value otherwise.
func (o *CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) GetToVersion() CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgradeToVersion {
	if o == nil || IsNil(o.ToVersion) {
		var ret CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgradeToVersion
		return ret
	}
	return *o.ToVersion
}

// GetToVersionOk returns a tuple with the ToVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) GetToVersionOk() (*CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgradeToVersion, bool) {
	if o == nil || IsNil(o.ToVersion) {
		return nil, false
	}
	return o.ToVersion, true
}

// HasToVersion returns a boolean if a field has been set.
func (o *CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) HasToVersion() bool {
	if o != nil && !IsNil(o.ToVersion) {
		return true
	}

	return false
}

// SetToVersion gets a reference to the given CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgradeToVersion and assigns it to the ToVersion field.
func (o *CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) SetToVersion(v CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgradeToVersion) {
	o.ToVersion = &v
}

func (o CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ToVersion) {
		toSerialize["toVersion"] = o.ToVersion
	}
	return toSerialize, nil
}

type NullableCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade struct {
	value *CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade
	isSet bool
}

func (v NullableCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) Get() *CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade {
	return v.value
}

func (v *NullableCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) Set(val *CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade(val *CreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) *NullableCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade {
	return &NullableCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade{value: val, isSet: true}
}

func (v NullableCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkFirmwareUpgradesStagedEventRequestProductsSwitchCatalystNextUpgrade) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


