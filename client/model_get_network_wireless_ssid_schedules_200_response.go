/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkWirelessSsidSchedules200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkWirelessSsidSchedules200Response{}

// GetNetworkWirelessSsidSchedules200Response struct for GetNetworkWirelessSsidSchedules200Response
type GetNetworkWirelessSsidSchedules200Response struct {
	// If true, the SSID outage schedule is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// List of outage ranges. Has a start date and time, and end date and time. If this parameter is passed in along with rangesInSeconds parameter, this will take precedence.
	Ranges []GetNetworkWirelessSsidSchedules200ResponseRangesInner `json:"ranges,omitempty"`
	// List of outage ranges in seconds since Sunday at Midnight. Has a start and end. If this parameter is passed in along with the ranges parameter, ranges will take precedence.
	RangesInSeconds []GetNetworkWirelessSsidSchedules200ResponseRangesInSecondsInner `json:"rangesInSeconds,omitempty"`
}

// NewGetNetworkWirelessSsidSchedules200Response instantiates a new GetNetworkWirelessSsidSchedules200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkWirelessSsidSchedules200Response() *GetNetworkWirelessSsidSchedules200Response {
	this := GetNetworkWirelessSsidSchedules200Response{}
	return &this
}

// NewGetNetworkWirelessSsidSchedules200ResponseWithDefaults instantiates a new GetNetworkWirelessSsidSchedules200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkWirelessSsidSchedules200ResponseWithDefaults() *GetNetworkWirelessSsidSchedules200Response {
	this := GetNetworkWirelessSsidSchedules200Response{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetNetworkWirelessSsidSchedules200Response) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkWirelessSsidSchedules200Response) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetNetworkWirelessSsidSchedules200Response) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetNetworkWirelessSsidSchedules200Response) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetRanges returns the Ranges field value if set, zero value otherwise.
func (o *GetNetworkWirelessSsidSchedules200Response) GetRanges() []GetNetworkWirelessSsidSchedules200ResponseRangesInner {
	if o == nil || IsNil(o.Ranges) {
		var ret []GetNetworkWirelessSsidSchedules200ResponseRangesInner
		return ret
	}
	return o.Ranges
}

// GetRangesOk returns a tuple with the Ranges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkWirelessSsidSchedules200Response) GetRangesOk() ([]GetNetworkWirelessSsidSchedules200ResponseRangesInner, bool) {
	if o == nil || IsNil(o.Ranges) {
		return nil, false
	}
	return o.Ranges, true
}

// HasRanges returns a boolean if a field has been set.
func (o *GetNetworkWirelessSsidSchedules200Response) HasRanges() bool {
	if o != nil && !IsNil(o.Ranges) {
		return true
	}

	return false
}

// SetRanges gets a reference to the given []GetNetworkWirelessSsidSchedules200ResponseRangesInner and assigns it to the Ranges field.
func (o *GetNetworkWirelessSsidSchedules200Response) SetRanges(v []GetNetworkWirelessSsidSchedules200ResponseRangesInner) {
	o.Ranges = v
}

// GetRangesInSeconds returns the RangesInSeconds field value if set, zero value otherwise.
func (o *GetNetworkWirelessSsidSchedules200Response) GetRangesInSeconds() []GetNetworkWirelessSsidSchedules200ResponseRangesInSecondsInner {
	if o == nil || IsNil(o.RangesInSeconds) {
		var ret []GetNetworkWirelessSsidSchedules200ResponseRangesInSecondsInner
		return ret
	}
	return o.RangesInSeconds
}

// GetRangesInSecondsOk returns a tuple with the RangesInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkWirelessSsidSchedules200Response) GetRangesInSecondsOk() ([]GetNetworkWirelessSsidSchedules200ResponseRangesInSecondsInner, bool) {
	if o == nil || IsNil(o.RangesInSeconds) {
		return nil, false
	}
	return o.RangesInSeconds, true
}

// HasRangesInSeconds returns a boolean if a field has been set.
func (o *GetNetworkWirelessSsidSchedules200Response) HasRangesInSeconds() bool {
	if o != nil && !IsNil(o.RangesInSeconds) {
		return true
	}

	return false
}

// SetRangesInSeconds gets a reference to the given []GetNetworkWirelessSsidSchedules200ResponseRangesInSecondsInner and assigns it to the RangesInSeconds field.
func (o *GetNetworkWirelessSsidSchedules200Response) SetRangesInSeconds(v []GetNetworkWirelessSsidSchedules200ResponseRangesInSecondsInner) {
	o.RangesInSeconds = v
}

func (o GetNetworkWirelessSsidSchedules200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkWirelessSsidSchedules200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Ranges) {
		toSerialize["ranges"] = o.Ranges
	}
	if !IsNil(o.RangesInSeconds) {
		toSerialize["rangesInSeconds"] = o.RangesInSeconds
	}
	return toSerialize, nil
}

type NullableGetNetworkWirelessSsidSchedules200Response struct {
	value *GetNetworkWirelessSsidSchedules200Response
	isSet bool
}

func (v NullableGetNetworkWirelessSsidSchedules200Response) Get() *GetNetworkWirelessSsidSchedules200Response {
	return v.value
}

func (v *NullableGetNetworkWirelessSsidSchedules200Response) Set(val *GetNetworkWirelessSsidSchedules200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkWirelessSsidSchedules200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkWirelessSsidSchedules200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkWirelessSsidSchedules200Response(val *GetNetworkWirelessSsidSchedules200Response) *NullableGetNetworkWirelessSsidSchedules200Response {
	return &NullableGetNetworkWirelessSsidSchedules200Response{value: val, isSet: true}
}

func (v NullableGetNetworkWirelessSsidSchedules200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkWirelessSsidSchedules200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


