/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkCameraWirelessProfiles200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkCameraWirelessProfiles200ResponseInner{}

// GetNetworkCameraWirelessProfiles200ResponseInner struct for GetNetworkCameraWirelessProfiles200ResponseInner
type GetNetworkCameraWirelessProfiles200ResponseInner struct {
	// The ID of the camera wireless profile.
	Id *string `json:"id,omitempty"`
	// The name of the camera wireless profile.
	Name *string `json:"name,omitempty"`
	// The count of the applied devices.
	AppliedDeviceCount *int32 `json:"appliedDeviceCount,omitempty"`
	Ssid *GetNetworkCameraWirelessProfiles200ResponseInnerSsid `json:"ssid,omitempty"`
	Identity *GetNetworkCameraWirelessProfiles200ResponseInnerIdentity `json:"identity,omitempty"`
}

// NewGetNetworkCameraWirelessProfiles200ResponseInner instantiates a new GetNetworkCameraWirelessProfiles200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkCameraWirelessProfiles200ResponseInner() *GetNetworkCameraWirelessProfiles200ResponseInner {
	this := GetNetworkCameraWirelessProfiles200ResponseInner{}
	return &this
}

// NewGetNetworkCameraWirelessProfiles200ResponseInnerWithDefaults instantiates a new GetNetworkCameraWirelessProfiles200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkCameraWirelessProfiles200ResponseInnerWithDefaults() *GetNetworkCameraWirelessProfiles200ResponseInner {
	this := GetNetworkCameraWirelessProfiles200ResponseInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) SetName(v string) {
	o.Name = &v
}

// GetAppliedDeviceCount returns the AppliedDeviceCount field value if set, zero value otherwise.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) GetAppliedDeviceCount() int32 {
	if o == nil || IsNil(o.AppliedDeviceCount) {
		var ret int32
		return ret
	}
	return *o.AppliedDeviceCount
}

// GetAppliedDeviceCountOk returns a tuple with the AppliedDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) GetAppliedDeviceCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AppliedDeviceCount) {
		return nil, false
	}
	return o.AppliedDeviceCount, true
}

// HasAppliedDeviceCount returns a boolean if a field has been set.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) HasAppliedDeviceCount() bool {
	if o != nil && !IsNil(o.AppliedDeviceCount) {
		return true
	}

	return false
}

// SetAppliedDeviceCount gets a reference to the given int32 and assigns it to the AppliedDeviceCount field.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) SetAppliedDeviceCount(v int32) {
	o.AppliedDeviceCount = &v
}

// GetSsid returns the Ssid field value if set, zero value otherwise.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) GetSsid() GetNetworkCameraWirelessProfiles200ResponseInnerSsid {
	if o == nil || IsNil(o.Ssid) {
		var ret GetNetworkCameraWirelessProfiles200ResponseInnerSsid
		return ret
	}
	return *o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) GetSsidOk() (*GetNetworkCameraWirelessProfiles200ResponseInnerSsid, bool) {
	if o == nil || IsNil(o.Ssid) {
		return nil, false
	}
	return o.Ssid, true
}

// HasSsid returns a boolean if a field has been set.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) HasSsid() bool {
	if o != nil && !IsNil(o.Ssid) {
		return true
	}

	return false
}

// SetSsid gets a reference to the given GetNetworkCameraWirelessProfiles200ResponseInnerSsid and assigns it to the Ssid field.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) SetSsid(v GetNetworkCameraWirelessProfiles200ResponseInnerSsid) {
	o.Ssid = &v
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) GetIdentity() GetNetworkCameraWirelessProfiles200ResponseInnerIdentity {
	if o == nil || IsNil(o.Identity) {
		var ret GetNetworkCameraWirelessProfiles200ResponseInnerIdentity
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) GetIdentityOk() (*GetNetworkCameraWirelessProfiles200ResponseInnerIdentity, bool) {
	if o == nil || IsNil(o.Identity) {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) HasIdentity() bool {
	if o != nil && !IsNil(o.Identity) {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given GetNetworkCameraWirelessProfiles200ResponseInnerIdentity and assigns it to the Identity field.
func (o *GetNetworkCameraWirelessProfiles200ResponseInner) SetIdentity(v GetNetworkCameraWirelessProfiles200ResponseInnerIdentity) {
	o.Identity = &v
}

func (o GetNetworkCameraWirelessProfiles200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkCameraWirelessProfiles200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AppliedDeviceCount) {
		toSerialize["appliedDeviceCount"] = o.AppliedDeviceCount
	}
	if !IsNil(o.Ssid) {
		toSerialize["ssid"] = o.Ssid
	}
	if !IsNil(o.Identity) {
		toSerialize["identity"] = o.Identity
	}
	return toSerialize, nil
}

type NullableGetNetworkCameraWirelessProfiles200ResponseInner struct {
	value *GetNetworkCameraWirelessProfiles200ResponseInner
	isSet bool
}

func (v NullableGetNetworkCameraWirelessProfiles200ResponseInner) Get() *GetNetworkCameraWirelessProfiles200ResponseInner {
	return v.value
}

func (v *NullableGetNetworkCameraWirelessProfiles200ResponseInner) Set(val *GetNetworkCameraWirelessProfiles200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkCameraWirelessProfiles200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkCameraWirelessProfiles200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkCameraWirelessProfiles200ResponseInner(val *GetNetworkCameraWirelessProfiles200ResponseInner) *NullableGetNetworkCameraWirelessProfiles200ResponseInner {
	return &NullableGetNetworkCameraWirelessProfiles200ResponseInner{value: val, isSet: true}
}

func (v NullableGetNetworkCameraWirelessProfiles200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkCameraWirelessProfiles200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


