/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkSensorAlertsCurrentOverviewByMetric200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkSensorAlertsCurrentOverviewByMetric200Response{}

// GetNetworkSensorAlertsCurrentOverviewByMetric200Response struct for GetNetworkSensorAlertsCurrentOverviewByMetric200Response
type GetNetworkSensorAlertsCurrentOverviewByMetric200Response struct {
	// List of metrics that are supported for alerts, based on available sensor devices in the network
	SupportedMetrics []string `json:"supportedMetrics,omitempty"`
	Counts *GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts `json:"counts,omitempty"`
}

// NewGetNetworkSensorAlertsCurrentOverviewByMetric200Response instantiates a new GetNetworkSensorAlertsCurrentOverviewByMetric200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkSensorAlertsCurrentOverviewByMetric200Response() *GetNetworkSensorAlertsCurrentOverviewByMetric200Response {
	this := GetNetworkSensorAlertsCurrentOverviewByMetric200Response{}
	return &this
}

// NewGetNetworkSensorAlertsCurrentOverviewByMetric200ResponseWithDefaults instantiates a new GetNetworkSensorAlertsCurrentOverviewByMetric200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkSensorAlertsCurrentOverviewByMetric200ResponseWithDefaults() *GetNetworkSensorAlertsCurrentOverviewByMetric200Response {
	this := GetNetworkSensorAlertsCurrentOverviewByMetric200Response{}
	return &this
}

// GetSupportedMetrics returns the SupportedMetrics field value if set, zero value otherwise.
func (o *GetNetworkSensorAlertsCurrentOverviewByMetric200Response) GetSupportedMetrics() []string {
	if o == nil || IsNil(o.SupportedMetrics) {
		var ret []string
		return ret
	}
	return o.SupportedMetrics
}

// GetSupportedMetricsOk returns a tuple with the SupportedMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSensorAlertsCurrentOverviewByMetric200Response) GetSupportedMetricsOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedMetrics) {
		return nil, false
	}
	return o.SupportedMetrics, true
}

// HasSupportedMetrics returns a boolean if a field has been set.
func (o *GetNetworkSensorAlertsCurrentOverviewByMetric200Response) HasSupportedMetrics() bool {
	if o != nil && !IsNil(o.SupportedMetrics) {
		return true
	}

	return false
}

// SetSupportedMetrics gets a reference to the given []string and assigns it to the SupportedMetrics field.
func (o *GetNetworkSensorAlertsCurrentOverviewByMetric200Response) SetSupportedMetrics(v []string) {
	o.SupportedMetrics = v
}

// GetCounts returns the Counts field value if set, zero value otherwise.
func (o *GetNetworkSensorAlertsCurrentOverviewByMetric200Response) GetCounts() GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts {
	if o == nil || IsNil(o.Counts) {
		var ret GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts
		return ret
	}
	return *o.Counts
}

// GetCountsOk returns a tuple with the Counts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSensorAlertsCurrentOverviewByMetric200Response) GetCountsOk() (*GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts, bool) {
	if o == nil || IsNil(o.Counts) {
		return nil, false
	}
	return o.Counts, true
}

// HasCounts returns a boolean if a field has been set.
func (o *GetNetworkSensorAlertsCurrentOverviewByMetric200Response) HasCounts() bool {
	if o != nil && !IsNil(o.Counts) {
		return true
	}

	return false
}

// SetCounts gets a reference to the given GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts and assigns it to the Counts field.
func (o *GetNetworkSensorAlertsCurrentOverviewByMetric200Response) SetCounts(v GetNetworkSensorAlertsCurrentOverviewByMetric200ResponseCounts) {
	o.Counts = &v
}

func (o GetNetworkSensorAlertsCurrentOverviewByMetric200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkSensorAlertsCurrentOverviewByMetric200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SupportedMetrics) {
		toSerialize["supportedMetrics"] = o.SupportedMetrics
	}
	if !IsNil(o.Counts) {
		toSerialize["counts"] = o.Counts
	}
	return toSerialize, nil
}

type NullableGetNetworkSensorAlertsCurrentOverviewByMetric200Response struct {
	value *GetNetworkSensorAlertsCurrentOverviewByMetric200Response
	isSet bool
}

func (v NullableGetNetworkSensorAlertsCurrentOverviewByMetric200Response) Get() *GetNetworkSensorAlertsCurrentOverviewByMetric200Response {
	return v.value
}

func (v *NullableGetNetworkSensorAlertsCurrentOverviewByMetric200Response) Set(val *GetNetworkSensorAlertsCurrentOverviewByMetric200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkSensorAlertsCurrentOverviewByMetric200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkSensorAlertsCurrentOverviewByMetric200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkSensorAlertsCurrentOverviewByMetric200Response(val *GetNetworkSensorAlertsCurrentOverviewByMetric200Response) *NullableGetNetworkSensorAlertsCurrentOverviewByMetric200Response {
	return &NullableGetNetworkSensorAlertsCurrentOverviewByMetric200Response{value: val, isSet: true}
}

func (v NullableGetNetworkSensorAlertsCurrentOverviewByMetric200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkSensorAlertsCurrentOverviewByMetric200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


