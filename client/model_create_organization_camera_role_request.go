/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateOrganizationCameraRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrganizationCameraRoleRequest{}

// CreateOrganizationCameraRoleRequest struct for CreateOrganizationCameraRoleRequest
type CreateOrganizationCameraRoleRequest struct {
	// The name of the new role. Must be unique. This parameter is required.
	Name string `json:"name"`
	// Device tag on which this specified permission is applied.
	AppliedOnDevices []CreateOrganizationCameraRoleRequestAppliedOnDevicesInner `json:"appliedOnDevices,omitempty"`
	// Network tag on which this specified permission is applied.
	AppliedOnNetworks []CreateOrganizationCameraRoleRequestAppliedOnNetworksInner `json:"appliedOnNetworks,omitempty"`
	// Permissions to be applied org wide.
	AppliedOrgWide []CreateOrganizationCameraRoleRequestAppliedOrgWideInner `json:"appliedOrgWide,omitempty"`
}

type _CreateOrganizationCameraRoleRequest CreateOrganizationCameraRoleRequest

// NewCreateOrganizationCameraRoleRequest instantiates a new CreateOrganizationCameraRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrganizationCameraRoleRequest(name string) *CreateOrganizationCameraRoleRequest {
	this := CreateOrganizationCameraRoleRequest{}
	this.Name = name
	return &this
}

// NewCreateOrganizationCameraRoleRequestWithDefaults instantiates a new CreateOrganizationCameraRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrganizationCameraRoleRequestWithDefaults() *CreateOrganizationCameraRoleRequest {
	this := CreateOrganizationCameraRoleRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateOrganizationCameraRoleRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateOrganizationCameraRoleRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateOrganizationCameraRoleRequest) SetName(v string) {
	o.Name = v
}

// GetAppliedOnDevices returns the AppliedOnDevices field value if set, zero value otherwise.
func (o *CreateOrganizationCameraRoleRequest) GetAppliedOnDevices() []CreateOrganizationCameraRoleRequestAppliedOnDevicesInner {
	if o == nil || IsNil(o.AppliedOnDevices) {
		var ret []CreateOrganizationCameraRoleRequestAppliedOnDevicesInner
		return ret
	}
	return o.AppliedOnDevices
}

// GetAppliedOnDevicesOk returns a tuple with the AppliedOnDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationCameraRoleRequest) GetAppliedOnDevicesOk() ([]CreateOrganizationCameraRoleRequestAppliedOnDevicesInner, bool) {
	if o == nil || IsNil(o.AppliedOnDevices) {
		return nil, false
	}
	return o.AppliedOnDevices, true
}

// HasAppliedOnDevices returns a boolean if a field has been set.
func (o *CreateOrganizationCameraRoleRequest) HasAppliedOnDevices() bool {
	if o != nil && !IsNil(o.AppliedOnDevices) {
		return true
	}

	return false
}

// SetAppliedOnDevices gets a reference to the given []CreateOrganizationCameraRoleRequestAppliedOnDevicesInner and assigns it to the AppliedOnDevices field.
func (o *CreateOrganizationCameraRoleRequest) SetAppliedOnDevices(v []CreateOrganizationCameraRoleRequestAppliedOnDevicesInner) {
	o.AppliedOnDevices = v
}

// GetAppliedOnNetworks returns the AppliedOnNetworks field value if set, zero value otherwise.
func (o *CreateOrganizationCameraRoleRequest) GetAppliedOnNetworks() []CreateOrganizationCameraRoleRequestAppliedOnNetworksInner {
	if o == nil || IsNil(o.AppliedOnNetworks) {
		var ret []CreateOrganizationCameraRoleRequestAppliedOnNetworksInner
		return ret
	}
	return o.AppliedOnNetworks
}

// GetAppliedOnNetworksOk returns a tuple with the AppliedOnNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationCameraRoleRequest) GetAppliedOnNetworksOk() ([]CreateOrganizationCameraRoleRequestAppliedOnNetworksInner, bool) {
	if o == nil || IsNil(o.AppliedOnNetworks) {
		return nil, false
	}
	return o.AppliedOnNetworks, true
}

// HasAppliedOnNetworks returns a boolean if a field has been set.
func (o *CreateOrganizationCameraRoleRequest) HasAppliedOnNetworks() bool {
	if o != nil && !IsNil(o.AppliedOnNetworks) {
		return true
	}

	return false
}

// SetAppliedOnNetworks gets a reference to the given []CreateOrganizationCameraRoleRequestAppliedOnNetworksInner and assigns it to the AppliedOnNetworks field.
func (o *CreateOrganizationCameraRoleRequest) SetAppliedOnNetworks(v []CreateOrganizationCameraRoleRequestAppliedOnNetworksInner) {
	o.AppliedOnNetworks = v
}

// GetAppliedOrgWide returns the AppliedOrgWide field value if set, zero value otherwise.
func (o *CreateOrganizationCameraRoleRequest) GetAppliedOrgWide() []CreateOrganizationCameraRoleRequestAppliedOrgWideInner {
	if o == nil || IsNil(o.AppliedOrgWide) {
		var ret []CreateOrganizationCameraRoleRequestAppliedOrgWideInner
		return ret
	}
	return o.AppliedOrgWide
}

// GetAppliedOrgWideOk returns a tuple with the AppliedOrgWide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationCameraRoleRequest) GetAppliedOrgWideOk() ([]CreateOrganizationCameraRoleRequestAppliedOrgWideInner, bool) {
	if o == nil || IsNil(o.AppliedOrgWide) {
		return nil, false
	}
	return o.AppliedOrgWide, true
}

// HasAppliedOrgWide returns a boolean if a field has been set.
func (o *CreateOrganizationCameraRoleRequest) HasAppliedOrgWide() bool {
	if o != nil && !IsNil(o.AppliedOrgWide) {
		return true
	}

	return false
}

// SetAppliedOrgWide gets a reference to the given []CreateOrganizationCameraRoleRequestAppliedOrgWideInner and assigns it to the AppliedOrgWide field.
func (o *CreateOrganizationCameraRoleRequest) SetAppliedOrgWide(v []CreateOrganizationCameraRoleRequestAppliedOrgWideInner) {
	o.AppliedOrgWide = v
}

func (o CreateOrganizationCameraRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrganizationCameraRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.AppliedOnDevices) {
		toSerialize["appliedOnDevices"] = o.AppliedOnDevices
	}
	if !IsNil(o.AppliedOnNetworks) {
		toSerialize["appliedOnNetworks"] = o.AppliedOnNetworks
	}
	if !IsNil(o.AppliedOrgWide) {
		toSerialize["appliedOrgWide"] = o.AppliedOrgWide
	}
	return toSerialize, nil
}

func (o *CreateOrganizationCameraRoleRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrganizationCameraRoleRequest := _CreateOrganizationCameraRoleRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrganizationCameraRoleRequest)

	if err != nil {
		return err
	}

	*o = CreateOrganizationCameraRoleRequest(varCreateOrganizationCameraRoleRequest)

	return err
}

type NullableCreateOrganizationCameraRoleRequest struct {
	value *CreateOrganizationCameraRoleRequest
	isSet bool
}

func (v NullableCreateOrganizationCameraRoleRequest) Get() *CreateOrganizationCameraRoleRequest {
	return v.value
}

func (v *NullableCreateOrganizationCameraRoleRequest) Set(val *CreateOrganizationCameraRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrganizationCameraRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrganizationCameraRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrganizationCameraRoleRequest(val *CreateOrganizationCameraRoleRequest) *NullableCreateOrganizationCameraRoleRequest {
	return &NullableCreateOrganizationCameraRoleRequest{value: val, isSet: true}
}

func (v NullableCreateOrganizationCameraRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrganizationCameraRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


