/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateOrganizationActionBatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrganizationActionBatchRequest{}

// CreateOrganizationActionBatchRequest struct for CreateOrganizationActionBatchRequest
type CreateOrganizationActionBatchRequest struct {
	// Set to true for immediate execution. Set to false if the action should be previewed before executing. This property cannot be unset once it is true. Defaults to false.
	Confirmed *bool `json:"confirmed,omitempty"`
	// Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch. Defaults to false.
	Synchronous *bool `json:"synchronous,omitempty"`
	// A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)
	Actions []CreateOrganizationActionBatchRequestActionsInner `json:"actions"`
	Callback *CreateDeviceLiveToolsArpTableRequestCallback `json:"callback,omitempty"`
}

type _CreateOrganizationActionBatchRequest CreateOrganizationActionBatchRequest

// NewCreateOrganizationActionBatchRequest instantiates a new CreateOrganizationActionBatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrganizationActionBatchRequest(actions []CreateOrganizationActionBatchRequestActionsInner) *CreateOrganizationActionBatchRequest {
	this := CreateOrganizationActionBatchRequest{}
	this.Actions = actions
	return &this
}

// NewCreateOrganizationActionBatchRequestWithDefaults instantiates a new CreateOrganizationActionBatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrganizationActionBatchRequestWithDefaults() *CreateOrganizationActionBatchRequest {
	this := CreateOrganizationActionBatchRequest{}
	return &this
}

// GetConfirmed returns the Confirmed field value if set, zero value otherwise.
func (o *CreateOrganizationActionBatchRequest) GetConfirmed() bool {
	if o == nil || IsNil(o.Confirmed) {
		var ret bool
		return ret
	}
	return *o.Confirmed
}

// GetConfirmedOk returns a tuple with the Confirmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationActionBatchRequest) GetConfirmedOk() (*bool, bool) {
	if o == nil || IsNil(o.Confirmed) {
		return nil, false
	}
	return o.Confirmed, true
}

// HasConfirmed returns a boolean if a field has been set.
func (o *CreateOrganizationActionBatchRequest) HasConfirmed() bool {
	if o != nil && !IsNil(o.Confirmed) {
		return true
	}

	return false
}

// SetConfirmed gets a reference to the given bool and assigns it to the Confirmed field.
func (o *CreateOrganizationActionBatchRequest) SetConfirmed(v bool) {
	o.Confirmed = &v
}

// GetSynchronous returns the Synchronous field value if set, zero value otherwise.
func (o *CreateOrganizationActionBatchRequest) GetSynchronous() bool {
	if o == nil || IsNil(o.Synchronous) {
		var ret bool
		return ret
	}
	return *o.Synchronous
}

// GetSynchronousOk returns a tuple with the Synchronous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationActionBatchRequest) GetSynchronousOk() (*bool, bool) {
	if o == nil || IsNil(o.Synchronous) {
		return nil, false
	}
	return o.Synchronous, true
}

// HasSynchronous returns a boolean if a field has been set.
func (o *CreateOrganizationActionBatchRequest) HasSynchronous() bool {
	if o != nil && !IsNil(o.Synchronous) {
		return true
	}

	return false
}

// SetSynchronous gets a reference to the given bool and assigns it to the Synchronous field.
func (o *CreateOrganizationActionBatchRequest) SetSynchronous(v bool) {
	o.Synchronous = &v
}

// GetActions returns the Actions field value
func (o *CreateOrganizationActionBatchRequest) GetActions() []CreateOrganizationActionBatchRequestActionsInner {
	if o == nil {
		var ret []CreateOrganizationActionBatchRequestActionsInner
		return ret
	}

	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value
// and a boolean to check if the value has been set.
func (o *CreateOrganizationActionBatchRequest) GetActionsOk() ([]CreateOrganizationActionBatchRequestActionsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Actions, true
}

// SetActions sets field value
func (o *CreateOrganizationActionBatchRequest) SetActions(v []CreateOrganizationActionBatchRequestActionsInner) {
	o.Actions = v
}

// GetCallback returns the Callback field value if set, zero value otherwise.
func (o *CreateOrganizationActionBatchRequest) GetCallback() CreateDeviceLiveToolsArpTableRequestCallback {
	if o == nil || IsNil(o.Callback) {
		var ret CreateDeviceLiveToolsArpTableRequestCallback
		return ret
	}
	return *o.Callback
}

// GetCallbackOk returns a tuple with the Callback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationActionBatchRequest) GetCallbackOk() (*CreateDeviceLiveToolsArpTableRequestCallback, bool) {
	if o == nil || IsNil(o.Callback) {
		return nil, false
	}
	return o.Callback, true
}

// HasCallback returns a boolean if a field has been set.
func (o *CreateOrganizationActionBatchRequest) HasCallback() bool {
	if o != nil && !IsNil(o.Callback) {
		return true
	}

	return false
}

// SetCallback gets a reference to the given CreateDeviceLiveToolsArpTableRequestCallback and assigns it to the Callback field.
func (o *CreateOrganizationActionBatchRequest) SetCallback(v CreateDeviceLiveToolsArpTableRequestCallback) {
	o.Callback = &v
}

func (o CreateOrganizationActionBatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrganizationActionBatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Confirmed) {
		toSerialize["confirmed"] = o.Confirmed
	}
	if !IsNil(o.Synchronous) {
		toSerialize["synchronous"] = o.Synchronous
	}
	toSerialize["actions"] = o.Actions
	if !IsNil(o.Callback) {
		toSerialize["callback"] = o.Callback
	}
	return toSerialize, nil
}

func (o *CreateOrganizationActionBatchRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"actions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrganizationActionBatchRequest := _CreateOrganizationActionBatchRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrganizationActionBatchRequest)

	if err != nil {
		return err
	}

	*o = CreateOrganizationActionBatchRequest(varCreateOrganizationActionBatchRequest)

	return err
}

type NullableCreateOrganizationActionBatchRequest struct {
	value *CreateOrganizationActionBatchRequest
	isSet bool
}

func (v NullableCreateOrganizationActionBatchRequest) Get() *CreateOrganizationActionBatchRequest {
	return v.value
}

func (v *NullableCreateOrganizationActionBatchRequest) Set(val *CreateOrganizationActionBatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrganizationActionBatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrganizationActionBatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrganizationActionBatchRequest(val *CreateOrganizationActionBatchRequest) *NullableCreateOrganizationActionBatchRequest {
	return &NullableCreateOrganizationActionBatchRequest{value: val, isSet: true}
}

func (v NullableCreateOrganizationActionBatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrganizationActionBatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


