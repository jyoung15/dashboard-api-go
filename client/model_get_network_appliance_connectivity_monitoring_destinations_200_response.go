/*
Meraki Dashboard API

A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetNetworkApplianceConnectivityMonitoringDestinations200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNetworkApplianceConnectivityMonitoringDestinations200Response{}

// GetNetworkApplianceConnectivityMonitoringDestinations200Response struct for GetNetworkApplianceConnectivityMonitoringDestinations200Response
type GetNetworkApplianceConnectivityMonitoringDestinations200Response struct {
	// The list of connectivity monitoring destinations
	Destinations []GetNetworkApplianceConnectivityMonitoringDestinations200ResponseDestinationsInner `json:"destinations,omitempty"`
}

// NewGetNetworkApplianceConnectivityMonitoringDestinations200Response instantiates a new GetNetworkApplianceConnectivityMonitoringDestinations200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkApplianceConnectivityMonitoringDestinations200Response() *GetNetworkApplianceConnectivityMonitoringDestinations200Response {
	this := GetNetworkApplianceConnectivityMonitoringDestinations200Response{}
	return &this
}

// NewGetNetworkApplianceConnectivityMonitoringDestinations200ResponseWithDefaults instantiates a new GetNetworkApplianceConnectivityMonitoringDestinations200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkApplianceConnectivityMonitoringDestinations200ResponseWithDefaults() *GetNetworkApplianceConnectivityMonitoringDestinations200Response {
	this := GetNetworkApplianceConnectivityMonitoringDestinations200Response{}
	return &this
}

// GetDestinations returns the Destinations field value if set, zero value otherwise.
func (o *GetNetworkApplianceConnectivityMonitoringDestinations200Response) GetDestinations() []GetNetworkApplianceConnectivityMonitoringDestinations200ResponseDestinationsInner {
	if o == nil || IsNil(o.Destinations) {
		var ret []GetNetworkApplianceConnectivityMonitoringDestinations200ResponseDestinationsInner
		return ret
	}
	return o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkApplianceConnectivityMonitoringDestinations200Response) GetDestinationsOk() ([]GetNetworkApplianceConnectivityMonitoringDestinations200ResponseDestinationsInner, bool) {
	if o == nil || IsNil(o.Destinations) {
		return nil, false
	}
	return o.Destinations, true
}

// HasDestinations returns a boolean if a field has been set.
func (o *GetNetworkApplianceConnectivityMonitoringDestinations200Response) HasDestinations() bool {
	if o != nil && !IsNil(o.Destinations) {
		return true
	}

	return false
}

// SetDestinations gets a reference to the given []GetNetworkApplianceConnectivityMonitoringDestinations200ResponseDestinationsInner and assigns it to the Destinations field.
func (o *GetNetworkApplianceConnectivityMonitoringDestinations200Response) SetDestinations(v []GetNetworkApplianceConnectivityMonitoringDestinations200ResponseDestinationsInner) {
	o.Destinations = v
}

func (o GetNetworkApplianceConnectivityMonitoringDestinations200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNetworkApplianceConnectivityMonitoringDestinations200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Destinations) {
		toSerialize["destinations"] = o.Destinations
	}
	return toSerialize, nil
}

type NullableGetNetworkApplianceConnectivityMonitoringDestinations200Response struct {
	value *GetNetworkApplianceConnectivityMonitoringDestinations200Response
	isSet bool
}

func (v NullableGetNetworkApplianceConnectivityMonitoringDestinations200Response) Get() *GetNetworkApplianceConnectivityMonitoringDestinations200Response {
	return v.value
}

func (v *NullableGetNetworkApplianceConnectivityMonitoringDestinations200Response) Set(val *GetNetworkApplianceConnectivityMonitoringDestinations200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkApplianceConnectivityMonitoringDestinations200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkApplianceConnectivityMonitoringDestinations200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkApplianceConnectivityMonitoringDestinations200Response(val *GetNetworkApplianceConnectivityMonitoringDestinations200Response) *NullableGetNetworkApplianceConnectivityMonitoringDestinations200Response {
	return &NullableGetNetworkApplianceConnectivityMonitoringDestinations200Response{value: val, isSet: true}
}

func (v NullableGetNetworkApplianceConnectivityMonitoringDestinations200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkApplianceConnectivityMonitoringDestinations200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


